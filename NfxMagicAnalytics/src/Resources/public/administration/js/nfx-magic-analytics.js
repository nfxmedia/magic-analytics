!function(){var t={552:function(){},9358:function(){},2754:function(){},2826:function(){},7424:function(){},9764:function(){},4488:function(){},8872:function(){},9398:function(){},6544:function(){},9426:function(){},7350:function(){},4706:function(){},2854:function(){},6284:function(){},1122:function(){},3556:function(){},6430:function(){},5774:function(){},6342:function(){},2614:function(){},2410:function(){},1710:function(){},3834:function(){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"content",key:"nfxAnalytics",roles:{viewer:{privileges:[Shopware.Service("privileges").getPrivileges("product.viewer"),Shopware.Service("privileges").getPrivileges("order.viewer"),Shopware.Service("privileges").getPrivileges("customer.viewer"),Shopware.Service("privileges").getPrivileges("promotion.viewer"),"system_config:read","cart:read","nfx_analytics_category_impressions:read","nfx_analytics_config:read","nfx_analytics_groups_config:read","nfx_analytics_manufacturer_impressions:read","nfx_analytics_pool:read","nfx_analytics_product_impressions:read","nfx_analytics_referer:read","nfx_analytics_search:read","nfx_analytics_visitors:read","nfx_lexicon_entry:read","nfx_lexicon_entry_translation:read","nfx_lexicon_sales_channel:read","nfx_cross_selling_also_bought:read","nfx_cross_selling_also_viewed:read","nfx_cross_selling_group:read"],dependencies:[]},editor:{privileges:["nfx_analytics_category_impressions:update","nfx_analytics_config:update","nfx_analytics_groups_config:update","nfx_analytics_manufacturer_impressions:update","nfx_analytics_pool:update","nfx_analytics_product_impressions:update","nfx_analytics_referer:update","nfx_analytics_search:update","nfx_analytics_visitors:update"],dependencies:["nfxAnalytics.viewer"]}}}).addPrivilegeMappingEntry({category:"permissions",parent:"content",key:"nfxAnalyticsDashboard",roles:{viewer:{privileges:[Shopware.Service("privileges").getPrivileges("product.viewer"),Shopware.Service("privileges").getPrivileges("order.viewer"),Shopware.Service("privileges").getPrivileges("customer.viewer"),Shopware.Service("privileges").getPrivileges("promotion.viewer"),"system_config:read","cart:read","nfx_analytics_category_impressions:read","nfx_analytics_config:read","nfx_analytics_groups_config:read","nfx_analytics_manufacturer_impressions:read","nfx_analytics_pool:read","nfx_analytics_product_impressions:read","nfx_analytics_referer:read","nfx_analytics_search:read","nfx_analytics_visitors:read","nfx_lexicon_entry:read","nfx_lexicon_entry_translation:read","nfx_lexicon_sales_channel:read","nfx_cross_selling_also_bought:read","nfx_cross_selling_also_viewed:read","nfx_cross_selling_group:read"],dependencies:[]},editor:{privileges:["nfx_analytics_category_impressions:update","nfx_analytics_config:update","nfx_analytics_groups_config:update","nfx_analytics_manufacturer_impressions:update","nfx_analytics_pool:update","nfx_analytics_product_impressions:update","nfx_analytics_referer:update","nfx_analytics_search:update","nfx_analytics_visitors:update"],dependencies:["nfxAnalyticsDashboard.viewer"]}}})},689:function(){let{Mixin:t,Context:e}=Shopware,{Criteria:a}=Shopware.Data;t.register("nfx-analytics",{inject:["repositoryFactory"],data(){return{orderStoreKey:"grid.filter.nfx.analytics.order",productStoreKey:"grid.filter.nfx.analytics.product",manufacturerFilterStatistics:["product_inactive_with_instock","products_inventory","sales_by_products","product_impressions","manufacturer_impressions","sales_by_products_filter","product_by_orders","product_low_instock","product_high_instock","products_profit","product_soon_outstock","unfinished_orders","sales_by_category","category_compare","sales_by_products_pwreturn","pickware_returns"],productFilterStatistics:["product_inactive_with_instock","products_inventory","sales_by_products","product_impressions","sales_by_products_filter","product_by_orders","product_low_instock","product_high_instock","products_profit","product_soon_outstock","unfinished_orders","sales_by_category","sales_by_products_pwreturn","pickware_returns"],affiliateFilterStatistics:["sales_all","sales_by_customergroups","sales_by_products_filter","product_by_orders","sales_by_billing_country","sales_by_billing_country_invoice","sales_by_country","sales_by_month","sales_by_month_pwreturn","sales_by_quarter","sales_by_quarter_pwreturn","sales_all_invoice","sales_all_pwreturn","sales_by_month_invoice","sales_by_quarter_invoice","sales_by_saleschannel","sales_by_salutation","sales_by_products","sales_by_manufacturer","sales_by_promotion","sales_by_promotion_others","conversion_all","conversion_by_month","sales_by_campaign","sales_by_category","category_compare","sales_by_products_pwreturn","pickware_returns","product_impressions"],notaffiliateFilterStatistics:["product_impressions","conversion_by_month","conversion_all"],campaignFilterStatistics:["sales_all","sales_by_customergroups","sales_by_products_filter","product_by_orders","sales_by_billing_country","sales_by_billing_country_invoice","sales_by_country","sales_by_month","sales_by_month_pwreturn","sales_by_quarter","sales_by_quarter_pwreturn","sales_all_invoice","sales_all_pwreturn","sales_by_month_invoice","sales_by_quarter_invoice","sales_by_saleschannel","sales_by_salutation","sales_by_products","sales_by_manufacturer","sales_by_promotion","sales_by_promotion_others","conversion_all","conversion_by_month","sales_by_affiliate","sales_by_category","category_compare","sales_by_products_pwreturn","pickware_returns"],promotionFilterStatistics:["sales_all","conversion_all","conversion_by_month","sales_by_affiliate","sales_by_billing_country","sales_by_billing_country_invoice","sales_by_country","sales_by_campaign","sales_by_month","sales_by_month_pwreturn","sales_by_quarter","sales_by_quarter_pwreturn","sales_all_invoice","sales_all_pwreturn","sales_by_month_invoice","sales_by_quarter_invoice","sales_by_customergroups","sales_by_saleschannel","sales_by_salutation"],variantParentSwitchStatistics:["products_profit","product_high_instock","product_low_instock","products_inventory","sales_by_products","product_impressions","product_by_orders","sales_by_category","sales_by_products_filter","single_product","sales_by_products_pwreturn","pickware_returns"]}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},customerGroupRepository(){return this.repositoryFactory.create("customer_group")},stateMachineRepository(){return this.repositoryFactory.create("state_machine")},userTimeZone(){return Shopware?.State?.get("session")?.currentUser?.timeZone??"UTC"}},methods:{getStatesFilterData(){let t,e={order:{},order_delivery:{},order_transaction:{}},i=new a;return i.addAssociation("states"),this.stateMachineRepository.search(i).then(a=>(Array.isArray(a)&&a.length>0&&a.forEach(a=>{["order_delivery.state","order.state","order_transaction.state"].includes(a.technicalName)&&(t=a.technicalName.replace(".state",""),a.states.forEach(a=>{e[t][a.id]=a.translated.name}))}),e))},getSalesChannelData(){let t={},e=new a;return e.addFilter(a.equalsAny("typeId",["8A243080F92E4C719546314B577CF82B","f183ee5650cf4bdb8a774337575067a6","d18beabacf894e14b507767f4358eeb0"])),this.salesChannelRepository.search(e).then(e=>(Array.isArray(e)&&e.length>0&&e.forEach(e=>{t[e.id]=e.translated.name}),t))},getCustomerGroupData(){let t={},e=new a;return this.customerGroupRepository.search(e).then(e=>(Array.isArray(e)&&e.length>0&&e.forEach(e=>{t[e.id]=e.translated.name}),t))},defaultGridSeriesData(t,e,a){return t?t.slice((e-1)*a,a*e):null},defaultChartSeriesData(t,e,a,i,n=!1,s=!1){if(!t)return null;let r=t.map(t=>s?{x:t[e],y:Math.round(t[a])}:{x:t[e],y:t[a]});return n&&r.reverse(),[{name:i,data:r}]},defaultChartSeriesDataWithDates(t,e,a,i,n=!1){if(!t)return null;let s=t.map(t=>({x:this.parseDate(t[e]),y:t[a]}));return n&&s.reverse(),[{name:i,data:s}]},pieChartOptions(t,e=null){let a={title:{text:this.$tc(t)},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}};return e&&(a.yaxis={labels:{formatter:t=>Shopware.Filter.getByName("currency")(t,e.isoCode,0)}}),a},orderLinkTarget(t){return t&&t.config&&t.config.orderLinkTarget?"_blank":null},productLinkTarget(t){return t&&t.config&&t.config.productLinkTarget?"_blank":null},orderLink(t,e,a,i,n=null){let s=this.builtOrderFilters(t,e,a,i,n);return{name:"nfx.analytics.order",query:{limit:25,page:1,label:this.$tc(i.label)+": "+t,sortBy:"orderDateTime",sortDirection:"DESC",naturalSorting:!1,[this.orderStoreKey]:encodeURI(JSON.stringify(s))}}},productLink(t,e,a,i,n=null){let s=this.builtOrderFilters(t,e,a,i,n);return{name:"nfx.analytics.product",query:{id:n,statistics:i.name,label:this.$tc(i.label)+": "+t,[this.orderStoreKey]:encodeURI(JSON.stringify(s))}}},builtOrderFilters(t,e,i,n,s=null){let r={...i};r.config={...i.config};let l,o,c=[],d=[],p={};switch(e){case"line-item":o="lineItems.productId",c.push({id:s,name:t}),(l=new a).addFilter(a.equalsAny(o,[s])),p[e+"-filter"]={criteria:l.filters,value:c};break;case"sales-channel":r.salesChannelIds=[s];break;case"customer-group":r.customerGroupIds=[s];break;case"status":r.config.blacklistedOrderStates=[s];break;case"delivery-status":r.config.blacklistedDeliveryStates=[s];break;case"payment-status":r.config.blacklistedTransactionStates=[s];break;case"payment-method":o="transactions.paymentMethod.id",c.push({id:s,name:t}),(l=new a).addFilter(a.equalsAny(o,[s])),p[e+"-filter"]={criteria:l.filters,value:c};break;case"shipping-method":o="deliveries.shippingMethod.id",c.push({id:s,name:t}),(l=new a).addFilter(a.equalsAny(o,[s])),p[e+"-filter"]={criteria:l.filters,value:c};break;case"billing-country":o="billingAddress.country.id",c.push({id:s,name:t}),(l=new a).addFilter(a.equalsAny(o,[s])),p[e+"-filter"]={criteria:l.filters,value:c};break;case"shipping-country":o="deliveries.shippingOrderAddress.country.id",c.push({id:s,name:t}),(l=new a).addFilter(a.equalsAny(o,[s])),p[e+"-filter"]={criteria:l.filters,value:c};break;case"manufacturer":o="lineItems.product.manufacturer.id",c.push({id:s,name:t}),(l=new a).addFilter(a.equalsAny(o,[s])),p[e+"-filter"]={criteria:l.filters,value:c};break;case"order-date":if(t.includes("-"))r.start=t+"T00:00:00",r.end=t+"T23:59:59";else if(t.includes("/")){let e=t.split("/"),a=parseInt(e[0],10);r.start=e[1]+"-"+e[0]+"-01T00:00:00";let i=new Date(r.start);i.setMonth(a),i.setDate(0),r.end=e[1]+"-"+e[0]+"-"+i.getDate()+"T23:59:59"}else if(t.includes(" Q")){let e=t.split(" Q");1===parseInt(e[1],10)?(r.start=e[0]+"-01-01T00:00:00",r.end=e[0]+"-03-31T23:59:59"):2===parseInt(e[1],10)?(r.start=e[0]+"-04-01T00:00:00",r.end=e[0]+"-06-30T23:59:59"):3===parseInt(e[1],10)?(r.start=e[0]+"-07-01T00:00:00",r.end=e[0]+"-09-30T23:59:59"):4===parseInt(e[1],10)&&(r.start=e[0]+"-10-01T00:00:00",r.end=e[0]+"-12-31T23:59:59")}break;case"promotion-code":o="lineItems.payload.code",(l=new a).addFilter(a.equalsAny(o,[t])),p[e+"-filter"]={criteria:l.filters,value:[t]};break;default:o=e.replace(/-./g,t=>t[1].toUpperCase()),"affiliate-code"==e&&("Kein Partner Code"==t||"No affiliate code"==t)?((l=new a).addFilter(a.equals(o,null)),p[e+"-filter"]={criteria:l.filters,value:null}):"campaign-code"==e&&("Keine Kampagne"==t||"No campaign"==t)?((l=new a).addFilter(a.equals(o,null)),p[e+"-filter"]={criteria:l.filters,value:null}):((l=new a).addFilter(a.equalsAny(o,[t])),p[e+"-filter"]={criteria:l.filters,value:[t]})}if((l=new a).addFilter(a.range("orderDateTime",{gte:r.start,lte:r.end})),p["order-date-filter"]={criteria:l.filters,value:{from:r.start,timeframe:"custom",to:r.end}},"promotion-code"!==e&&this.promotionFilterStatistics.includes(n.name)&&Array.isArray(r.promotionCodes)&&r.promotionCodes.length>0&&((l=new a).addFilter(a.equalsAny("lineItems.payload.code",r.promotionCodes)),p["promotion-code-filter"]={criteria:l.filters,value:r.promotionCodes}),"affiliate-code"!==e&&this.affiliateFilterStatistics.includes(n.name)&&Array.isArray(r.affiliateCodes)&&r.affiliateCodes.length>0&&((l=new a).addFilter(a.equalsAny("affiliateCode",r.affiliateCodes)),p["affiliate-code-filter"]={criteria:l.filters,value:r.affiliateCodes}),"campaign-code"!==e&&this.campaignFilterStatistics.includes(n.name)&&Array.isArray(r.campaignCodes)&&r.campaignCodes.length>0&&((l=new a).addFilter(a.equalsAny("campaignCode",r.campaignCodes)),p["campaign-code-filter"]={criteria:l.filters,value:r.campaignCodes}),c=[],Array.isArray(r.salesChannelIds)&&r.salesChannelIds.length>0&&(r.salesChannelIds.forEach(t=>{void 0!==r.salesChannnelFilterData[t]&&c.push({id:t,name:r.salesChannnelFilterData[t]})}),(l=new a).addFilter(a.equalsAny("salesChannelId",r.salesChannelIds)),p["sales-channel-filter"]={criteria:l.filters,value:c}),c=[],Array.isArray(r.customerGroupIds)&&r.customerGroupIds.length>0&&(r.customerGroupIds.forEach(t=>{void 0!==r.customerGroupFilterdata[t]&&c.push({id:t,name:r.customerGroupFilterdata[t]})}),(l=new a).addFilter(a.equalsAny("orderCustomer.customer.group.id",r.customerGroupIds)),p["customer-group-filter"]={criteria:l.filters,value:c}),c=[],Array.isArray(r.config.blacklistedOrderStates)&&r.config.blacklistedOrderStates.length>0){for(let[t,a]of Object.entries(r.statesFilterData.order))"status"!==e?r.config.blacklistedOrderStates.includes(t)||(c.push({id:t,name:a}),d.push(t)):r.config.blacklistedOrderStates.includes(t)&&(c.push({id:t,name:a}),d.push(t));(l=new a).addFilter(a.equalsAny("stateMachineState.id",d)),p["status-filter"]={criteria:l.filters,value:c}}if(c=[],d=[],Array.isArray(r.config.blacklistedDeliveryStates)&&r.config.blacklistedDeliveryStates.length>0){for(let[t,a]of Object.entries(r.statesFilterData.order_delivery))"delivery-status"!==e?r.config.blacklistedDeliveryStates.includes(t)||(c.push({id:t,name:a}),d.push(t)):r.config.blacklistedDeliveryStates.includes(t)&&(c.push({id:t,name:a}),d.push(t));(l=new a).addFilter(a.equalsAny("deliveries.stateMachineState.id",d)),p["delivery-status-filter"]={criteria:l.filters,value:c}}if(c=[],d=[],Array.isArray(r.config.blacklistedTransactionStates)&&r.config.blacklistedTransactionStates.length>0){for(let[t,a]of Object.entries(r.statesFilterData.order_transaction))"payment-status"!==e?r.config.blacklistedTransactionStates.includes(t)||(c.push({id:t,name:a}),d.push(t)):r.config.blacklistedTransactionStates.includes(t)&&(c.push({id:t,name:a}),d.push(t));(l=new a).addFilter(a.equalsAny("transactions.stateMachineState.id",d)),p["payment-status-filter"]={criteria:l.filters,value:c}}return p},onChangeField(t){this.isLoading=!0,this.chartType=t,this.$nextTick(()=>{this.isLoading=!1})},setOthersLabel(t){for(let e=0;e<t.length;e++)"nfx-analytics.data.others"===t[e].name&&(t[e].name=this.$tc("nfx-analytics.data.others"));return t},getCsvDownloadUrl(t,e){return`${Shopware.Context.api.apiResourcePath}/nfx/analytics/download?fileName=${t}&fileSize=${e}`},csvDownload(t,e){window.location.href=this.getCsvDownloadUrl(t,e)},parseDate(t){return new Date(t.replace(/-/g,"/").replace("T"," ").replace(/\..*|\+.*/,"")).valueOf()},onPageChange(t){this.page=t.page,this.limit=t.limit},getBasicParameters(t,e,a){let i={};return i.showVariantParent=t.showVariantParent,i.start=t.start,i.end=t.end,i.salesChannelIds=t.salesChannelIds,i.customerGroupIds=t.customerGroupIds,i.config=t.config,i.userTimeZone=Shopware.State.get("session").currentUser?.timeZone??"UTC",this.variantParentSwitchStatistics.includes(a)?i.showVariantParent=t.showVariantParent:i.showVariantParent=!1,this.productFilterStatistics.includes(a)?i.productSearchIds=t.productSearchIds??[]:i.productSearchIds=[],this.manufacturerFilterStatistics.includes(a)?i.manufacturerSearchIds=t.manufacturerSearchIds??[]:i.manufacturerSearchIds=[],this.affiliateFilterStatistics.includes(a)?i.affiliateCodes=t.affiliateCodes??[]:i.affiliateCodes=[],this.notaffiliateFilterStatistics.includes(a)?i.notaffiliateCodes=t.notaffiliateCodes??[]:i.notaffiliateCodes=[],this.campaignFilterStatistics.includes(a)?i.campaignCodes=t.campaignCodes??[]:i.campaignCodes=[],this.promotionFilterStatistics.includes(a)?i.promotionCodes=t.promotionCodes??[]:i.promotionCodes=[],i.adminLocaleLanguage=Shopware.State.getters.adminLocaleLanguage+"-"+Shopware.State.getters.adminLocaleRegion,void 0!==e?i.format=e:i.format="",i},getGridLabels(t){let e="";return t.forEach(t=>{e+=t.label+";"}),e.substring(0,e.length-1)},getMinDate(t){return new Date(t.slice(0,10).replace(/-/g,"/").replace("T"," ").replace(/\..*|\+.*/,"")).valueOf()},getMaxDate(t){return new Date(t.slice(0,10).replace(/-/g,"/").replace("T"," ").replace(/\..*|\+.*/,"")).valueOf()},updateDateRange(t,e){let a=new Date,i=new Date;if(a.setHours(0,0,0,0),i.setHours(0,0,0,0),["currentWeek","lastWeek","currentMonth","lastMonth","currentQuarter","lastQuarter","currentYear","lastYear"].includes(t)){let e=a.getDay(),n=a.getMonth(),s=a.getFullYear(),r,l,o;switch(t){case"currentWeek":l=0===e?6:e-1,a.setDate(a.getDate()-l);break;case"lastWeek":o=(l=0===e?13:e+6)-6,a.setDate(a.getDate()-l),i.setDate(i.getDate()-o);break;case"currentMonth":a.setDate(1);break;case"lastMonth":a.setMonth(n-1,1),i.setMonth(n,0);break;case"currentQuarter":r=Math.floor((n+3)/3),a.setMonth(3*r-3,1);break;case"lastQuarter":r=Math.floor((n+3)/3),a.setMonth(3*r-6,1),i.setMonth(3*r-3,0);break;case"currentYear":a.setMonth(0,1);break;case"lastYear":a.setFullYear(s-1,0,1),i.setFullYear(s-1,11,31)}}else a.setDate(a.getDate()-parseInt(t,10));return e.start=a.getFullYear()+"-"+this.monthOf(a)+"-"+this.dayOf(a)+"T00:00:00",e.end=i.getFullYear()+"-"+this.monthOf(i)+"-"+this.dayOf(i)+"T23:59:59",e.dateRange=t,e},monthOf(t){let e=t.getMonth()+1;return e<10?"0"+e.toString():e.toString()},dayOf(t){let e=t.getDate();return e<10?"0"+e.toString():e.toString()},onColumnSort(t){this.isLoading=!0;let e=null;if(this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,0===this.gridData.length){this.$nextTick(()=>{this.isLoading=!1});return}this.gridData.length>0&&this.gridData[this.gridData.length-1].name===this.$tc("nfx-analytics.data.others")&&(e=this.gridData.pop()),"ASC"===this.sortDirection?this.gridData[0]&&this.gridData[0][this.sortBy]&&"string"==typeof this.gridData[0][this.sortBy]?this.gridData.sort((t,e)=>{let a=t[this.sortBy]?.toUpperCase(),i=e[this.sortBy]?.toUpperCase();return a>i?1:a<i?-1:0}):this.gridData.sort((t,e)=>t[this.sortBy]-e[this.sortBy]):this.gridData[0]&&this.gridData[0][this.sortBy]&&"string"==typeof this.gridData[0][this.sortBy]?this.gridData.sort((t,e)=>{let a=t[this.sortBy]?.toUpperCase(),i=e[this.sortBy]?.toUpperCase();return a>i?-1:a<i?1:0}):this.gridData.sort((t,e)=>e[this.sortBy]-t[this.sortBy]),setTimeout(()=>{e&&this.gridData.push(e),this.$nextTick(()=>{this.isLoading=!1})},400)}}})},7791:function(t,e,a){var i=a(552);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("68736a90",i,!0,{})},5937:function(t,e,a){var i=a(9358);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("3e5159ce",i,!0,{})},7369:function(t,e,a){var i=a(2754);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("59968771",i,!0,{})},7933:function(t,e,a){var i=a(2826);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("9aad5118",i,!0,{})},8731:function(t,e,a){var i=a(7424);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("0a2aedd4",i,!0,{})},7303:function(t,e,a){var i=a(9764);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("555f5836",i,!0,{})},181:function(t,e,a){var i=a(4488);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("e9d245d0",i,!0,{})},9653:function(t,e,a){var i=a(8872);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("c7c9990a",i,!0,{})},5940:function(t,e,a){var i=a(9398);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("18ed6b52",i,!0,{})},7697:function(t,e,a){var i=a(6544);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("32ce47dc",i,!0,{})},3251:function(t,e,a){var i=a(9426);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("1b4abecc",i,!0,{})},3135:function(t,e,a){var i=a(7350);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("4a367acf",i,!0,{})},4355:function(t,e,a){var i=a(4706);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("717e81e3",i,!0,{})},1639:function(t,e,a){var i=a(2854);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("e3fc425a",i,!0,{})},4865:function(t,e,a){var i=a(6284);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("186de658",i,!0,{})},8979:function(t,e,a){var i=a(1122);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("be64d07c",i,!0,{})},5601:function(t,e,a){var i=a(3556);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("5ff2d08c",i,!0,{})},5639:function(t,e,a){var i=a(6430);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("667b371c",i,!0,{})},535:function(t,e,a){var i=a(5774);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("2e0fd26d",i,!0,{})},2043:function(t,e,a){var i=a(6342);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("4990b4cf",i,!0,{})},4891:function(t,e,a){var i=a(2614);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("0b34436b",i,!0,{})},9755:function(t,e,a){var i=a(2410);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("472d5da8",i,!0,{})},8191:function(t,e,a){var i=a(1710);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),(0,a(534).A)("608e2832",i,!0,{})},534:function(t,e,a){"use strict";function i(t,e){for(var a=[],i={},n=0;n<e.length;n++){var s=e[n],r=s[0],l={id:t+":"+n,css:s[1],media:s[2],sourceMap:s[3]};i[r]?i[r].parts.push(l):a.push(i[r]={id:r,parts:[l]})}return a}a.d(e,{A:function(){return y}});var n,s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},l=s&&(document.head||document.getElementsByTagName("head")[0]),o=null,c=0,d=!1,p=function(){},h=null,u="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function y(t,e,a,n){d=a,h=n||{};var s=i(t,e);return g(s),function(e){for(var a=[],n=0;n<s.length;n++){var l=r[s[n].id];l.refs--,a.push(l)}e?g(s=i(t,e)):s=[];for(var n=0;n<a.length;n++){var l=a[n];if(0===l.refs){for(var o=0;o<l.parts.length;o++)l.parts[o]();delete r[l.id]}}}}function g(t){for(var e=0;e<t.length;e++){var a=t[e],i=r[a.id];if(i){i.refs++;for(var n=0;n<i.parts.length;n++)i.parts[n](a.parts[n]);for(;n<a.parts.length;n++)i.parts.push(v(a.parts[n]));i.parts.length>a.parts.length&&(i.parts.length=a.parts.length)}else{for(var s=[],n=0;n<a.parts.length;n++)s.push(v(a.parts[n]));r[a.id]={id:a.id,refs:1,parts:s}}}}function f(){var t=document.createElement("style");return t.type="text/css",l.appendChild(t),t}function v(t){var e,a,i=document.querySelector("style["+u+'~="'+t.id+'"]');if(i){if(d)return p;i.parentNode.removeChild(i)}if(m){var n=c++;e=w.bind(null,i=o||(o=f()),n,!1),a=w.bind(null,i,n,!0)}else e=x.bind(null,i=f()),a=function(){i.parentNode.removeChild(i)};return e(t),function(i){i?(i.css!==t.css||i.media!==t.media||i.sourceMap!==t.sourceMap)&&e(t=i):a()}}var b=(n=[],function(t,e){return n[t]=e,n.filter(Boolean).join("\n")});function w(t,e,a,i){var n=a?"":i.css;if(t.styleSheet)t.styleSheet.cssText=b(e,n);else{var s=document.createTextNode(n),r=t.childNodes;r[e]&&t.removeChild(r[e]),r.length?t.insertBefore(s,r[e]):t.appendChild(s)}}function x(t,e){var a=e.css,i=e.media,n=e.sourceMap;if(i&&t.setAttribute("media",i),h.ssrId&&t.setAttribute(u,e.id),n&&(a+="\n/*# sourceURL="+n.sources[0]+" */",a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),t.styleSheet)t.styleSheet.cssText=a;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(a))}}}},e={};function a(i){var n=e[i];if(void 0!==n)return n.exports;var s=e[i]={id:i,exports:{}};return t[i](s,s.exports,a),s.exports}a.d=function(t,e){for(var i in e)a.o(e,i)&&!a.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="bundles/nfxmagicanalytics/",window?.__sw__?.assetPath&&(a.p=window.__sw__.assetPath+"/bundles/nfxmagicanalytics/"),function(){"use strict";a(689),a(5937);let{Component:t,Context:e,Mixin:i}=Shopware,{Criteria:n}=Shopware.Data;t.register("nfx-analytics-display-options",{template:'{% block nfx_analytics_content_options %}\n    <div class="nfx-analytics-display-options">\n\n        {% block nfx_analytics_content_options_sales_channel %}\n                <sw-entity-multi-id-select\n                    class="nfx-analytics-display-options-saleschannels"\n                    v-model:value="filterOptions.salesChannelIds"\n                    :label="$tc(\'nfx-analytics.component.displayOptions.saleschannel.label\')"\n                    :placeholder="$tc(\'nfx-analytics.component.displayOptions.saleschannel.placeholder\')"\n                    :repository="salesChannelRepository"\n                    :criteria="salesChannelCriteria"\n                    :isLoading="isLoading"\n                    :context="context">\n                </sw-entity-multi-id-select>\n        {% endblock %}\n\n        {% block nfx_analytics_content_options_customer_group %}\n            <sw-entity-multi-id-select\n                    class="nfx-analytics-display-options-saleschannels"\n                    v-model:value="filterOptions.customerGroupIds"\n                    :label="$tc(\'nfx-analytics.component.displayOptions.customerGroup.label\')"\n                    :placeholder="$tc(\'nfx-analytics.component.displayOptions.customerGroup.placeholder\')"\n                    :repository="customerGroupRepository"\n                    :isLoading="isLoading"\n                    :context="context">\n            </sw-entity-multi-id-select>\n        {% endblock %}\n\n        {% block nfx_analytics_content_options_date_range %}\n            <div class="nfx-analytics-display-options-daterange">\n                <sw-select-field\n                        :isLoading="isLoading"\n                        v-model:value="filterOptions.dateRange"\n                        :label="$tc(\'nfx-analytics.component.displayOptions.dateRanges.label\')"\n                        @update:value="onDateRangeChange">\n                    <option\n                            v-for="(value, option) in statisticDateRanges.options"\n                            :key="option"\n                            :value="value">\n                        {{ $tc(`nfx-analytics.component.displayOptions.dateRanges.${option}`) }}\n                    </option>\n                </sw-select-field>\n            </div>\n        {% endblock %}\n\n        {% block nfx_analytics_content_options_date_from %}\n            <sw-datepicker class="nfx-analytics-display-options-startdate start_date"\n                   :label="$tc(\'nfx-analytics.component.displayOptions.dateFrom\')"\n                   dateType="date"\n                   :config="datePickerConfig"\n                   v-model:value="filterOptions.start"\n                   required\n                   validation="required"\n                   :isLoading="isLoading"\n                   :disabled="datePickerDisabled">\n            </sw-datepicker>\n        {% endblock %}\n\n        {% block nfx_analytics_content_options_date_to %}\n            <sw-datepicker class="nfx-analytics-display-options-enddate end_date"\n                   :label="$tc(\'nfx-analytics.component.displayOptions.dateTo\')"\n                   dateType="date"\n                   :config="datePickerConfig"\n                   v-model:value="filterOptions.end"\n                   required\n                   validation="required"\n                   :isLoading="isLoading"\n                   :disabled="datePickerDisabled">\n            </sw-datepicker>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[i.getByName("nfx-analytics")],props:{filterOptions:{type:Object,required:!0}},data(){return{datePickerDisabled:!0,isLoading:!1,statisticDateRanges:{value:"30",options:{userdefined:"0","365Days":"365","180Days":"180","90Days":"90","30Days":"30","14Days":"14","7Days":"7",yesterday:"1",currentWeek:"currentWeek",lastWeek:"lastWeek",currentMonth:"currentMonth",lastMonth:"lastMonth",currentQuarter:"currentQuarter",lastQuarter:"lastQuarter",currentYear:"currentYear",lastYear:"lastYear"}}}},computed:{datePickerConfig(){return"de"===Shopware.State.getters.adminLocaleLanguage?{altFormat:"d.m.Y"}:{altFormat:"d/m/Y"}},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},customerGroupRepository(){return this.repositoryFactory.create("customer_group")},salesChannelCriteria(){let t=new n;return t.addFilter(n.equalsAny("typeId",["8A243080F92E4C719546314B577CF82B","f183ee5650cf4bdb8a774337575067a6","d18beabacf894e14b507767f4358eeb0"])),t},context(){return e.api}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,Number.isInteger(this.filterOptions.dateRange)&&(this.filterOptions.dateRange=this.filterOptions.dateRange.toString()),this.datePickerDisabled="0"!==this.filterOptions.dateRange,this.$nextTick(()=>{this.isLoading=!1})},onDateRangeChange(t){this.isLoading=!0,this.datePickerDisabled="0"!==this.filterOptions.dateRange,this.$nextTick(()=>{this.isLoading=!1})}}}),a(8731);let{Mixin:s,Component:r}=Shopware,{Criteria:l}=Shopware.Data,o="nfx.analytics.favorites";r.register("nfx-analytics-tree",{template:'{% block nfx_analytics_content_options %}\n    <div>\n\n        <div class="nfx_analytics-tree">\n            <sw-tree class="nfx_analytics-tree__inner"\n                     v-if="showTree && !isLoading"\n                     :searchable="false"\n                     :disableContextMenu="true"\n                     :onChangeRoute="changeSelectedStatistic"\n                     :items="treeItems"\n                     :activeTreeItemId="statisticId"\n                     :translationContext="\'nfx-analytics\'"\n            >\n                <template #items="{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute }">\n                    <nfx-analytics-tree-item\n                            v-for="(item, index) in treeItems"\n                            :ref="`treeGroup${item.id}`"\n                            :class="{\'is--active\' : item.data.active}"\n                            :key="item.id"\n                            :item="item"\n                            :active="item.data.active"\n                            :displayCheckbox="false"\n                            :onChangeRoute="onChangeRoute"\n                            :sortable="true"\n                            @nfx-analytics-addFavorite="addFavorite"\n                            @nfx-analytics-deleteFavorite="deleteFavorite"\n                    >\n                    </nfx-analytics-tree-item>\n                </template>\n            </sw-tree>\n        </div>\n\n        <div class="nfx_analytics-coolbaxlinks">\n            <a :href="coolbaxLink" target="_blank" rel="noopener">{{ $t(\'nfx-analytics.general.coolbaxLink\') }}</a>\n        </div>\n\n    </div>\n\n{% endblock %}\n\n',inject:["repositoryFactory"],mixins:[s.getByName("user-settings")],props:{showTree:{type:Boolean,required:!1,default:!0},activeStatisticName:{type:String,required:!1}},data(){return{isLoading:!1,statistics:[],treeItems:[],favoriteItems:[],statisticId:"",hasPickwareErpPro:!1,coolbaxLink:"https://store.shopware.com/de/search?manufacturer=3018d1831ce70ddcd3621deee9f5bc07&search=coolbax&isManufacturerPage=true&properties=00b8a0c9aacf4e8b4e085afe3819df45|ca1b9eb6b5f340b3b53694d0858e727f|cea1dbd38c8fc53eafa1a66a421897c8|67d8b30767b4fe71e53f1555703b26ce|87a78e4ead2a4528e6f81adea4caf2e4"}},computed:{disableContextMenu(){return!1},groupRepository(){return this.repositoryFactory.create("nfx_analytics_groups_config")},pluginRepository(){return this.repositoryFactory.create("plugin")},statisticsRepository(){return this.repositoryFactory.create("nfx_analytics_config")},currentUser(){return Shopware.State.get("session")?.currentUser}},created(){this.getList()},watch:{activeStatisticName(){this.unsetStatistics()}},methods:{async getList(t=!0){let e;if(this.isLoading=!0,this.hasPickwareErpPro=await this.testForPickware(),t){try{e=await this.getUserSettings(o,this.currentUser?.id)}catch(t){}e?.favorites&&(this.favoriteItems=JSON.parse(e?.favorites))}let a=new l;a.addFilter(l.equals("active",1)),a.addSorting(l.sort("position","ASC")),a.addAssociation("statistics"),a.addFilter(l.equals("statistics.active",1)),this.hasPickwareErpPro||a.addFilter(l.not("AND",[l.equals("name","pwreturn")])),this.groupRepository.search(a).then(t=>{this.getTree(t)}).catch(t=>{this.isLoading=!1})},testForPickware(){let t=new l;return t.addFilter(l.equals("active",1)),t.addFilter(l.equals("name","PickwareErpPro")),this.pluginRepository.search(t).then(t=>!!t.first()).catch(t=>!1)},getTree(t){let e=[],a=0,i,n=new l;n.addFilter(l.equals("active",1)),n.addFilter(l.equals("name","quick_overview")),this.statisticsRepository.search(n).then(n=>{n.length>0&&(e.push({data:n[0],id:a+1,name:this.$tc(n[0].label),childCount:0,active:!0,parentId:null,afterId:null}),a++,e.push({data:{active:!0},id:a+1,name:this.$tc("nfx-analytics.general.favorites"),childCount:this.favoriteItems.length,active:!1,parentId:null,afterId:a,initialOpened:!0}),a++,this.favoriteItems.length>0&&this.favoriteItems.forEach(t=>{e.push({data:t.data,id:a+1,name:t.name,childCount:0,active:!1,parentId:2,afterId:a}),a++})),t.length>0&&t.forEach(t=>{if(t.statistics&&t.statistics.length>0){let e=t.statistics.filter(t=>1===t.active);e.sort((t,e)=>t.position-e.position),t.statistics=e}if(t.statistics&&t.statistics.length>0){let n=a+1;i=0===a?null:a,e.push({data:t,id:a+1,name:this.$tc(t.label),childCount:t.statistics.length,active:!1,parentId:null,afterId:i}),a++,t.statistics.sort((t,e)=>t.position-e.position),t.statistics.forEach(t=>{e.push({data:t,id:a+1,name:this.$tc(t.label),childCount:0,active:!1,parentId:n,afterId:a}),a++})}}),this.$nextTick(()=>{this.treeItems=e,"quick_overview"===e[0].data.name&&this.$emit("nfx-statistic-selection",e[0]),this.isLoading=!1})}).catch(t=>{this.isLoading=!1})},changeSelectedStatistic(t){this.statisticId=t.data.id.toString(),"quick_overview"===t.data.data.name?this.treeItems[0].active=!0:t.parentId&&(this.treeItems[0].active=!1),t.parentId||"quick_overview"===t.data.data.name?(this.$emit("nfx-statistic-selection",t.data),document.querySelectorAll(".sw-tree-item .is--no-children").forEach(e=>{e.querySelector("span.sw-tree-item__label")&&e.querySelector("span.sw-tree-item__label").innerHTML===t.data.name?e.classList.add("is--active"):e.classList.contains("is--active")&&e.classList.remove("is--active")})):(this.$refs["treeGroup"+t.id][0].openTreeItem(),this.$refs["treeGroup"+t.id][0].getTreeItemChildren(t))},unsetStatistics(){""===this.activeStatisticName&&this.treeItems.forEach(t=>{t.active=!1})},addFavorite(t){void 0===this.favoriteItems.find(e=>e.data.id===t.data.data.id)&&(this.favoriteItems.push(t.data),this.$nextTick(()=>{try{this.saveUserSettings(o,{favorites:JSON.stringify(this.favoriteItems)},this.currentUser?.id)}catch(t){}this.getList(!1)}))},deleteFavorite(t){this.favoriteItems=this.favoriteItems.filter(e=>e.name!==t.data.name),this.$nextTick(()=>{try{this.saveUserSettings(o,{favorites:JSON.stringify(this.favoriteItems)},this.currentUser?.id)}catch(t){}this.getList(!1)})}}}),a(7369);let{Component:c,Context:d,Mixin:p}=Shopware,{Criteria:h}=Shopware.Data;c.register("nfx-analytics-more-filters",{template:'{% block nfx_analytics_content_more_filters %}\n    <div class="nfx-analytics-more-filters">\n\n        <div class="nfx-analytics-more-filters-resetall-wrap">\n            <a v-if="activeMoreFilterNumber && activeMoreFilterNumber > 0"\n               class="nfx-analytics-more-filters-resetall"\n               @click="resetAll">\n                {{ $tc(\'sw-sidebar-filter-panel.resetButton\') }}\n            </a>\n        </div>\n\n        {% block nfx_analytics_content_more_filters_affiliate %}\n            <sw-multi-select\n                v-if="affiliateFilter.options && showAffiliateFilter && !isLoading  && affiliateFilter.options.length > 0"\n                :options="affiliateFilter.options"\n                :value-property="affiliateFilter.valueProperty"\n                :label-property="affiliateFilter.labelProperty"\n                :label="$tc(\'nfx-analytics.component.displayOptions.affiliate.label\')"\n                :placeholder="$tc(\'nfx-analytics.component.displayOptions.affiliate.placeholder\')"\n                v-model:value="filterOptions.affiliateCodes"\n                @update:value="changeMultiSelectValue"\n            />\n        {% endblock %}\n\n        {% block nfx_analytics_content_more_filters_notaffiliate %}\n            <sw-multi-select\n                v-if="notaffiliateFilter.options && showNotaffiliateFilter && !isLoading  && notaffiliateFilter.options.length > 0"\n                :options="notaffiliateFilter.options"\n                :value-property="notaffiliateFilter.valueProperty"\n                :label-property="notaffiliateFilter.labelProperty"\n                :label="$tc(\'nfx-analytics.component.displayOptions.notaffiliate.label\')"\n                :placeholder="$tc(\'nfx-analytics.component.displayOptions.affiliate.placeholder\')"\n                v-model:value="filterOptions.notaffiliateCodes"\n                @update:value="changeMultiSelectValue"\n            />\n        {% endblock %}\n\n        {% block nfx_analytics_content_more_filters_campaign %}\n            <sw-multi-select\n                v-if="campaignFilter.options && showCampaignFilter && !isLoading && campaignFilter.options.length > 0"\n                :options="campaignFilter.options"\n                :value-property="campaignFilter.valueProperty"\n                :label-property="campaignFilter.labelProperty"\n                :label="$tc(\'nfx-analytics.component.displayOptions.campaign.label\')"\n                :placeholder="$tc(\'nfx-analytics.component.displayOptions.campaign.placeholder\')"\n                v-model:value="filterOptions.campaignCodes"\n                @update:value="changeMultiSelectValue"\n            />\n        {% endblock %}\n\n        {% block nfx_analytics_content_more_filters_promotion %}\n            <sw-multi-select\n                    v-if="promotionFilter.options && showPromotionFilter && !isLoading && promotionFilter.options.length > 0"\n                    :options="promotionFilter.options"\n                    :value-property="promotionFilter.valueProperty"\n                    :label-property="promotionFilter.labelProperty"\n                    :label="$tc(\'nfx-analytics.component.displayOptions.promotion.label\')"\n                    :placeholder="$tc(\'nfx-analytics.component.displayOptions.promotion.placeholder\')"\n                    v-model:value="filterOptions.promotionCodes"\n                    @update:value="changeMultiSelectValue"\n            />\n        {% endblock %}\n\n        {% block nfx_analytics_content_more_filters_product %}\n            <sw-entity-multi-id-select\n                v-if="showProductFilter && !isLoading"\n                class="nfx-analytics-more-filters-sidebar-item"\n                v-model:value="filterOptions.productSearchIds"\n                :labelProperty="productFilter.labelProperty"\n                :label="$tc(\'nfx-analytics.component.displayOptions.product.label\')"\n                :placeholder="$tc(\'nfx-analytics.component.displayOptions.product.placeholder\')"\n                advanced-selection-component="sw-advanced-selection-product"\n                :criteria="productFilterCriteria"\n                :repository="productRepository">\n            </sw-entity-multi-id-select>\n        {% endblock %}\n\n        {% block nfx_analytics_content_more_filters_manufacturer %}\n            <sw-entity-multi-id-select\n                v-if="showManufacturerFilter && !isLoading"\n                class="nfx-analytics-more-filters-sidebar-item"\n                v-model:value="filterOptions.manufacturerSearchIds"\n                :label="$tc(\'nfx-analytics.component.displayOptions.manufacturer.label\')"\n                :placeholder="$tc(\'nfx-analytics.component.displayOptions.manufacturer.placeholder\')"\n                :repository="manufacturerRepository">\n            </sw-entity-multi-id-select>\n        {% endblock %}\n\n        {% block nfx_analytics_content_options_variantParent %}\n            <sw-switch-field\n                v-if="showVariantParentSwitch && !isLoading"\n                v-model:value="filterOptions.showVariantParent"\n                :label="$tc(\'nfx-analytics.component.displayOptions.showVariantParent\')"\n                @update:value="onChangeShowParents"\n            >\n            </sw-switch-field>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[p.getByName("nfx-analytics")],props:{filterOptions:{type:Object,required:!0},activeMoreFilterNumber:{type:Number,required:!0},activeStatisticName:{type:String,required:!0}},data(){return{isLoading:!0,productFilter:{valueProperty:["name","productNumber"],labelProperty:["name","productNumber"]},affiliateFilter:{options:[],valueProperty:"key",labelProperty:"key"},notaffiliateFilter:{options:[],valueProperty:"key",labelProperty:"key"},campaignFilter:{options:[],valueProperty:"key",labelProperty:"key"},promotionFilter:{options:[],valueProperty:"key",labelProperty:"key"}}},computed:{productRepository(){return this.repositoryFactory.create("product")},orderRepository(){return this.repositoryFactory.create("order")},manufacturerRepository(){return this.repositoryFactory.create("product_manufacturer")},context(){return d.api},productFilterCriteria(){let t=new h(1,25);return this.variantParentSwitchStatistics.includes(this.activeStatisticName)&&this.filterOptions.showVariantParent&&t.addFilter(h.equals("parentId",null)),t},filterSelectCriteria(){let t=new h(1,1);return t.addAggregation(h.terms("affiliateCodes","affiliateCode",null,null,null)),t.addAggregation(h.terms("campaignCodes","campaignCode",null,null,null)),t.addAggregation(h.terms("promotionCodes","lineItems.payload.code",null,null,null)),t},showProductFilter(){return this.productFilterStatistics.includes(this.activeStatisticName)},showManufacturerFilter(){return this.manufacturerFilterStatistics.includes(this.activeStatisticName)},showAffiliateFilter(){return this.affiliateFilterStatistics.includes(this.activeStatisticName)},showNotaffiliateFilter(){return this.notaffiliateFilterStatistics.includes(this.activeStatisticName)},showCampaignFilter(){return this.campaignFilterStatistics.includes(this.activeStatisticName)},showPromotionFilter(){return this.promotionFilterStatistics.includes(this.activeStatisticName)},showVariantParentSwitch(){return this.variantParentSwitchStatistics.includes(this.activeStatisticName)}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,void 0===this.filterOptions.productSearchIds&&(this.filterOptions.productSearchIds=[]),void 0===this.filterOptions.affiliateCodes&&(this.filterOptions.affiliateCodes=[]),void 0===this.filterOptions.notaffiliateCodes&&(this.filterOptions.notaffiliateCodes=[]),void 0===this.filterOptions.campaignCodes&&(this.filterOptions.campaignCodes=[]),void 0===this.filterOptions.promotionCodes&&(this.filterOptions.promotionCodes=[]),void 0===this.filterOptions.manufacturerSearchIds&&(this.filterOptions.manufacturerSearchIds=[]),this.loadFilterValues()},loadFilterValues(){return this.orderRepository.search(this.filterSelectCriteria).then(({aggregations:t})=>{let{affiliateCodes:e,campaignCodes:a,promotionCodes:i}=t;return this.affiliateFilter.options=e?.buckets.filter(({key:t})=>t.length>0)??[],this.notaffiliateFilter.options=e?.buckets.filter(({key:t})=>t.length>0)??[],this.campaignFilter.options=a?.buckets.filter(({key:t})=>t.length>0)??[],this.promotionFilter.options=i?.buckets.filter(({key:t})=>t.length>0)??[],this.$nextTick(()=>{this.isLoading=!1}),t}).catch(()=>{this.isLoading=!1})},changeMultiSelectValue(t){this.isLoading=!0,this.$nextTick(()=>{this.isLoading=!1})},resetAll(){this.filterOptions.showVariantParent=0,this.filterOptions.productSearchIds=[],this.filterOptions.affiliateCodes=[],this.filterOptions.notaffiliateCodes=[],this.filterOptions.campaignCodes=[],this.filterOptions.manufacturerSearchIds=[],this.filterOptions.promotionCodes=[]},onChangeShowParents(){this.isLoading=!0,this.$emit("filter-changeShowParents"),this.filterOptions.productSearchIds=[],this.$nextTick(()=>{this.isLoading=!1})}}});let{Component:u}=Shopware,{Criteria:m}=Shopware.Data;u.extend("nfx-analytics-entity-multi-select","sw-entity-multi-id-select",{template:"",inject:{repositoryFactory:"repositoryFactory"},props:{repository:{type:Object,required:!1,default(){return this.repositoryFactory.create(this.entity)}},entity:{required:!0,type:String},name:{required:!0,type:String}},methods:{createdComponent(){"NfxModulAnalytics.config.blacklistedOrderStates"===this.name?(this.criteria.addAssociation("stateMachine"),this.criteria.addFilter(m.equals("stateMachine.technicalName","order.state"))):"NfxModulAnalytics.config.blacklistedTransactionStates"===this.name?(this.criteria.addAssociation("stateMachine"),this.criteria.addFilter(m.equals("stateMachine.technicalName","order_transaction.state"))):"NfxModulAnalytics.config.blacklistedDeliveryStates"===this.name?(this.criteria.addAssociation("stateMachine"),this.criteria.addFilter(m.equals("stateMachine.technicalName","order_delivery.state"))):("NfxModulAnalytics.config.defaultSaleschannels"===this.name||"NfxModulAnalytics.config.dashboardSaleschannels"===this.name)&&this.criteria.addFilter(m.equalsAny("typeId",["8A243080F92E4C719546314B577CF82B","f183ee5650cf4bdb8a774337575067a6","d18beabacf894e14b507767f4358eeb0"])),this.$super("createdComponent")}}});let{Mixin:y,Component:g,Context:f}=Shopware,{Criteria:v}=Shopware.Data;g.register("nfx-analytics-dashboard-statistics",{template:'{% block nfx_analytics_dashboard_statistics %}\n\n    <div class="nfx-analytics-content-dash" v-if="!isLoading && activeStatistics.length > 0">\n\n        <component\n            v-for="(item, index) in activeStatistics"\n            v-bind:item="item"\n            v-bind:index="index"\n            v-bind:key="item.id"\n            :is="item.parameter.componentName"\n            :activeStatistic="item"\n            :displayOptions="displayOptions"\n            :systemCurrency="systemCurrency"\n            :grossOrNet="grossOrNet"\n            :customOptions="customOptions">\n        </component>\n\n    </div>\n\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[y.getByName("user-settings")],provide(){return{defaultOptions:this.defaultOptions}},props:{dateRange:{type:Number,required:!1,default:30},nfxAnalyticsConfig:{type:Object,required:!0}},data(){return{activeStatistics:[],dashboardUserSettings:null,displayOptions:null,systemCurrency:{},isLoading:!0,grossOrNet:"gross",chartType:"pie",dashboard:!0,customOptions:null,salesChannelIds:[]}},created(){this.loadSystemCurrency(),this.createdComponent()},computed:{currentUser(){return Shopware.State.get("session")?.currentUser},currencyRepository(){return this.repositoryFactory.create("currency")},groupRepository(){return this.repositoryFactory.create("nfx_analytics_groups_config")},statisticsRepository(){return this.repositoryFactory.create("nfx_analytics_config")}},methods:{async createdComponent(){let t;this.isLoading=!0,this.displayOptions=this.defaultOptions(),this.nfxAnalyticsConfig["NfxModulAnalytics.config.grossOrNet"]&&(this.grossOrNet=this.nfxAnalyticsConfig["NfxModulAnalytics.config.grossOrNet"]),this.nfxAnalyticsConfig["NfxModulAnalytics.config.chartType"]&&(this.displayOptions.chartType=this.nfxAnalyticsConfig["NfxModulAnalytics.config.chartType"],this.chartType=this.nfxAnalyticsConfig["NfxModulAnalytics.config.chartType"]),this.nfxAnalyticsConfig["NfxModulAnalytics.config.dashboardSaleschannels"]&&(this.salesChannelIds=this.nfxAnalyticsConfig["NfxModulAnalytics.config.dashboardSaleschannels"],this.displayOptions.salesChannelIds=this.nfxAnalyticsConfig["NfxModulAnalytics.config.dashboardSaleschannels"]);let e=new v;e.addFilter(v.equals("active",1)),e.addFilter(v.multi("OR",[v.equals("parameter.dashboard.hasTable",1),v.equals("parameter.dashboard.hasChart",1)]));try{t=await this.getUserSettings("nfx.analytics.dashboard",this.currentUser?.id)}catch(t){}t?.dashboard&&(this.dashboardUserSettings=JSON.parse(t?.dashboard)??[]),this.statisticsRepository.search(e,f.api).then(t=>{t.length>0?(t.forEach(t=>{this.dashboardUserSettings&&this.dashboardUserSettings[t.id]?(this.dashboardUserSettings[t.id]?.position?t.parameter.dashboard.position=parseInt(this.dashboardUserSettings[t.id].position,10):t.parameter.dashboard.position=1,t.parameter.dashboard.showChart=this.dashboardUserSettings[t.id].showChart??!1,t.parameter.dashboard.showTable=this.dashboardUserSettings[t.id].showTable??!1,this.activeStatistics.push(t)):(t.parameter.dashboard.showChart=!1,t.parameter.dashboard.showTable=!1)}),this.$nextTick(()=>{this.activeStatistics.sort((t,e)=>t.parameter.dashboard.position-e.parameter.dashboard.position),this.$nextTick(()=>{this.isLoading=!1})})):this.isLoading=!1})},loadSystemCurrency(){return this.currencyRepository.get(Shopware.Context.app.systemCurrencyId,f.api).then(t=>{this.systemCurrency=t})},defaultOptions(){let t=new Date,e=new Date;return t.setHours(0,0,0,0),t.setDate(t.getDate()-this.dateRange),e.setDate(e.getDate()+1),e.setHours(23,59,59,0),{start:t.toISOString(),end:e.toISOString(),salesChannelIds:this.salesChannelIds,chartType:this.chartType,dashboard:this.dashboard}}}}),a(7791);let{Mixin:b,Component:w}=Shopware,{Criteria:x}=Shopware.Data,_="nfx.analytics.dashboard";w.register("nfx-analytics-dashboard-settings",{template:'{% block nfx_analytics_dashboard_settings %}\n\n    <sw-card positionIdentifier="\'test\'" :isLoading="isLoading">\n\n        {% block nfx_analytics_dashboard_settings_header %}\n            <div class="nfx-analytics-dashboard-headline">\n                <h1>\n                    {{ $tc(\'nfx-analytics.dashboard.title\') }}\n                </h1>\n                <span class="nfx-analytics-dashboard-headline-timerange">\n                    ({{ dateFilter(dateAgo.toUTCString(), { minute: undefined, hour: undefined, month: \'short\', year: undefined }) }}\n                    -\n                    {{ dateFilter(today.toUTCString(), { minute: undefined, hour: undefined, month: \'short\', year: undefined }) }})\n                </span>\n\n                {% block nfx_analytics_dashboard_settings_open %}\n                    <sw-button\n                        :disabled="!acl.can(\'nfxAnalyticsDashboard.editor\')"\n                        class="nfx-analytics-dashboard-settings-open"\n                        @click="onOpenSettings"\n                        :isLoading="isLoading"\n                        variant="primary">\n                        {{ $tc(\'nfx-analytics.dashboard.settingsTitel\') }}\n                    </sw-button>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block nfx_analytics_dashboard_settings_modal %}\n            <sw-modal\n                v-if="settingsOpen"\n                class="nfx-analytics-dashboard-settings-modal"\n                :title="$tc(\'nfx-analytics.dashboard.settingsTitel\')"\n                :is-loading="isLoading"\n                @modal-close="onCloseSettings">\n\n                {% block nfx_analytics_dashboard_settings_modalheader %}\n\n                    <sw-container columns="repeat(auto-fit, minmax(150px, 1fr))" gap="0px 30px">\n\n                        {% block nfx_analytics_dashboard_settings_date %}\n                            <div class="nfx-analytics-dashboard-settings-date">\n                                <sw-select-field\n                                    v-model:value="statisticDateRanges.value"\n                                    size="small">\n                                    <option\n                                        v-for="(value, option) in statisticDateRanges.options"\n                                        :key="option"\n                                        :value="value">\n                                        {{ $tc(`nfx-analytics.dashboard.dateRanges.${option}`) }}\n                                    </option>\n                                </sw-select-field>\n                            </div>\n                        {% endblock %}\n\n                        {% block nfx_analytics_dashboard_settings_save %}\n                            <sw-button\n                                :disabled="!acl.can(\'nfxAnalyticsDashboard.editor\')"\n                                class="nfx-analytics-dashboard-settings-save"\n                                @click="onSave"\n                                variant="primary">\n                                {{ $tc(\'nfx-analytics.dashboard.save\') }}\n                            </sw-button>\n                        {% endblock %}\n\n                    </sw-container>\n\n                {% endblock %}\n\n                {% block nfx_analytics_dashboard_settings_stats %}\n\n                    <div class="nfx-analytics-dashboard-settings" v-if="groups.length > 0">\n\n                        <div class="nfx-analytics-dashboard-settings-groups" v-for="group in groups">\n\n                            <sw-collapse>\n                                <template #header="{ expanded }">\n                                    <div class="nfx-analytics-dashboard-settings-groupheader">\n                                        <h3 class="nfx-analytics-dashboard-settings-grouplabel" v-if="group.label">\n                                            {{ $tc(group.label) }}\n                                        </h3>\n                                        <sw-icon\n                                            v-if="expanded"\n                                            key="filter-collapse-expanded-indicator"\n                                            class="nfx-analytics-dashboard-settings-groupexpanded"\n                                            name="regular-chevron-down"\n                                        />\n                                        <sw-icon\n                                            v-else\n                                            key="filter-collapse-expanded-indicator"\n                                            class="nfx-analytics-dashboard-settings-groupexpanded"\n                                            name="regular-chevron-right"\n                                        />\n                                    </div>\n                                </template>\n                                <template #content>\n                                    <div class="nfx-analytics-dashboard-settings-statistics" v-for="stat in group.statistics">\n                                        <sw-container columns="repeat(auto-fit, minmax(130px, 1fr))" gap="0px 10px">\n                                            <span class="nfx-analytics-dashboard-settings-statslabel">\n                                                {{ $tc(stat.label) }}\n                                            </span>\n                                            <sw-switch-field\n                                                      :label="$tc(\'nfx-analytics.dashboard.showChart\')"\n                                                      name="showChart"\n                                                      :disabled="stat.parameter.dashboard.hasChart == 0"\n                                                      v-model:value="stat.parameter.dashboard.showChart">\n                                            </sw-switch-field>\n                                            <sw-switch-field\n                                                      :label="$tc(\'nfx-analytics.dashboard.showTable\')"\n                                                      name="showTable"\n                                                      :disabled="stat.parameter.dashboard.hasTable == 0"\n                                                      v-model:value="stat.parameter.dashboard.showTable">\n                                            </sw-switch-field>\n                                            <sw-number-field\n                                                      class="nfx-analytics-dashboard-settings-position"\n                                                      :label="$tc(\'nfx-analytics.dashboard.position\')"\n                                                      :min="1"\n                                                      v-model:value="stat.parameter.dashboard.position">\n                                            </sw-number-field>\n                                        </sw-container>\n                                    </div>\n                                </template>\n                            </sw-collapse>\n\n                        </div>\n\n                    </div>\n\n                {% endblock %}\n\n            </sw-modal>\n        {% endblock %}\n\n    </sw-card>\n\n{% endblock %}\n',inject:["repositoryFactory","acl"],mixins:[b.getByName("user-settings")],props:{dateRange:{type:Number,required:!1,default:30}},data(){return{dashboardUserSettings:{},groups:[],isLoading:!0,settingsOpen:!1,statisticDateRanges:{value:this.dateRange,options:{"90Days":90,"30Days":30,"14Days":14,"7Days":7,yesterday:1}}}},created(){this.createdComponent()},computed:{dateFilter(){return Shopware.Filter.getByName("date")},currentUser(){return Shopware.State.get("session")?.currentUser},groupRepository(){return this.repositoryFactory.create("nfx_analytics_groups_config")},statisticsRepository(){return this.repositoryFactory.create("nfx_analytics_config")},groupsCriteria(){let t=new x;return t.addFilter(x.equals("active",1)),t.addAssociation("statistics"),t.getAssociation("statistics").addFilter(x.equals("active",1)),t.addSorting(x.sort("position")),t.getAssociation("statistics").addFilter(x.multi("OR",[x.equals("parameter.dashboard.hasTable",1),x.equals("parameter.dashboard.hasCHART",1)])),t},statisticsCriteria(){let t=new x;return t.addFilter(x.equals("active",1)),t.addFilter(x.equals("groupId",null)),t},dateAgo(){let t=new Date,e=this.dateRange??30;return t.setDate(t.getDate()-e),t.setHours(0,0,0,0),t},today(){let t=new Date;return t.setHours(0,0,0,0),t}},methods:{async createdComponent(){let t;this.isLoading=!0;try{t=await this.getUserSettings(_,this.currentUser?.id)}catch(t){}t?.dashboard&&(this.dashboardUserSettings=JSON.parse(t?.dashboard)),this.statisticsRepository.search(this.statisticsCriteria).then(t=>{this.groupRepository.search(this.groupsCriteria).then(e=>{t.length>0&&(e.unshift({label:t.first().label,statistics:t}),this.groups=e.filter(t=>void 0!==t.statistics&&t.statistics.length>0)),this.groups.forEach(t=>{t.statistics.forEach(t=>{this.dashboardUserSettings[t.id]?(this.dashboardUserSettings[t.id].position?t.parameter.dashboard.position=parseInt(this.dashboardUserSettings[t.id].position,10):t.parameter.dashboard.position=0,t.parameter.dashboard.showChart=this.dashboardUserSettings[t.id].showChart??!1,t.parameter.dashboard.showTable=this.dashboardUserSettings[t.id].showTable??!1):(t.parameter.dashboard.showChart=!1,t.parameter.dashboard.showTable=!1)})}),this.$nextTick(()=>{this.groups.forEach(t=>{t.statistics.sort((t,e)=>parseInt(t.parameter.dashboard.position,10)-parseInt(e.parameter.dashboard.position,10))}),this.isLoading=!1})})})},onSave(){this.isLoading=!0;let t={},e;this.groups.forEach(a=>{a.statistics.forEach(a=>{e={},(a.parameter.dashboard.showChart||a.parameter.dashboard.showTable)&&(e.showChart=a.parameter.dashboard.showChart??!1,e.showTable=a.parameter.dashboard.showTable??!1,a.parameter.dashboard.position?e.position=parseInt(a.parameter.dashboard.position,10):e.position=1,t[a.id]=e)})}),this.$nextTick(()=>{try{this.saveUserSettings(_,{dashboard:JSON.stringify(t)},this.currentUser?.id).then(()=>{this.createdComponent()})}catch(t){}})},onOpenSettings(){this.settingsOpen=!0},onCloseSettings(){this.settingsOpen=!1,this.$nextTick(()=>{this.$emit("nfx-statistics-settings-modal-closed",parseInt(this.statisticDateRanges.value,10))})}}}),a(3834),a(7933);let{Component:S}=Shopware;S.register("nfx-analytics-summery",{template:'{% block nfx_analytics_summery %}\n\n    <sw-alert\n            class="sw-card"\n            :appearance="\'notification\'"\n            :showIcon="false"\n            :closable="false"\n            :variant="\'info\'"\n            :title="alertTitle"\n    >\n\n        <sw-data-grid\n                :dataSource="gridData"\n                :columns="gridColums"\n                :showSelection="false"\n                :showActions="false"\n        >\n        </sw-data-grid>\n\n    </sw-alert>\n{% endblock %}\n',props:{data:{type:Array,required:!0,default:[]},columns:{type:Object,required:!0},headline:{type:String,default:""}},computed:{gridData(){return this.data},alertTitle(){return this.headline+(this.headline.length>0?" - ":"")+this.$tc("nfx-analytics.index.sums")},gridColums(){let t=[];for(let[e,a]of Object.entries(this.columns))t.push({property:e,dataIndex:e,label:a,allowResize:!1,inlineEdit:!1,width:"100px"});return t.length>0&&(t[0].primary=!0),t}}});let{Component:C}=Shopware;C.extend("nfx-analytics-ip-select","sw-multi-tag-ip-select",{template:"",inject:["knownIpsService"],props:{value:{type:Array,required:!1,default(){return[]}}},created(){this.knownIpsService.getKnownIps().then(t=>{this._.props.knownIps=t})}});let{Component:k}=Shopware,{Criteria:D}=Shopware.Data;k.register("nfx-analytics-order-profit",{template:'<div>\n    <span v-if="!isLoading && !profitLoading && profit != null && systemCurrency">\n        {{ currencyFilter(profit, systemCurrency.isoCode, 2) }}\n    </span>\n    <span v-else>-</span>\n\n</div>\n\n\n',inject:["repositoryFactory"],props:{orderId:{type:String,required:!0},isLoading:{type:Boolean,required:!0},systemCurrency:{type:Object,required:!0}},data(){return{order:null,profitLoading:!0,profit:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},orderRepository(){return this.repositoryFactory.create("order")},orderCriteria(){let t=new D;return t.addFilter(D.equals("id",this.orderId)),t.addAssociation("lineItems"),t.getAssociation("lineItems").addAssociation("product"),t}},created(){this.createdComponent()},methods:{createdComponent(){this.profitLoading=!0;let t,e=0;this.orderRepository.search(this.orderCriteria).then(a=>{if(a&&Array.isArray(a)&&1===a.length){if(this.order=a[0],this.order.lineItems.forEach(t=>{t.product&&Array.isArray(t.product.purchasePrices)&&t.product.purchasePrices.length>0&&t.product.purchasePrices[0].net&&(e+=t.product.purchasePrices[0].net*t.quantity)}),0===e)return;"gross"===this.order.taxStatus?(t=this.order.price.netPrice,this.order.shippingTotal>0&&(t-=this.order.shippingTotal,this.order.shippingCosts?.calculatedTaxes&&Array.isArray(this.order.shippingCosts.calculatedTaxes)&&this.order.shippingCosts.calculatedTaxes.forEach(e=>{e.tax&&(t+=e.tax)}))):t=this.order.positionPrice,this.order.currencyFactor>0&&(t/=this.order.currencyFactor),this.profit=t-e}this.profitLoading=!1})}}}),a(7303),Shopware.Component.register("nfx-theme-switcher",{template:'{% block nfx_theme_switcher %}\n<div class="nfx-theme-switcher" ref="themeSwitcher">\n    <button \n        class="nfx-theme-switcher__button"\n        :style="{ background: currentThemeData ? \'var(--nfx-primary)\' : \'#6366F1\' }"\n        @click="toggleMenu"\n        :title="$tc(\'nfx-analytics.general.changeTheme\')"\n    >\n        <span style="font-size: 20px;">{{ currentThemeData ? currentThemeData.icon : \'\uD83C\uDFA8\' }}</span>\n    </button>\n    \n    <div \n        class="nfx-theme-switcher__menu"\n        :class="{ \'is--open\': showMenu }"\n    >\n        <div \n            v-for="theme in themes" \n            :key="theme.key"\n            class="nfx-theme-switcher__option"\n            :class="{ \'is--active\': theme.key === currentTheme }"\n            @click="selectTheme(theme.key)"\n        >\n            <div \n                class="nfx-theme-switcher__preview"\n                :class="`nfx-theme-switcher__preview--${theme.key}`"\n            ></div>\n            <div>\n                <div class="nfx-theme-switcher__label">{{ theme.label }}</div>\n                <div class="nfx-theme-switcher__description">{{ theme.description }}</div>\n            </div>\n        </div>\n    </div>\n</div>\n{% endblock %}',data(){return{showMenu:!1,currentTheme:"light-apple",themes:[{key:"light-apple",label:"Light Apple",icon:"☀️",description:"Clean and bright design"},{key:"dark-violet",label:"Dark Violet",icon:"\uD83C\uDF19",description:"Dark theme with purple accents"},{key:"pastel",label:"Pastel Colors",icon:"\uD83C\uDF38",description:"Soft and gentle colors"},{key:"retro-90s",label:"90s Retro",icon:"\uD83D\uDD76️",description:"Neon and retro vibes"}]}},computed:{currentThemeData(){return this.themes.find(t=>t.key===this.currentTheme)}},mounted(){let t=localStorage.getItem("nfx-analytics-theme");t&&this.themes.find(e=>e.key===t)&&(this.currentTheme=t),this.applyTheme(this.currentTheme),document.addEventListener("click",this.handleOutsideClick)},beforeDestroy(){document.removeEventListener("click",this.handleOutsideClick)},methods:{toggleMenu(){this.showMenu=!this.showMenu},selectTheme(t){this.currentTheme=t,this.applyTheme(t),this.showMenu=!1,localStorage.setItem("nfx-analytics-theme",t)},applyTheme(t){let e=document.body;this.themes.forEach(t=>{e.classList.remove(`theme-${t.key}`)}),e.classList.add(`theme-${t}`),e.classList.contains("nfx-analytics")||e.classList.add("nfx-analytics")},handleOutsideClick(t){this.$el.contains(t.target)||(this.showMenu=!1)}}});let{Component:O,Context:$,Mixin:I}=Shopware,{Criteria:L}=Shopware.Data;O.register("nfx-analytics-order",{template:'\n{% block nfx_analytics_order_list %}\n<sw-page class="sw-order-list nfx-analytics-order-list">\n    {% block nfx_analytics_order_list_search_bar %}\n        <template #search-bar>\n            <sw-search-bar\n                    initial-search-type="order"\n                    :initial-search="term"\n                    @search="onSearch"\n            />\n        </template>\n    {% endblock %}\n\n    {% block nfx_analytics_order_list_smart_bar_header %}\n        <template #smart-bar-header>\n            {% block nfx_analytics_order_list_smart_bar_header_title %}\n                <h2>\n                    {% block nfx_analytics_order_list_smart_bar_header_title_text %}\n                        {{ $tc(\'nfx-analytics.index.orderGridTitle\') }}<span v-if="activeStatisticLabel">{{ activeStatisticLabel }}</span>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_smart_bar_header_amount %}\n                        <span\n                                v-if="!isLoading"\n                                class="sw-page__smart-bar-amount"\n                        >\n                            ({{ total }})\n                        </span>\n                    {% endblock %}\n                </h2>\n            {% endblock %}\n        </template>\n    {% endblock %}\n\n    {% block nfx_analytics_order_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            {% block nfx_analytics_order_list_smart_bar_actions_slot %}\n                <sw-button\n                        class="nfx-analytics-smart-bar-header-export-button"\n                        @click="exportCSV"\n                        variant="primary">\n                    {{ $tc(\'nfx-analytics.index.labelActionExport\') }}\n                </sw-button>\n            {% endblock %}\n        </template>\n    {% endblock %}\n\n    {% block nfx_analytics_order_list_content %}\n    <template #content>\n\n        {% block nfx_analytics_order_list_content_slot %}\n        <div class="sw-order-list__content">\n\n            {% block nfx_analytics_order_list_grid %}\n            <sw-data-grid\n                    v-if="entitySearchable"\n                    ref="orderGrid"\n                    :data-source="orders"\n                    :columns="orderColumns"\n                    :show-settings="true"\n                    :sort-by="sortBy"\n                    :sort-direction="sortDirection"\n                    :is-loading="isLoading"\n                    identifier="nfx-analytics-order"\n                    :disable-data-fetching="true"\n                    @column-sort="onSortColumn"\n                    @page-change="onPageChange"\n                    :showSelection="false"\n            >\n\n                {% block nfx_analytics_order_list_grid_columns %}\n                    {% block nfx_analytics_order_list_grid_columns_order_number %}\n                        <template #column-orderNumber="{ item }">\n                            {% block nfx_analytics_order_list_grid_order_number_link %}\n                                <router-link :to="{ name: \'sw.order.detail\', params: { id: item.id } }">\n                                    {{ item.orderNumber }}\n                                </router-link>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_customer_name %}\n                        <template #column-orderCustomer.firstName="{ item }">\n                            <router-link :to="{ name: \'sw.customer.detail\', params: { id: item.orderCustomer.customerId } }">\n                                {{ item.orderCustomer.lastName }}, {{ item.orderCustomer.firstName }}\n                            </router-link>\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_profit %}\n                        <template #column-id="{ item }">\n                            <nfx-analytics-order-profit\n                                :orderId="item.id"\n                                :isLoading="isLoading"\n                                :systemCurrency="systemCurrency"\n                            />\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_billing_address %}\n                        <template #column-billingAddressId="{ item }">\n                            {{ item.billingAddress.street }},\n                            {{ item.billingAddress.zipcode }}\n                            {{ item.billingAddress.city }}\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_delivery_address %}\n                        <template #column-deliveries.id="{ item }">\n                            <template v-if="item.deliveries && item.deliveries[0] && item.deliveries[0].shippingOrderAddress">\n                                <div\n                                    v-tooltip="{\n                                showDelay: 300,\n                                width: 400,\n                                disabled: item.deliveries.length <= 1,\n                                message: deliveryTooltip(item.deliveries)\n                            }"\n                                    class="sw-order-list__delivery_address"\n                                >\n                                    <span v-if="item.deliveries[0].shippingOrderAddress.company">{{ item.deliveries[0].shippingOrderAddress.company }}<span v-if="item.deliveries[0].shippingOrderAddress.department"> - {{ item.deliveries[0].shippingOrderAddress.department }}</span>,</span>\n                                    {{ item.deliveries[0].shippingOrderAddress.street }},\n                                    {{ item.deliveries[0].shippingOrderAddress.zipcode }}\n                                    {{ item.deliveries[0].shippingOrderAddress.city }}\n                                </div>\n                            </template>\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_amountt %}\n                        <template #column-amountTotal="{ item }">\n                            {{ currencyFilter(item.amountTotal, item.currency.isoCode) }}\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_amountn %}\n                        <template #column-amountNet="{ item }">\n                            {{ currencyFilter(item.amountNet, item.currency.isoCode) }}\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_state %}\n                        <template #column-stateMachineState.name="{ item }">\n                            <div\n                                    class="sw-order-list__state"\n                            >\n                                <sw-color-badge\n                                        :color="getVariantFromOrderState(item)"\n                                        rounded\n                                />\n\n                                {{ item.stateMachineState.translated.name }}\n                            </div>\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_transaction_state %}\n                        <template #column-transactions.last().stateMachineState.name="{ item }">\n                            <div\n                                    v-if="item.transactions && item.transactions[0]"\n                                    class="sw-order-list__state"\n                            >\n                                <sw-color-badge\n                                        v-if="item.transactions && item.transactions[0]"\n                                        :color="getVariantFromPaymentState(item)"\n                                        rounded\n                                />\n\n                                {{ transaction(item).stateMachineState.translated.name }}\n                            </div>\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_delivery_state %}\n                        <template #column-deliveries[0].stateMachineState.name="{ item }">\n                            <div\n                                    v-if="item.deliveries && item.deliveries[0]"\n                                    class="sw-order-list__state"\n                            >\n                                <sw-color-badge\n                                        v-if="item.deliveries && item.deliveries[0]"\n                                        :color="getVariantFromDeliveryState(item)"\n                                        rounded\n                                />\n\n                                {{ item.deliveries[0].stateMachineState.translated.name }}\n                            </div>\n                        </template>\n                    {% endblock %}\n\n                    {% block nfx_analytics_order_list_grid_columns_order_date %}\n                        <template #column-orderDateTime="{ item }">\n                            <sw-time-ago :date="item.orderDateTime" />\n                        </template>\n                    {% endblock %}\n                {% endblock %}\n\n                {% block nfx_analytics_order_list_grid_columns_actions %}\n                    <template #actions="{ item }">\n                        {% block nfx_analytics_order_list_grid_columns_actions_view %}\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="{ name: \'sw.order.detail\', params: { id: item.id } }"\n                            >\n                                {{ $tc(\'nfx-analytics.index.goToOrderDetail\') }}\n                            </sw-context-menu-item>\n                        {% endblock %}\n                    </template>\n                {% endblock %}\n\n                <template #pagination>\n                    {% block nfx_analytics_order_list_grid_pagination %}\n                        <sw-pagination\n                                :page="page"\n                                :limit="limit"\n                                :total="total"\n                                :total-visible="7"\n                                @page-change="onPageChange"\n                        />\n                    {% endblock %}\n                </template>\n\n            </sw-data-grid>\n            {% endblock %}\n\n            {% block nfx_analytics_order_list_empty_state %}\n                <template v-if="!isLoading && !total">\n                    <sw-empty-state\n                            v-if="filterCriteria.length || isValidTerm(term)"\n                            :title="$tc(\'sw-empty-state.messageNoResultTitle\')"\n                    >\n                        <template #icon>\n                            <img\n                                    :src="\'/administration/static/img/empty-states/order-empty-state.svg\' | asset"\n                                    :alt="$tc(\'sw-empty-state.messageNoResultTitle\')"\n                            >\n                        </template>\n\n                        <template #default>\n                            {{ $tc(\'sw-empty-state.messageNoResultSublineBefore\') }}\n                            <router-link\n                                    class="sw-empty-state__description-link"\n                                    :to="{ name: \'sw.profile.index.searchPreferences\' }"\n                            >\n                                {{ $tc(\'sw-empty-state.messageNoResultSublineLink\') }}\n                            </router-link>\n                            {{ $tc(\'sw-empty-state.messageNoResultSublineAfter\') }}\n                        </template>\n                    </sw-empty-state>\n                    <sw-empty-state\n                            v-else\n                            :title="$tc(\'sw-order.list.messageEmpty\')"\n                    >\n                        <template #icon>\n                            <img\n                                    :src="\'/administration/static/img/empty-states/order-empty-state.svg\' | asset"\n                                    :alt="$tc(\'sw-order.list.messageEmpty\')"\n                            >\n                        </template>\n                    </sw-empty-state>\n                </template>\n            {% endblock %}\n\n            {% block nfx_analytics_order_alert %}\n                <div style="margin:20px;">\n                    <sw-alert\n                        v-if="!isLoading && total"\n                        :appearance="\'notification\'"\n                        :showIcon="false"\n                        :closable="false"\n                        :variant="\'neutral\'"\n                        :title="$tc(\'nfx-analytics.general.help\')"\n                    >\n                        <div class="nfx-analytics-description">\n                            {{ $tc(\'nfx-analytics.order.info\') }}\n                        </div>\n                    </sw-alert>\n                </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n\n    {% block nfx_analytics_order_list_sidebar %}\n        <template #sidebar>\n            <sw-sidebar class="sw-order-list__sidebar nfx-analytics-order-list__sidebar">\n                {% block nfx_analytics_order_list_sidebar_refresh %}\n                    <sw-sidebar-item\n                            icon="regular-undo"\n                            :title="$tc(\'sw-order.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh"\n                    />\n                {% endblock %}\n\n                {% block nfx_analytics_order_list_sidebar_filter %}\n                    <sw-sidebar-filter-panel\n                            entity="customer"\n                            :store-key="storeKey"\n                            :filters="listFilters"\n                            :defaults="defaultFilters"\n                            :active-filter-number="activeFilterNumber"\n                            @criteria-changed="updateCriteria"\n                    />\n                {% endblock %}\n            </sw-sidebar>\n        </template>\n    {% endblock %}\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory","systemConfigApiService","acl","filterFactory","stateStyleDataProviderService"],mixins:[I.getByName("nfx-analytics"),I.getByName("listing")],data(){return{orders:[],sortBy:"orderDateTime",sortDirection:"DESC",isLoading:!1,filterLoading:!1,availableAffiliateCodes:[],availableCampaignCodes:[],availablePromotionCodes:[],filterCriteria:[],activeStatisticLabel:"",systemCurrency:null,defaultFilters:["affiliate-code-filter","campaign-code-filter","promotion-code-filter","document-filter","order-date-filter","order-value-filter","status-filter","payment-status-filter","delivery-status-filter","payment-method-filter","shipping-method-filter","sales-channel-filter","billing-country-filter","customer-group-filter","shipping-country-filter","tag-filter","line-item-filter","manufacturer-filter"],storeKey:"grid.filter.nfx.analytics.order",activeFilterNumber:0,searchConfigEntity:"order"}},metaInfo(){return{title:this.$createTitle()}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},currencyRepository(){return this.repositoryFactory.create("currency")},orderRepository(){return this.repositoryFactory.create("order")},orderColumns(){return this.getOrderColumns()},orderCriteria(){let t=new L(this.page,this.limit);return t.setTerm(this.term),this.sortBy.split(",").forEach(e=>{t.addSorting(L.sort(e,this.sortDirection))}),this.filterCriteria.forEach(e=>{t.addFilter(e)}),t.addAssociation("addresses"),t.addAssociation("billingAddress"),t.addAssociation("salesChannel"),t.addAssociation("orderCustomer"),t.addAssociation("currency"),t.addAssociation("documents"),t.addAssociation("transactions"),t.addAssociation("deliveries"),t.addAssociation("stateMachineState"),t.getAssociation("transactions").addAssociation("stateMachineState").addSorting(L.sort("createdAt")),t.getAssociation("deliveries").addAssociation("stateMachineState").addAssociation("shippingOrderAddress").addAssociation("shippingMethod").addSorting(L.sort("shippingCosts.unitPrice","DESC")),t},filterSelectCriteria(){let t=new L(1,1);return t.addAggregation(L.terms("affiliateCodes","affiliateCode",null,null,null)),t.addAggregation(L.terms("campaignCodes","campaignCode",null,null,null)),t.addAggregation(L.terms("promotionCodes","lineItems.payload.code",null,null,null)),t},listFilterOptions(){return{"sales-channel-filter":{property:"salesChannel",label:this.$tc("sw-order.filters.salesChannelFilter.label"),placeholder:this.$tc("sw-order.filters.salesChannelFilter.placeholder")},"order-value-filter":{property:"amountTotal",type:"number-filter",label:this.$tc("sw-order.filters.orderValueFilter.label"),fromFieldLabel:null,toFieldLabel:null,fromPlaceholder:this.$tc("global.default.from"),toPlaceholder:this.$tc("global.default.to")},"payment-status-filter":{property:"transactions.stateMachineState",criteria:this.getStatusCriteria("order_transaction.state"),label:this.$tc("sw-order.filters.paymentStatusFilter.label"),placeholder:this.$tc("sw-order.filters.paymentStatusFilter.placeholder")},"delivery-status-filter":{property:"deliveries.stateMachineState",criteria:this.getStatusCriteria("order_delivery.state"),label:this.$tc("sw-order.filters.deliveryStatusFilter.label"),placeholder:this.$tc("sw-order.filters.deliveryStatusFilter.placeholder")},"status-filter":{property:"stateMachineState",criteria:this.getStatusCriteria("order.state"),label:this.$tc("sw-order.filters.statusFilter.label"),placeholder:this.$tc("sw-order.filters.statusFilter.placeholder")},"order-date-filter":{property:"orderDateTime",label:this.$tc("sw-order.filters.orderDateFilter.label"),dateType:"date",fromFieldLabel:null,toFieldLabel:null,showTimeframe:!0},"tag-filter":{property:"tags",label:this.$tc("sw-order.filters.tagFilter.label"),placeholder:this.$tc("sw-order.filters.tagFilter.placeholder")},"affiliate-code-filter":{property:"affiliateCode",type:"multi-select-filter",label:this.$tc("sw-order.filters.affiliateCodeFilter.label"),placeholder:this.$tc("sw-order.filters.affiliateCodeFilter.placeholder"),valueProperty:"key",labelProperty:"key",options:this.availableAffiliateCodes},"campaign-code-filter":{property:"campaignCode",type:"multi-select-filter",label:this.$tc("sw-order.filters.campaignCodeFilter.label"),placeholder:this.$tc("sw-order.filters.campaignCodeFilter.placeholder"),valueProperty:"key",labelProperty:"key",options:this.availableCampaignCodes},"promotion-code-filter":{property:"lineItems.payload.code",type:"multi-select-filter",label:this.$tc("sw-order.filters.promotionCodeFilter.label"),placeholder:this.$tc("sw-order.filters.promotionCodeFilter.placeholder"),valueProperty:"key",labelProperty:"key",options:this.availablePromotionCodes},"document-filter":{property:"documents",label:this.$tc("sw-order.filters.documentFilter.label"),placeholder:this.$tc("sw-order.filters.documentFilter.placeholder"),optionHasCriteria:this.$tc("sw-order.filters.documentFilter.textHasCriteria"),optionNoCriteria:this.$tc("sw-order.filters.documentFilter.textNoCriteria")},"payment-method-filter":{property:"transactions.paymentMethod",label:this.$tc("sw-order.filters.paymentMethodFilter.label"),placeholder:this.$tc("sw-order.filters.paymentMethodFilter.placeholder")},"shipping-method-filter":{property:"deliveries.shippingMethod",label:this.$tc("sw-order.filters.shippingMethodFilter.label"),placeholder:this.$tc("sw-order.filters.shippingMethodFilter.placeholder")},"billing-country-filter":{property:"billingAddress.country",label:this.$tc("sw-order.filters.billingCountryFilter.label"),placeholder:this.$tc("sw-order.filters.billingCountryFilter.placeholder")},"shipping-country-filter":{property:"deliveries.shippingOrderAddress.country",label:this.$tc("sw-order.filters.shippingCountryFilter.label"),placeholder:this.$tc("sw-order.filters.shippingCountryFilter.placeholder")},"customer-group-filter":{property:"orderCustomer.customer.group",label:this.$tc("sw-order.filters.customerGroupFilter.label"),placeholder:this.$tc("sw-order.filters.customerGroupFilter.placeholder")},"line-item-filter":{property:"lineItems.product",label:this.$tc("sw-order.filters.productFilter.label"),placeholder:this.$tc("sw-order.filters.productFilter.placeholder"),criteria:this.productCriteria,displayVariants:!0},"manufacturer-filter":{property:"lineItems.product.manufacturer",label:this.$tc("sw-product.filters.manufacturerFilter.label"),placeholder:this.$tc("sw-product.filters.manufacturerFilter.placeholder")}}},listFilters(){return this.filterFactory.create("order",this.listFilterOptions)},productCriteria(){let t=new L(1,25);return t.addAssociation("options.group"),t.addAssociation("manufacturer"),t}},watch:{orderCriteria:{handler(){this.getList()},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){this.currencyRepository.get(Shopware.Context.app.systemCurrencyId,$.api).then(t=>{this.systemCurrency=t}),this.$route&&this.$route.query&&this.$route.query.label&&(this.activeStatisticLabel=this.$route.query.label),this.loadFilterValues()},onChangeLanguage(){this.getList()},async getList(){this.isLoading=!0,this.disableRouteParams=!0;let t=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.orderCriteria);if(t=await this.addQueryScores(this.term,t),this.activeFilterNumber=t.filters.length,!this.entitySearchable){this.isLoading=!1,this.total=0;return}this.freshSearchTerm&&t.resetSorting();try{$.api.inheritance=!0;let e=await this.orderRepository.search(t,$.api);this.total=e.total,this.orders=e,this.isLoading=!1}catch{this.isLoading=!1}},getBillingAddress(t){return t.addresses.find(e=>e.id===t.billingAddressId)},getOrderColumns(){return[{property:"orderNumber",label:"sw-order.list.columnOrderNumber",routerLink:"sw.order.detail",allowResize:!0,primary:!0},{property:"salesChannel.name",label:"sw-order.list.columnSalesChannel",allowResize:!0},{property:"orderCustomer.firstName",dataIndex:"orderCustomer.lastName,orderCustomer.firstName",label:"sw-order.list.columnCustomerName",allowResize:!0},{property:"billingAddressId",dataIndex:"billingAddress.street",label:"sw-order.list.columnBillingAddress",visible:!1,allowResize:!0},{property:"deliveries.id",dataIndex:"deliveries.shippingOrderAddress.street",label:"sw-order.list.columnDeliveryAddress",allowResize:!0,visible:!1},{property:"amountTotal",label:this.$tc("sw-order.list.columnAmount")+this.$tc("nfx-analytics.view.gross"),align:"right",allowResize:!0},{property:"amountNet",label:this.$tc("sw-order.list.columnAmount")+this.$tc("nfx-analytics.view.net"),align:"right",allowResize:!0},{property:"id",label:this.$tc("nfx-analytics.order.profitColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!0,visible:!0},{property:"stateMachineState.name",label:"sw-order.list.columnState",allowResize:!0},{property:"transactions.last().stateMachineState.name",dataIndex:"transactions.stateMachineState.name",label:"sw-order.list.columnTransactionState",allowResize:!0},{property:"deliveries[0].stateMachineState.name",dataIndex:"deliveries.stateMachineState.name",label:"sw-order.list.columnDeliveryState",allowResize:!0},{property:"orderDateTime",label:"sw-order.list.orderDate",allowResize:!0},{property:"affiliateCode",inlineEdit:"string",label:"sw-order.list.columnAffiliateCode",allowResize:!0,visible:!1},{property:"campaignCode",inlineEdit:"string",label:"sw-order.list.columnCampaignCode",allowResize:!0,visible:!1}]},exportCSV(){if(Array.isArray(this.orders)&&this.orders.length>0){let t=[];this.orders.forEach(e=>{let a={};a[this.$tc("sw-order.list.columnOrderNumber")]=e.orderNumber,a[this.$tc("sw-order.list.columnSalesChannel")]=e.salesChannel.name,a[this.$tc("sw-order.list.columnCustomerName")]=e.orderCustomer.lastName+", "+e.orderCustomer.firstName,a[this.$tc("sw-order.list.columnBillingAddress")]=e.billingAddress.street+", "+e.billingAddress.zipcode+" "+e.billingAddress.city,a[this.$tc("sw-order.list.columnAmount")+this.$tc("nfx-analytics.view.gross")]=Shopware.Filter.getByName("currency")(e.amountTotal,e.currency.isoCode,2),a[this.$tc("sw-order.list.columnAmount")+this.$tc("nfx-analytics.view.net")]=Shopware.Filter.getByName("currency")(e.amountNet,e.currency.isoCode,2),a[this.$tc("sw-order.list.columnState")]=e.stateMachineState.name,a[this.$tc("sw-order.list.columnTransactionState")]=e.transactions.last().stateMachineState.name,a[this.$tc("sw-order.list.columnDeliveryState")]=e.deliveries[0].stateMachineState.name,a[this.$tc("sw-order.list.orderDate")]=e.orderDateTime,a[this.$tc("sw-order.list.columnAffiliateCode")]=e.affiliateCode,a[this.$tc("sw-order.list.columnCampaignCode")]=e.campaignCode,t.push(a)});let e=Shopware.Application.getContainer("init").httpClient,a=Shopware.Service("loginService");t.length>0&&e.post("nfx/analytics/csvExport",{data:t},{headers:{Authorization:`Bearer ${a.getToken()}`}}).then(t=>{void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&this.csvDownload("orderdata.csv",t.data.fileSize)}).catch(t=>{console.log(t)})}},getVariantFromOrderState(t){return this.stateStyleDataProviderService.getStyle("order.state",t.stateMachineState.technicalName).colorCode},getVariantFromPaymentState(t){let e=t.transactions.last().stateMachineState.technicalName;for(let a=0;a<t.transactions.length;a+=1)if(!["cancelled","failed"].includes(t.transactions[a].stateMachineState.technicalName)){e=t.transactions[a].stateMachineState.technicalName;break}return this.stateStyleDataProviderService.getStyle("order_transaction.state",e).colorCode},getVariantFromDeliveryState(t){return this.stateStyleDataProviderService.getStyle("order_delivery.state",t.deliveries[0].stateMachineState.technicalName).colorCode},loadFilterValues(){return this.filterLoading=!0,this.orderRepository.search(this.filterSelectCriteria).then(({aggregations:t})=>{let{affiliateCodes:e,campaignCodes:a,promotionCodes:i}=t;return this.availableAffiliateCodes=e?.buckets.filter(({key:t})=>t.length>0)??[],this.availableCampaignCodes=a?.buckets.filter(({key:t})=>t.length>0)??[],this.availablePromotionCodes=i?.buckets.filter(({key:t})=>t.length>0)??[],this.filterLoading=!1,t}).catch(()=>{this.filterLoading=!1})},updateCriteria(t){if(this.page=1,Array.isArray(t)&&t.length>0){for(let e=0;e<t.length;e++)if("object"==typeof t[e]&&t[e].field&&"orderDateTime"===t[e].field){t[e].parameters&&t[e].parameters.lte&&(t[e].parameters.lte=t[e].parameters.lte.replace("00:00:00","23:59:59"));break}}this.$nextTick(()=>{this.filterCriteria=t})},getStatusCriteria(t){let e=new L(1,25);return e.addFilter(L.equals("stateMachine.technicalName",t)),e},transaction(t){for(let e=0;e<t.transactions.length;e+=1)if(!["cancelled","failed"].includes(t.transactions[e].stateMachineState.technicalName))return t.transactions[e];return t.transactions.last()},deliveryTooltip(t){return t.map(t=>`${t.shippingOrderAddress.street},
                        ${t.shippingOrderAddress.zipcode}
                        ${t.shippingOrderAddress.city}`).join('<hr style="margin: 8px 0">')}}}),a(181);let{Component:T,Context:B,Mixin:A}=Shopware;T.register("nfx-analytics-index",{template:'{% block nfx_analytics_index %}\n<div class="nfx-dashboard-layout nfx-analytics theme-light-apple" :class="\'theme-\' + currentTheme">\n    \n    <div class="background-layer">\n        <div class="floating-orb orb-1"></div>\n        <div class="floating-orb orb-2"></div>\n        <div class="floating-orb orb-3"></div>\n        <div class="geometric-pattern"></div>\n    </div>\n    \n    \n    <header class="nfx-dashboard-header liquid-card">\n        <div class="nfx-dashboard-header__left">\n            <h1 class="nfx-dashboard-header__title">\n                <span class="icon">✨</span>\n                Magic Analytics\n            </h1>\n            <div class="nfx-dashboard-header__subtitle">\n                Real-time eCommerce Insights\n            </div>\n        </div>\n        \n        <div class="nfx-dashboard-header__center">\n            <div class="date-selector liquid-card">\n                <sw-icon name="regular-calendar" size="16"></sw-icon>\n                <span>{{ startDateHeadline }} - {{ endDateHeadline }}</span>\n                <sw-icon name="regular-chevron-down-s" size="12"></sw-icon>\n            </div>\n        </div>\n        \n        <div class="nfx-dashboard-header__right">\n            <button class="liquid-button" @click="onRefresh">\n                <sw-icon name="regular-sync" size="16"></sw-icon>\n                Refresh\n            </button>\n            <button class="liquid-button liquid-button--primary" @click="exportCSV">\n                <sw-icon name="regular-download" size="16"></sw-icon>\n                Export\n            </button>\n            <nfx-theme-switcher></nfx-theme-switcher>\n        </div>\n    </header>\n    \n    \n    <main class="nfx-dashboard-content">\n        \n        <section class="dashboard-section">\n            <h2 class="section-title">\n                <span class="icon">\uD83D\uDCCA</span>\n                Key Performance Indicators\n            </h2>\n            \n            <div class="kpi-grid kpi-grid--primary">\n                \n                <div class="kpi-card kpi-card--revenue">\n                    <div class="kpi-card__icon">\uD83D\uDCB0</div>\n                    <div class="kpi-card__change kpi-card__change--positive">\n                        <sw-icon name="regular-arrow-up" size="12" class="icon"></sw-icon>\n                        +23.5%\n                    </div>\n                    <div class="kpi-card__value">€127.4K</div>\n                    <div class="kpi-card__label">Total Revenue</div>\n                    <div class="kpi-card__sparkline">\n                        <svg viewBox="0 0 100 40">\n                            <path class="area" d="M0,30 Q25,20 50,25 T100,15 L100,40 L0,40 Z"/>\n                            <path d="M0,30 Q25,20 50,25 T100,15" stroke="currentColor" fill="none"/>\n                        </svg>\n                    </div>\n                </div>\n                \n                \n                <div class="kpi-card kpi-card--orders">\n                    <div class="kpi-card__icon">\uD83D\uDECD️</div>\n                    <div class="kpi-card__change kpi-card__change--positive">\n                        <sw-icon name="regular-arrow-up" size="12" class="icon"></sw-icon>\n                        +18.2%\n                    </div>\n                    <div class="kpi-card__value">3,847</div>\n                    <div class="kpi-card__label">Total Orders</div>\n                    <div class="kpi-card__sparkline">\n                        <svg viewBox="0 0 100 40">\n                            <path class="area" d="M0,35 L20,30 L40,32 L60,25 L80,28 L100,20 L100,40 L0,40 Z"/>\n                            <path d="M0,35 L20,30 L40,32 L60,25 L80,28 L100,20" stroke="currentColor" fill="none"/>\n                        </svg>\n                    </div>\n                </div>\n                \n                \n                <div class="kpi-card kpi-card--conversion">\n                    <div class="kpi-card__icon">\uD83D\uDCC8</div>\n                    <div class="kpi-card__change kpi-card__change--positive">\n                        <sw-icon name="regular-arrow-up" size="12" class="icon"></sw-icon>\n                        +5.3%\n                    </div>\n                    <div class="kpi-card__value">3.42%</div>\n                    <div class="kpi-card__label">Conversion Rate</div>\n                    <div class="kpi-card__sparkline">\n                        <svg viewBox="0 0 100 40">\n                            <path class="area" d="M0,25 C20,25 20,15 40,15 C60,15 60,20 80,20 C90,20 95,10 100,10 L100,40 L0,40 Z"/>\n                            <path d="M0,25 C20,25 20,15 40,15 C60,15 60,20 80,20 C90,20 95,10 100,10" stroke="currentColor" fill="none"/>\n                        </svg>\n                    </div>\n                </div>\n                \n                \n                <div class="kpi-card kpi-card--aov">\n                    <div class="kpi-card__icon">\uD83D\uDCB3</div>\n                    <div class="kpi-card__change kpi-card__change--negative">\n                        <sw-icon name="regular-arrow-down" size="12" class="icon"></sw-icon>\n                        -2.1%\n                    </div>\n                    <div class="kpi-card__value">€82.50</div>\n                    <div class="kpi-card__label">Average Order Value</div>\n                    <div class="kpi-card__sparkline">\n                        <svg viewBox="0 0 100 40">\n                            <path class="area" d="M0,20 L25,25 L50,22 L75,28 L100,30 L100,40 L0,40 Z"/>\n                            <path d="M0,20 L25,25 L50,22 L75,28 L100,30" stroke="currentColor" fill="none"/>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </section>\n        \n        \n        <section class="dashboard-section">\n            <div class="charts-grid">\n                \n                <div class="chart-container chart-container--large">\n                    <div class="chart-container__header">\n                        <h3 class="chart-container__title">\n                            <span class="icon">\uD83D\uDCCA</span>\n                            Revenue Trend\n                        </h3>\n                        <div class="chart-container__actions">\n                            <div class="toggle-group">\n                                <button class="toggle-btn active">Day</button>\n                                <button class="toggle-btn">Week</button>\n                                <button class="toggle-btn">Month</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="chart-container__body chart-container__body--tall">\n                        <div class="line-chart">\n                            <svg class="line-chart__svg" viewBox="0 0 800 300">\n                                \n                                <g class="grid">\n                                    <line x1="0" y1="50" x2="800" y2="50"/>\n                                    <line x1="0" y1="100" x2="800" y2="100"/>\n                                    <line x1="0" y1="150" x2="800" y2="150"/>\n                                    <line x1="0" y1="200" x2="800" y2="200"/>\n                                    <line x1="0" y1="250" x2="800" y2="250"/>\n                                </g>\n                                \n                                <path class="area area--primary" d="M0,200 C100,180 200,160 300,140 C400,120 500,100 600,80 C700,60 800,40 800,40 L800,300 L0,300 Z"/>\n                                \n                                <path class="line line--primary" d="M0,200 C100,180 200,160 300,140 C400,120 500,100 600,80 C700,60 800,40 800,40"/>\n                                \n                                <g class="dots">\n                                    <circle class="dot" cx="100" cy="180" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="200" cy="160" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="300" cy="140" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="400" cy="120" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="500" cy="100" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="600" cy="80" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="700" cy="60" stroke="var(--nfx-primary)"/>\n                                    <circle class="dot" cx="800" cy="40" stroke="var(--nfx-primary)"/>\n                                </g>\n                            </svg>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <div class="chart-container">\n                    <div class="chart-container__header">\n                        <h3 class="chart-container__title">\n                            <span class="icon">\uD83C\uDFF7️</span>\n                            Sales by Category\n                        </h3>\n                    </div>\n                    <div class="chart-container__body">\n                        <div class="donut-chart">\n                            <svg class="donut-chart__svg" viewBox="0 0 200 200">\n                                <circle r="70" cx="100" cy="100" stroke="#e5e7eb" stroke-dasharray="0 440"/>\n                                <circle r="70" cx="100" cy="100" stroke="#6366F1" stroke-dasharray="132 440" stroke-dashoffset="0"/>\n                                <circle r="70" cx="100" cy="100" stroke="#3B82F6" stroke-dasharray="88 440" stroke-dashoffset="-132"/>\n                                <circle r="70" cx="100" cy="100" stroke="#10B981" stroke-dasharray="66 440" stroke-dashoffset="-220"/>\n                                <circle r="70" cx="100" cy="100" stroke="#F59E0B" stroke-dasharray="44 440" stroke-dashoffset="-286"/>\n                                <circle r="70" cx="100" cy="100" stroke="#EF4444" stroke-dasharray="110 440" stroke-dashoffset="-330"/>\n                            </svg>\n                            <div class="donut-chart__center">\n                                <div class="donut-chart__center-value">€127.4K</div>\n                                <div class="donut-chart__center-label">Total Sales</div>\n                            </div>\n                        </div>\n                        <div class="donut-chart__legend">\n                            <div class="donut-chart__legend-item">\n                                <span class="donut-chart__legend-item-color" style="background: #6366F1"></span>\n                                <span class="donut-chart__legend-item-label">Electronics</span>\n                                <span class="donut-chart__legend-item-value">30%</span>\n                            </div>\n                            <div class="donut-chart__legend-item">\n                                <span class="donut-chart__legend-item-color" style="background: #3B82F6"></span>\n                                <span class="donut-chart__legend-item-label">Fashion</span>\n                                <span class="donut-chart__legend-item-value">20%</span>\n                            </div>\n                            <div class="donut-chart__legend-item">\n                                <span class="donut-chart__legend-item-color" style="background: #10B981"></span>\n                                <span class="donut-chart__legend-item-label">Home</span>\n                                <span class="donut-chart__legend-item-value">15%</span>\n                            </div>\n                            <div class="donut-chart__legend-item">\n                                <span class="donut-chart__legend-item-color" style="background: #F59E0B"></span>\n                                <span class="donut-chart__legend-item-label">Sports</span>\n                                <span class="donut-chart__legend-item-value">10%</span>\n                            </div>\n                            <div class="donut-chart__legend-item">\n                                <span class="donut-chart__legend-item-color" style="background: #EF4444"></span>\n                                <span class="donut-chart__legend-item-label">Other</span>\n                                <span class="donut-chart__legend-item-value">25%</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        \n        \n        <section class="dashboard-section">\n            <h2 class="section-title">\n                <span class="icon">\uD83C\uDFAF</span>\n                Customer Insights\n            </h2>\n            \n            <div class="kpi-grid kpi-grid--featured">\n                \n                <div class="kpi-hero">\n                    <div class="kpi-hero__content">\n                        <h3 class="kpi-hero__title">\n                            <span class="icon">\uD83D\uDC65</span>\n                            Customer Overview\n                        </h3>\n                        <div class="kpi-hero__metrics">\n                            <div class="kpi-hero__metric">\n                                <div class="kpi-hero__metric-value">15.2K</div>\n                                <div class="kpi-hero__metric-label">Total Customers</div>\n                            </div>\n                            <div class="kpi-hero__metric">\n                                <div class="kpi-hero__metric-value">847</div>\n                                <div class="kpi-hero__metric-label">New This Month</div>\n                            </div>\n                            <div class="kpi-hero__metric">\n                                <div class="kpi-hero__metric-value">€156</div>\n                                <div class="kpi-hero__metric-label">Avg. CLV</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <div class="kpi-grid kpi-grid--compact">\n                    <div class="kpi-mini">\n                        <div class="kpi-mini__icon" style="background: linear-gradient(135deg, #6366F1, #A855F7);">\n                            \uD83D\uDD04\n                        </div>\n                        <div class="kpi-mini__content">\n                            <div class="kpi-mini__value">68%</div>\n                            <div class="kpi-mini__label">Retention Rate</div>\n                        </div>\n                        <div class="kpi-mini__trend trend trend--up">\n                            <sw-icon name="regular-arrow-up" size="12" class="icon"></sw-icon>\n                            +5%\n                        </div>\n                    </div>\n                    \n                    <div class="kpi-mini">\n                        <div class="kpi-mini__icon" style="background: linear-gradient(135deg, #3B82F6, #2563EB);">\n                            ⏱️\n                        </div>\n                        <div class="kpi-mini__content">\n                            <div class="kpi-mini__value">2.3</div>\n                            <div class="kpi-mini__label">Avg. Orders/Customer</div>\n                        </div>\n                        <div class="kpi-mini__trend trend trend--neutral">\n                            <sw-icon name="regular-minus" size="12" class="icon"></sw-icon>\n                            0%\n                        </div>\n                    </div>\n                    \n                    <div class="kpi-mini">\n                        <div class="kpi-mini__icon" style="background: linear-gradient(135deg, #10B981, #059669);">\n                            \uD83D\uDCE7\n                        </div>\n                        <div class="kpi-mini__content">\n                            <div class="kpi-mini__value">24.8%</div>\n                            <div class="kpi-mini__label">Email Open Rate</div>\n                        </div>\n                        <div class="kpi-mini__trend trend trend--up">\n                            <sw-icon name="regular-arrow-up" size="12" class="icon"></sw-icon>\n                            +2.1%\n                        </div>\n                    </div>\n                    \n                    <div class="kpi-mini">\n                        <div class="kpi-mini__icon" style="background: linear-gradient(135deg, #F59E0B, #D97706);">\n                            ⭐\n                        </div>\n                        <div class="kpi-mini__content">\n                            <div class="kpi-mini__value">4.8</div>\n                            <div class="kpi-mini__label">Avg. Rating</div>\n                        </div>\n                        <div class="kpi-mini__trend trend trend--up">\n                            <sw-icon name="regular-arrow-up" size="12" class="icon"></sw-icon>\n                            +0.2\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        \n        \n        <section class="dashboard-section">\n            <div class="activity-grid">\n                \n                <div class="chart-container">\n                    <div class="chart-container__header">\n                        <h3 class="chart-container__title">\n                            <span class="icon">\uD83D\uDED2</span>\n                            Recent Orders\n                        </h3>\n                        <a href="#" class="link">View All →</a>\n                    </div>\n                    <div class="chart-container__body">\n                        <div class="activity-list">\n                            <div class="activity-item" v-for="i in 5" :key="i">\n                                <div class="activity-item__icon">\n                                    <img :src="\'https://ui-avatars.com/api/?name=Customer+\' + i + \'&background=random\'" alt="Customer">\n                                </div>\n                                <div class="activity-item__content">\n                                    <div class="activity-item__title">Order #{{ 10000 + i }}</div>\n                                    <div class="activity-item__subtitle">Customer {{ i }} • 2 items</div>\n                                </div>\n                                <div class="activity-item__value">€{{ (Math.random() * 200 + 50).toFixed(2) }}</div>\n                                <div class="activity-item__time">{{ i * 2 }}m ago</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <div class="chart-container">\n                    <div class="chart-container__header">\n                        <h3 class="chart-container__title">\n                            <span class="icon">\uD83C\uDFC6</span>\n                            Top Products\n                        </h3>\n                    </div>\n                    <div class="chart-container__body">\n                        <div class="bar-chart" style="height: 200px;">\n                            <div class="bar-chart__bar" v-for="(height, i) in [85, 70, 60, 45, 30]" :key="i" :style="\'height: \' + height + \'%\'">\n                                <div class="bar-chart__value">{{ height }}%</div>\n                                <div class="bar-chart__label">P{{ i + 1 }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </main>\n    \n    \n    <aside class="nfx-dashboard-sidebar liquid-card">\n        <div class="sidebar-header">\n            <h3>Analytics Menu</h3>\n        </div>\n        <nfx-analytics-tree\n            v-if="!modulStarting"\n            :showTree="true"\n            :activeStatisticName="activeStatisticName"\n            @nfx-statistic-selection="changeStatistic">\n        </nfx-analytics-tree>\n        <div class="sidebar-footer">\n            <a :href="manualLink" target="_blank" rel="noopener" class="help-link">\n                <sw-icon name="regular-question-circle" size="16"></sw-icon>\n                Help & Documentation\n            </a>\n        </div>\n    </aside>\n</div>\n\n<style>\n/* Dashboard Layout Styles */\n.nfx-dashboard-layout {\n    min-height: 100vh;\n    background: var(--nfx-bg-primary);\n    position: relative;\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-template-columns: 1fr 280px;\n    gap: 1.5rem;\n    padding: 1.5rem;\n}\n\n/* Background Layer */\n.background-layer {\n    position: fixed;\n    inset: 0;\n    overflow: hidden;\n    pointer-events: none;\n    z-index: 0;\n}\n\n.floating-orb {\n    position: absolute;\n    border-radius: 50%;\n    filter: blur(100px);\n    opacity: 0.6;\n    animation: float 20s ease-in-out infinite;\n}\n\n.orb-1 {\n    width: 600px;\n    height: 600px;\n    background: radial-gradient(circle, var(--nfx-primary), transparent);\n    top: -200px;\n    left: -200px;\n}\n\n.orb-2 {\n    width: 400px;\n    height: 400px;\n    background: radial-gradient(circle, var(--nfx-secondary), transparent);\n    bottom: -100px;\n    right: -100px;\n    animation-delay: -5s;\n}\n\n.orb-3 {\n    width: 300px;\n    height: 300px;\n    background: radial-gradient(circle, var(--nfx-accent), transparent);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    animation-delay: -10s;\n}\n\n/* Header */\n.nfx-dashboard-header {\n    grid-column: 1 / -1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 1.5rem 2rem;\n    gap: 2rem;\n    position: relative;\n    z-index: 10;\n}\n\n.nfx-dashboard-header__left {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n}\n\n.nfx-dashboard-header__title {\n    font-size: 1.75rem;\n    font-weight: 800;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    \n    .icon {\n        font-size: 2rem;\n    }\n}\n\n.nfx-dashboard-header__subtitle {\n    font-size: 0.875rem;\n    color: var(--nfx-text-secondary);\n}\n\n.date-selector {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    padding: 0.75rem 1.25rem;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    \n    &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n    }\n}\n\n.nfx-dashboard-header__right {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n/* Main Content */\n.nfx-dashboard-content {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    position: relative;\n    z-index: 5;\n    overflow-y: auto;\n}\n\n.dashboard-section {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.section-title {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    \n    .icon {\n        font-size: 1.5rem;\n    }\n}\n\n/* Charts Grid */\n.charts-grid {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    gap: 1.5rem;\n    \n    @media (max-width: 1280px) {\n        grid-template-columns: 1fr;\n    }\n}\n\n.chart-container--large {\n    grid-column: span 1;\n}\n\n/* Activity Grid */\n.activity-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1.5rem;\n    \n    @media (max-width: 1024px) {\n        grid-template-columns: 1fr;\n    }\n}\n\n/* Activity List */\n.activity-list {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n}\n\n.activity-item {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    padding: 0.75rem;\n    border-radius: 12px;\n    transition: all 0.2s ease;\n    \n    &:hover {\n        background: rgba(var(--nfx-primary-rgb), 0.05);\n    }\n    \n    &__icon {\n        width: 40px;\n        height: 40px;\n        border-radius: 12px;\n        overflow: hidden;\n        flex-shrink: 0;\n        \n        img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n    \n    &__content {\n        flex: 1;\n    }\n    \n    &__title {\n        font-weight: 600;\n        font-size: 0.875rem;\n    }\n    \n    &__subtitle {\n        font-size: 0.75rem;\n        color: var(--nfx-text-secondary);\n    }\n    \n    &__value {\n        font-weight: 700;\n        color: var(--nfx-primary);\n    }\n    \n    &__time {\n        font-size: 0.75rem;\n        color: var(--nfx-text-tertiary);\n    }\n}\n\n/* Sidebar */\n.nfx-dashboard-sidebar {\n    position: sticky;\n    top: 1.5rem;\n    height: calc(100vh - 3rem);\n    display: flex;\n    flex-direction: column;\n    padding: 1.5rem;\n    z-index: 5;\n}\n\n.sidebar-header {\n    margin-bottom: 1.5rem;\n    \n    h3 {\n        font-size: 1rem;\n        font-weight: 600;\n        margin: 0;\n        text-transform: uppercase;\n        letter-spacing: 0.05em;\n        color: var(--nfx-text-secondary);\n    }\n}\n\n.sidebar-footer {\n    margin-top: auto;\n    padding-top: 1.5rem;\n    border-top: 1px solid var(--nfx-border-light);\n}\n\n.help-link {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    color: var(--nfx-text-secondary);\n    text-decoration: none;\n    font-size: 0.875rem;\n    transition: color 0.2s ease;\n    \n    &:hover {\n        color: var(--nfx-primary);\n    }\n}\n\n/* Toggle Group */\n.toggle-group {\n    display: flex;\n    background: rgba(var(--nfx-bg-secondary-rgb), 0.5);\n    border-radius: 12px;\n    padding: 4px;\n}\n\n.toggle-btn {\n    padding: 0.5rem 1rem;\n    border: none;\n    background: none;\n    border-radius: 8px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    color: var(--nfx-text-secondary);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    \n    &:hover {\n        color: var(--nfx-text-primary);\n    }\n    \n    &.active {\n        background: white;\n        color: var(--nfx-text-primary);\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n}\n\n/* Responsive */\n@media (max-width: 1024px) {\n    .nfx-dashboard-layout {\n        grid-template-columns: 1fr;\n    }\n    \n    .nfx-dashboard-sidebar {\n        display: none;\n    }\n}\n</style>\n{% endblock %}',inject:["repositoryFactory","systemConfigApiService"],mixins:[A.getByName("nfx-analytics")],provide(){return{defaultOptions:this.defaultOptions}},metaInfo(){return{title:this.$createTitle()}},data(){return{manualLink:"https://coolbax.gitbook.io/coolbax-docs/handbucher/administration/statistik-professionell",modulStarting:!0,activeStatistic:null,activeStatisticName:"",activeComponentName:"",displayOptions:null,filterOptions:null,systemCurrency:null,isLoading:!0,isMobileViewport:null,splitBreakpoint:1024,category:!1,parentRoute:null,pageColor:null,filterSidebarIsOpen:!1,moreFiltersSideBarIsOpen:!1,format:"",grossOrNet:"gross",chartType:"pie",currentTheme:"light-apple",dashboard:!1,customOptions:null,salesChannelIds:[],customerGroupIds:[],dateRange:"30",salesChannnelFilterData:{},customerGroupFilterdata:{},config:{},statesFilterData:{}}},created(){this.loadSystemCurrency(),this.createdComponent()},computed:{activeFilterNumber(){return 1+(this.displayOptions.salesChannelIds.length>0?1:0)+(this.displayOptions.customerGroupIds.length>0?1:0)},activeMoreFilterNumber(){return this.showMoreFilters?(this.productFilterStatistics.includes(this.activeStatisticName)&&this.displayOptions.productSearchIds.length>0?1:0)+(this.affiliateFilterStatistics.includes(this.activeStatisticName)&&this.displayOptions.affiliateCodes.length>0?1:0)+(this.notaffiliateFilterStatistics.includes(this.activeStatisticName)&&this.displayOptions.notaffiliateCodes.length>0?1:0)+(this.campaignFilterStatistics.includes(this.activeStatisticName)&&this.displayOptions.campaignCodes.length>0?1:0)+(this.promotionFilterStatistics.includes(this.activeStatisticName)&&this.displayOptions.promotionCodes.length>0?1:0)+(this.manufacturerFilterStatistics.includes(this.activeStatisticName)&&this.displayOptions.manufacturerSearchIds.length>0?1:0)+(this.variantParentSwitchStatistics.includes(this.activeStatisticName)&&this.displayOptions.showVariantParent?1:0):null},showMoreFilters(){return[...this.productFilterStatistics,...this.affiliateFilterStatistics,...this.notaffiliateFilterStatistics,...this.campaignFilterStatistics,...this.manufacturerFilterStatistics,...this.promotionFilterStatistics,...this.variantParentSwitchStatistics].includes(this.activeStatisticName)},labelProperty(){return["name","productNumber"]},productRepository(){return this.repositoryFactory.create("product")},startDateHeadline(){return this.displayOptions&&this.displayOptions.start?new Date(this.displayOptions.start).toLocaleDateString("en-GB",{year:"numeric",month:"2-digit",day:"2-digit"}):""},endDateHeadline(){return this.displayOptions&&this.displayOptions.end?new Date(this.displayOptions.end).toLocaleDateString("en-GB",{year:"numeric",month:"2-digit",day:"2-digit"}):""},currencyRepository(){return this.repositoryFactory.create("currency")},pageClasses(){return{"has--category":!!this.category,"is--mobile":!!this.isMobileViewport}}},methods:{async createdComponent(){this.isLoading=!0,this.checkViewport(),this.registerListener(),this.setCategory(),null===this.displayOptions&&(this.displayOptions=this.defaultOptions()),this.displayOptions.salesChannnelFilterData=await this.getSalesChannelData(),this.displayOptions.customerGroupFilterdata=await this.getCustomerGroupData(),this.displayOptions.statesFilterData=await this.getStatesFilterData(),this.$route.meta.parentPath&&(this.parentRoute=this.$route.meta.parentPath),this.pageColor="#ff68b4",this.systemConfigApiService.getValues("NfxMagicAnalytics.config").then(t=>{if(t&&"object"==typeof t){for(let[e,a]of Object.entries(t))this.displayOptions.config[e.replace("NfxMagicAnalytics.config.","")]=a;t["NfxMagicAnalytics.config.collapseSidebar"]&&Shopware.State.commit("adminMenu/collapseSidebar"),t["NfxMagicAnalytics.config.chartType"]&&(this.chartType=t["NfxMagicAnalytics.config.chartType"],this.displayOptions.chartType=t["NfxMagicAnalytics.config.chartType"]),t["NfxMagicAnalytics.config.defaultSaleschannels"]&&(this.salesChannelIds=t["NfxMagicAnalytics.config.defaultSaleschannels"],this.displayOptions.salesChannelIds=t["NfxMagicAnalytics.config.defaultSaleschannels"]),t["NfxMagicAnalytics.config.defaultCustomerGroups"]&&(this.customerGroupIds=t["NfxMagicAnalytics.config.defaultCustomerGroups"],this.displayOptions.customerGroupIds=t["NfxMagicAnalytics.config.defaultCustomerGroups"]),t["NfxMagicAnalytics.config.grossOrNet"]&&(this.grossOrNet=t["NfxMagicAnalytics.config.grossOrNet"]),t["NfxMagicAnalytics.config.statisticsDateRange"]&&(this.dateRange=t["NfxMagicAnalytics.config.statisticsDateRange"],this.updateDates(this.dateRange))}setTimeout(()=>{this.$nextTick(()=>{this.filterOptions={...this.displayOptions},this.isLoading=!1,this.modulStarting=!1})},50)})},updateDates(t){["currentWeek","lastWeek","currentMonth","lastMonth","currentQuarter","lastQuarter","currentYear","lastYear"].includes(t)||(t=parseInt(t,10)),this.displayOptions=this.updateDateRange(t,this.displayOptions)},registerListener(){this.$device.onResize({listener:this.checkViewport})},changeStatistic(t){this.isLoading=!0,t.id&&(this.activeStatistic=t.data,this.activeStatisticName=t.data.name,this.activeComponentName=t.data.parameter.componentName,this.category=!0),this.$nextTick(()=>{this.isLoading=!1})},onRefresh(){"0"===this.filterOptions.dateRange?this.filterOptions.end=this.filterOptions.end.replace("00:00:00","23:59:59"):this.filterOptions=this.updateDateRange(this.filterOptions.dateRange,this.filterOptions),this.isLoading=!0,this.filterSidebarIsOpen=!1,this.moreFiltersSideBarIsOpen=!1,this.displayOptions=Object.assign({},this.filterOptions),setTimeout(()=>{this.$nextTick(()=>{this.isLoading=!1})},80)},loadSystemCurrency(){return this.currencyRepository.get(Shopware.Context.app.systemCurrencyId,B.api).then(t=>{this.systemCurrency=t})},checkViewport(){this.isMobileViewport=this.$device.getViewportWidth()<this.splitBreakpoint},onGoBack(){this.category=!1,this.activeStatistic=null,this.activeStatisticName="",this.activeComponentName=""},closeContent(){if(this.filterSidebarIsOpen){this.$refs.filterSideBar.closeContent(),this.filterSidebarIsOpen=!1,this.moreFiltersSideBarIsOpen=!1;return}this.$refs.filterSideBar.openContent(),this.filterSidebarIsOpen=!0,this.moreFiltersSideBarIsOpen=!1},closeMoreContent(){if(this.moreFiltersSideBarIsOpen){this.$refs.moreFiltersSideBar.closeContent(),this.moreFiltersSideBarIsOpen=!1,this.filterSidebarIsOpen=!1;return}this.$refs.moreFiltersSideBar.openContent(),this.moreFiltersSideBarIsOpen=!0,this.filterSidebarIsOpen=!1},defaultOptions(){let t=new Date,e=new Date;t.setHours(0,0,0,0),t.setDate(t.getDate()-30),e.setHours(23,59,59,0);let a=this.salesChannelIds,i=this.customerGroupIds;return this.displayOptions&&(void 0!==this.displayOptions.salesChannelIds&&(a=this.displayOptions.salesChannelIds),void 0!==this.displayOptions.customerGroupIds&&(i=this.displayOptions.customerGroupIds)),{statesFilterData:this.statesFilterData,config:this.config,salesChannnelFilterData:this.salesChannnelFilterData,customerGroupFilterdata:this.customerGroupFilterdata,start:t.toISOString(),end:e.toISOString(),salesChannelIds:a,customerGroupIds:i,productSearchIds:[],affiliateCodes:[],notaffiliateCodes:[],campaignCodes:[],promotionCodes:[],manufacturerSearchIds:[],chartType:this.chartType,dashboard:this.dashboard,dateRange:this.dateRange,showVariantParent:!1}},exportCSV(){this.format="csv"},downloadCSV(){this.format=""},setCategory(){this.activeStatistic?this.category=!0:this.category=!1},onFilterChangeShowParents(){this.displayOptions.showVariantParent=this.filterOptions.showVariantParent},initializeTheme(){let t=localStorage.getItem("nfx-analytics-theme");t?(this.currentTheme=t,this.applyTheme(t)):this.applyTheme("light-apple")},applyTheme(t){let e=document.body;["dark-violet","light-apple","pastel","retro-90s"].forEach(t=>{e.classList.remove(`theme-${t}`)}),e.classList.add(`theme-${t}`),this.currentTheme=t},selectPopularStatistic(t){this.$nextTick(()=>{this.$refs.statisticsTree})}},mounted(){this.initializeTheme(),document.body.classList.add("nfx-analytics"),this.$nextTick(()=>{let t=this.$el.querySelector(".nfx-analytics");t&&t.classList.add(`theme-${this.currentTheme}`)})},beforeDestroy(){document.body.classList.remove("nfx-analytics")}}),a(9653);let{Component:z,Context:P,Mixin:N}=Shopware,{Criteria:F}=Shopware.Data;z.register("nfx-analytics-product",{template:'{% block nfx_analytics_product_list %}\n<sw-page class="sw-product-list nfx-analytics-product-list">\n\n    {% block nfx_analytics_product_list_smart_bar_header %}\n        <template #smart-bar-header>\n            {% block nfx_analytics_product_list_smart_bar_header_title %}\n                <h2>\n                    {% block nfx_analytics_product_list_smart_bar_header_title_text %}\n                        {{ $tc(\'nfx-analytics.index.productGridTitle\') }}<span v-if="activeStatisticLabel">{{ activeStatisticLabel }}</span>\n                    {% endblock %}\n\n                    {% block nfx_analytics_product_list_smart_bar_header_amount %}\n                        <span\n                                v-if="!isLoading"\n                                class="sw-page__smart-bar-amount"\n                        >\n                            ({{ total }})\n                        </span>\n                    {% endblock %}\n                </h2>\n            {% endblock %}\n        </template>\n    {% endblock %}\n\n    {% block nfx_analytics_product_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            {% block nfx_analytics_product_list_smart_bar_actions_slot %}\n                <sw-button\n                        class="nfx-analytics-smart-bar-header-export-button"\n                        @click="exportCSV"\n                        variant="primary">\n                    {{ $tc(\'nfx-analytics.index.labelActionExport\') }}\n                </sw-button>\n            {% endblock %}\n        </template>\n    {% endblock %}\n\n    {% block nfx_analytics_product_list_content %}\n    <template #content>\n        <div class="sw-product-list">\n            {% block nfx_analytics_product_list_content_slot %}\n                <div class="sw-product-list__content">\n\n                    {% block nfx_analytics_product_list_grid %}\n                        <sw-data-grid\n                            :data-source="filteredGridData"\n                            :columns="productColumns"\n                            :show-settings="true"\n                            :is-loading="isLoading"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                        >\n\n                            {% block nfx_analytics_product_list_grid_columns %}\n                                {% block nfx_analytics_product_list_grid_columns_name %}\n                                    <template #column-name="{ item }">\n                                        {% block nfx_analytics_product_list_grid_name_link %}\n                                            <router-link :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                                {{ item.name }}\n                                            </router-link>\n                                        {% endblock %}\n                                    </template>\n                                {% endblock %}\n\n                                {% block nfx_analytics_order_list_grid_columns_gross %}\n                                    <template #column-gross="{ item }">\n                                        {{ currencyFilter(item.gross, systemCurrency.isoCode) }}\n                                    </template>\n                                {% endblock %}\n\n                                {% block nfx_analytics_order_list_grid_columns_net %}\n                                    <template #column-net="{ item }">\n                                        {{ currencyFilter(item.net, systemCurrency.isoCode) }}\n                                    </template>\n                                {% endblock %}\n\n                                {% block nfx_analytics_order_list_grid_columns_gprice %}\n                                    <template #column-gprice="{ item }">\n                                        {{ currencyFilter(item.gprice, systemCurrency.isoCode) }}\n                                    </template>\n                                {% endblock %}\n\n                                {% block nfx_analytics_order_list_grid_columns_nprice %}\n                                    <template #column-nprice="{ item }">\n                                        {{ currencyFilter(item.nprice, systemCurrency.isoCode) }}\n                                    </template>\n                                {% endblock %}\n\n                                {% block nfx_analytics_product_list_grid_columns_active %}\n                                    <template #column-active="{ item }">\n                                        <sw-icon\n                                            v-if="item.active==1"\n                                            name="regular-checkmark-xs"\n                                            small\n                                            class="is--active"\n                                        />\n                                        <sw-icon\n                                            v-else\n                                            name="regular-times-s"\n                                            small\n                                            class="is--inactive"\n                                        />\n                                    </template>\n                                {% endblock %}\n\n                                {% block nfx_analytics_product_list_grid_columns_manufacturerName %}\n                                    <template #column-manufacturerName="{ item }">\n                                        {% block nfx_analytics_product_list_grid_manufacturerName_link %}\n                                            <router-link :to="{ name: \'sw.manufacturer.detail\', params: { id: item.manufacturerId } }">\n                                                {{ item.manufacturerName }}\n                                            </router-link>\n                                        {% endblock %}\n                                    </template>\n                                {% endblock %}\n\n                            {% endblock %}\n\n                            {% block nfx_analytics_product_list_grid_columns_actions %}\n                                <template #actions="{ item }">\n                                    {% block nfx_analytics_product_list_grid_columns_actions_view %}\n                                        <sw-context-menu-item\n                                            class="sw-product-list__product-view-action"\n                                            :router-link="{ name: \'sw.product.detail\', params: { id: item.id } }"\n                                        >\n                                            {{ $tc(\'nfx-analytics.index.goToProductDetail\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n                                </template>\n                            {% endblock %}\n\n                            <template #pagination>\n                                {% block nfx_analytics_product_list_grid_pagination %}\n                                    <sw-pagination\n                                        :page="page"\n                                        :limit="limit"\n                                        :total="total"\n                                        :total-visible="7"\n                                        @page-change="onPageChange"\n                                    />\n                                {% endblock %}\n                            </template>\n\n                        </sw-data-grid>\n                    {% endblock %}\n\n                    {% block nfx_analytics_product_list_empty_state %}\n                        <template v-if="!isLoading && !total">\n                            <sw-empty-state\n                                :title="$tc(\'sw-product.list.messageEmpty\')"\n                            >\n                                <template #icon>\n                                    <img\n                                        :src="\'/administration/static/img/empty-states/products-empty-state.svg\' | asset"\n                                        :alt="$tc(\'sw-product.list.messageEmpty\')"\n                                    >\n                                </template>\n                            </sw-empty-state>\n                        </template>\n                    {% endblock %}\n\n                </div>\n            {% endblock %}\n\n        </div>\n\n    </template>\n\n    {% block nfx_analytics_product_list_sidebar %}\n        <template #sidebar>\n            <sw-sidebar class="sw-product-list__sidebar nfx-analytics-product-list__sidebar">\n\n                {% block nfx_analytics_product_list_sidebar_refresh %}\n                    <sw-sidebar-item\n                            :disabled="isLoading"\n                            ref="filterSideBar"\n                            icon="regular-filter"\n                            :badge="activeFilterNumber"\n                            :title="$tc(\'nfx-analytics.index.labelSidebarFilter\')"\n                            @sw-sidebar-item-close-content="closeContent"\n                            @click="closeContent">\n\n                        <div>\n                            <div class="sw-filter-panel">\n                                <div class="sw-filter-panel__item">\n                                    <sw-multi-select\n                                        v-if="!isLoading"\n                                        :options="gridData"\n                                        value-property="id"\n                                        label-property="name"\n                                        :label="$tc(\'sw-order.filters.productFilter.label\')"\n                                        :placeholder="$tc(\'sw-order.filters.productFilter.placeholder\')"\n                                        v-model:value="filterOptions.products"\n                                        @update:value="changeFilterValue"\n                                    />\n                                </div>\n                                <div class="sw-filter-panel__item">\n                                    <sw-multi-select\n                                        v-if="!isLoading"\n                                        :options="manufacturers"\n                                        value-property="id"\n                                        label-property="name"\n                                        :label="$tc(\'sw-product.filters.manufacturerFilter.label\')"\n                                        :placeholder="$tc(\'sw-product.filters.manufacturerFilter.placeholder\')"\n                                        v-model:value="filterOptions.manufacturers"\n                                        @update:value="changeFilterValue"\n                                    />\n                                </div>\n                                <div class="sw-filter-panel__item">\n                                    <sw-single-select\n                                        v-if="!isLoading"\n                                        value-property="value"\n                                        label-property="label"\n                                        :label="$tc(\'sw-product.filters.activeFilter.label\')"\n                                        :placeholder="$tc(\'sw-product.filters.activeFilter.placeholder\')"\n                                        v-model:value="filterOptions.active"\n                                        @update:value="changeFilterValue"\n                                        :options="[\n                                            {value: \'all\', label: $tc(\'sw-boolean-filter.placeholder\')},\n                                            {value: \'active\', label: $tc(\'sw-boolean-filter.active\')},\n                                            {value: \'not\', label: $tc(\'sw-boolean-filter.inactive\')}\n                                        ]"\n                                    />\n                                </div>\n                                <div class="sw-filter-panel__item">\n                                    <sw-switch-field\n                                        v-if="!isLoading"\n                                        v-model:value="filterOptions.showParents"\n                                        :label="$tc(\'nfx-analytics.component.displayOptions.showVariantParent\')"\n                                        @update:value="onChangeShowParents"\n                                    >\n                                    </sw-switch-field>\n                                </div>\n                            </div>\n                        </div>\n\n                    </sw-sidebar-item>\n                {% endblock %}\n\n            </sw-sidebar>\n        </template>\n    {% endblock %}\n\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[N.getByName("nfx-analytics")],data(){return{gridData:[],orderIds:[],manufacturers:[],manufacturerIds:[],systemCurrency:null,isLoading:!0,activeStatisticLabel:"",total:0,page:1,limit:25,sortDirection:"DESC",sortBy:"sum",storeKey:"grid.filter.nfx.analytics.order",filterSidebarIsOpen:!1,filterOptions:{products:[],manufacturers:[],active:"all",showParents:!1}}},metaInfo(){return{title:this.$createTitle()}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},filteredGridData(){let t=[...this.gridData];return this.filterOptions.products&&this.filterOptions.products.length>0&&(t=t.filter(t=>this.filterOptions.products.includes(t.id))),this.filterOptions.manufacturers&&this.filterOptions.manufacturers.length>0&&(t=t.filter(t=>this.filterOptions.manufacturers.includes(t.manufacturerId))),this.filterOptions.active&&"active"===this.filterOptions.active?t=t.filter(t=>1===parseInt(t.active,10)):this.filterOptions.active&&"not"===this.filterOptions.active&&(t=t.filter(t=>0===parseInt(t.active,10))),this.total=t.length,this.defaultGridSeriesData(t,this.page,this.limit)},activeFilterNumber(){return Number(this.filterOptions.products.length>0)+Number(this.filterOptions.manufacturers.length)+Number(["active","not"].includes(this.filterOptions.active))},orderRepository(){return this.repositoryFactory.create("order")},productColumns(){return this.getProductColumns()},orderCriteria(){let t=new F;return t.addAssociation("addresses"),t.addAssociation("billingAddress"),t.addAssociation("salesChannel"),t.addAssociation("orderCustomer"),t.addAssociation("currency"),t.addAssociation("transactions"),t.addAssociation("deliveries"),t.getAssociation("transactions").addSorting(F.sort("createdAt")),t},currencyRepository(){return this.repositoryFactory.create("currency")}},created(){this.loadSystemCurrency(),this.createdComponent()},methods:{createdComponent(){this.$route&&this.$route.query&&this.$route.query.label&&(this.activeStatisticLabel=this.$route.query.label),this.getGridData()},async getGridData(){this.isLoading=!0;let t=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.orderCriteria);try{P.api.inheritance=!0;let e=await this.orderRepository.searchIds(t,P.api);if(!e?.data)return;this.orderIds=e.data;let a=Shopware.Application.getContainer("init").httpClient,i=Shopware.Service("loginService"),n={showParents:this.filterOptions.showParents,orderIds:this.orderIds,statistics:this.$route.query.statistics,id:this.$route.query.id,userTimeZone:Shopware.State.get("session").currentUser?.timeZone??"UTC",adminLocaleLanguage:Shopware.State.getters.adminLocaleLanguage+"-"+Shopware.State.getters.adminLocaleRegion};a.post("/nfx/analytics/getProductsGridData",{parameters:n},{headers:{Authorization:`Bearer ${i.getToken()}`}}).then(t=>{void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.total=t.data.gridData.length,this.gridData=t.data.gridData,this.gridData.forEach(t=>{this.manufacturerIds.includes(t.manufacturerId)||(this.manufacturerIds.push(t.manufacturerId),this.manufacturers.push({id:t.manufacturerId,name:t.manufacturerName}))})),this.$nextTick(()=>{this.isLoading=!1})}).catch(t=>{this.isLoading=!1})}catch{this.isLoading=!1}},updateGridData(){if(0===this.orderIds.length)return;this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a={showParents:this.filterOptions.showParents,orderIds:this.orderIds,statistics:this.$route.query.statistics,id:this.$route.query.id,userTimeZone:Shopware.State.get("session").currentUser?.timeZone??"UTC",adminLocaleLanguage:Shopware.State.getters.adminLocaleLanguage+"-"+Shopware.State.getters.adminLocaleRegion};t.post("/nfx/analytics/getProductsGridData",{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.manufacturerIds=[],this.manufacturers=[],this.total=t.data.gridData.length,this.gridData=t.data.gridData,this.gridData.forEach(t=>{this.manufacturerIds.includes(t.manufacturerId)||(this.manufacturerIds.push(t.manufacturerId),this.manufacturers.push({id:t.manufacturerId,name:t.manufacturerName}))})),this.$nextTick(()=>{this.isLoading=!1})}).catch(t=>{this.isLoading=!1})},loadSystemCurrency(){return this.currencyRepository.get(Shopware.Context.app.systemCurrencyId,P.api).then(t=>{this.systemCurrency=t})},getProductColumns(){return[{property:"name",dataIndex:"name",label:"sw-product.list.columnName",allowResize:!0,primary:!0,inlineEdit:!1},{property:"number",dataIndex:"number",naturalSorting:!0,label:"sw-product.list.columnProductNumber",align:"right",allowResize:!0,inlineEdit:!1},{property:"sum",dataIndex:"sum",label:"sw-product.list.columnSales",allowResize:!0,align:"right",inlineEdit:!1},{property:"gross",dataIndex:"gross",label:this.$tc("nfx-analytics.product.sales")+this.$tc("nfx-analytics.view.gross"),allowResize:!0,align:"right",inlineEdit:!1},{property:"net",dataIndex:"net",label:this.$tc("nfx-analytics.product.sales")+this.$tc("nfx-analytics.view.net"),allowResize:!0,align:"right",inlineEdit:!1},{property:"gprice",dataIndex:"gprice",label:this.$tc("nfx-analytics.product.avPrice")+this.$tc("nfx-analytics.view.gross"),allowResize:!0,align:"right",inlineEdit:!1},{property:"nprice",dataIndex:"nprice",label:this.$tc("nfx-analytics.product.avPrice")+this.$tc("nfx-analytics.view.net"),allowResize:!0,align:"right",inlineEdit:!1},{property:"stock",dataIndex:"stock",label:"sw-product.list.columnInStock",allowResize:!0,align:"right",inlineEdit:!1},{property:"active",dataIndex:"active",label:"sw-product.list.columnActive",allowResize:!0,align:"center",inlineEdit:!1},{property:"manufacturerName",dataIndex:"manufacturerName",label:"sw-product.list.columnManufacturer",allowResize:!0,inlineEdit:!1}]},exportCSV(){let t=[...this.gridData];if(this.filterOptions.products&&this.filterOptions.products.length>0&&(t=t.filter(t=>this.filterOptions.products.includes(t.id))),this.filterOptions.manufacturers&&this.filterOptions.manufacturers.length>0&&(t=t.filter(t=>this.filterOptions.manufacturers.includes(t.manufacturerId))),this.filterOptions.active&&"active"===this.filterOptions.active?t=t.filter(t=>1===parseInt(t.active,10)):this.filterOptions.active&&"not"===this.filterOptions.active&&(t=t.filter(t=>0===parseInt(t.active,10))),Array.isArray(t)&&t.length>0){let e=[];t.forEach(t=>{let a={};a[this.$tc("sw-product.list.columnName")]=t.name,a[this.$tc("sw-product.list.columnProductNumber")]=t.number,a[this.$tc("sw-product.list.columnSales")]=t.sum,a[this.$tc("nfx-analytics.product.sales")+this.$tc("nfx-analytics.view.gross")]=Shopware.Filter.getByName("currency")(t.gross,this.systemCurrency.isoCode,2),a[this.$tc("nfx-analytics.product.sales")+this.$tc("nfx-analytics.view.net")]=Shopware.Filter.getByName("currency")(t.net,this.systemCurrency.isoCode,2),a[this.$tc("nfx-analytics.product.avPrice")+this.$tc("nfx-analytics.view.gross")]=Shopware.Filter.getByName("currency")(t.gprice,this.systemCurrency.isoCode,2),a[this.$tc("nfx-analytics.product.avPrice")+this.$tc("nfx-analytics.view.net")]=Shopware.Filter.getByName("currency")(t.nprice,this.systemCurrency.isoCode,2),a[this.$tc("sw-product.list.columnInStock")]=t.stock,a[this.$tc("sw-product.list.columnActive")]=t.active,a[this.$tc("sw-product.list.columnManufacturer")]=t.manufacturerName,e.push(a)});let a=Shopware.Application.getContainer("init").httpClient,i=Shopware.Service("loginService");e.length>0&&a.post("nfx/analytics/csvExport",{data:e},{headers:{Authorization:`Bearer ${i.getToken()}`}}).then(t=>{void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&this.csvDownload("productdata.csv",t.data.fileSize)}).catch(t=>{console.log(t)})}},changeFilterValue(){this.isLoading=!0,this.$nextTick(()=>{this.isLoading=!1})},closeContent(){if(this.filterSidebarIsOpen){this.$refs.filterSideBar.closeContent(),this.filterSidebarIsOpen=!1;return}this.$refs.filterSideBar.openContent(),this.filterSidebarIsOpen=!0},onChangeShowParents(){this.updateGridData()}}});let{Component:R,Mixin:G}=Shopware;R.register("nfx-analytics-index-sales-by-payment-method",{template:'{% block nfx_analytics_sales_by_payment %}\n    <div>\n\n    	{% block nfx_analytics_sales_by_payment_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-payment-chart"\n                :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n            	{% block nfx_analytics_sales_by_payment_chart_data %}\n                    <sw-chart\n                        v-if="isLoading == false && chartType != null"\n                        :type="chartType"\n                        :series="chartSeriesData"\n                        :options="chartOptionsSalesByPayment"\n                        sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_payment_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                            :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                            :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                            :value="chartType"\n                            @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_payment_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-payment-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n            	{% block nfx_analytics_sales_by_payment_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="gridSeriesData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :sort-by="sortBy"\n                        :sort-direction="sortDirection"\n                        @column-sort="onColumnSort"\n                        :showActions="!displayOptions.dashboard">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_payment_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[G.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"payment-method",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,sortDirection:"DESC",sortBy:"sum",chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptionsSalesByPayment(){return this.pieChartOptions("nfx-analytics.view.salesByPaymentMethod.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByPaymentMethod.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_payment_method"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:q,Mixin:E}=Shopware;q.register("nfx-analytics-index-sales-by-manufacturer",{template:'{% block nfx_analytics_sales_by_manufacturer %}\n    <div>\n\n        {% block nfx_analytics_sales_by_manufacturer_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-manufacturer-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_manufacturer_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_manufacturer_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_manufacturer_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-manufacturer-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_manufacturer_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_manufacturer_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_manufacturer_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productsOnlyInfo\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[E.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"manufacturer",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByManufacturer.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:"nfx-analytics.view.salesByManufacturer.nameColumn",allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:"nfx-analytics.view.salesByManufacturer.countColumn",allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByManufacturer.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"sales_by_manufacturer"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}});let{Component:M,Mixin:j}=Shopware;M.register("nfx-analytics-index-sales-by-shipping-method",{template:'{% block nfx_analytics_sales_by_shipping %}\n    <div>\n\n        {% block nfx_analytics_sales_by_shipping_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-shipping-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_shipping_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_shipping_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_shipping_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-shipping-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_shipping_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_shipping_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[j.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"shipping-method",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByShippingMethod.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByShippingMethod.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_shipping_method"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:U,Mixin:V}=Shopware;U.register("nfx-analytics-index-orders-count-all",{template:'{% block nfx_analytics_orders_count_all %}\n    <div>\n\n    	{% block nfx_analytics_orders_count_all_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-orders-count-all-chart"\n                :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n            	{% block nfx_analytics_orders_count_all_chart_data %}\n                    <sw-chart\n                        v-if="isLoading == false"\n                        :type="\'line\'"\n                        :series="orderCountSeries"\n                        :options="chartOptionsOrderCount"\n                        fillEmptyDates\n                        sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_orders_count_all_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-orders-count-all-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_orders_count_all_grid_sums %}\n                    <sw-alert :appearance="\'notification\'"\n                              :showIcon="false"\n                              :closable="false"\n                              :variant="\'info\'"\n                              :title="$tc(\'nfx-analytics.index.sums\')"\n                    >\n                        <div v-if="overallData != null" class="nfx-analytics-grid-sums">\n                            <div class="nfx-analytics-grid-sum">\n                                <div>{{ $tc(\'nfx-analytics.view.orderCountAll.firstTimeCountColumn\') }}:</div>\n                                <div>{{ overallData.firstTimeCount }}</div>\n                            </div>\n                            <div v-if="overallData.count > 0" class="nfx-analytics-grid-sum">\n                                <div>{{ $tc(\'nfx-analytics.view.orderCountAll.firstTimePart\') }}:</div>\n                                <div>{{ overallData.firstTimePart }} %</div>\n                            </div>\n                            <div class="nfx-analytics-grid-sum">\n                                <div>{{ $tc(\'nfx-analytics.view.orderCountAll.returningCountColumn\') }}:</div>\n                                <div>{{ overallData.returningCount }}</div>\n                            </div>\n                            <div v-if="overallData.count > 0" class="nfx-analytics-grid-sum">\n                                <div>{{ $tc(\'nfx-analytics.view.orderCountAll.returningPart\') }}:</div>\n                                <div>{{ overallData.returningPart }} %</div>\n                            </div>\n                            <div class="nfx-analytics-grid-sum">\n                                <div>{{ $tc(\'nfx-analytics.view.orderCountAll.countColumn\') }}:</div>\n                                <div>{{ overallData.count }}</div>\n                            </div>\n                        </div>\n                    </sw-alert>\n\n                {% endblock %}\n\n            	{% block nfx_analytics_orders_count_all_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!orderCountData || (orderCountData && orderCountData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="orderCountData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :showActions="false">\n\n                        <template #pagination>\n                            {% block analytics_orders_count_all_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[V.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25,overallData:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptionsOrderCount(){return{title:{text:this.$tc("nfx-analytics.view.orderCountAll.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}}}},orderCountSeries(){if(!this.seriesData)return null;let t=this.seriesData.map(t=>({x:this.parseDate(t.date),y:t.firstTimeCount})),e=this.seriesData.map(t=>({x:this.parseDate(t.date),y:t.count}));return[{name:this.$tc("nfx-analytics.view.orderCountAll.firstTimeCountChart"),data:t},{name:this.$tc("nfx-analytics.view.orderCountAll.countChart"),data:e}]},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.orderCountAll.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"firstTimeCount",dataIndex:"firstTimeCount",label:this.$tc("nfx-analytics.view.orderCountAll.firstTimeCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"returningCount",dataIndex:"returningCount",label:this.$tc("nfx-analytics.view.orderCountAll.returningCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.orderCountAll.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},orderCountData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"orders_count_all"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length;let e=t.data.seriesData;e.reverse(),this.gridData=e,this.overallData=this.getOverallData(this.gridData)}this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},getOverallData(t){if(!t||0===t.length)return null;let e={};return e.count=0,e.firstTimeCount=0,e.returningCount=0,e.firstTimePart=0,e.returningPart=0,t.forEach(t=>{e.count+=t.count,e.firstTimeCount+=t.firstTimeCount,e.returningCount+=t.returningCount}),e.count>0&&(e.firstTimePart=100*(e.firstTimeCount/e.count),e.firstTimePart=e.firstTimePart.toFixed(1),e.returningPart=100*(e.returningCount/e.count),e.returningPart=e.returningPart.toFixed(1)),e}}});let{Component:W,Mixin:K}=Shopware;W.register("nfx-analytics-index-sales-all",{template:'{% block nfx_analytics_sales_all %}\n    <div>\n\n        {% block nfx_analytics_sales_all_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-all-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_all_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_all_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-all-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_all_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_all_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_all_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-all-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[K.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!1,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.orderSales.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:[{title:{text:this.$tc("nfx-analytics.view.sumColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.countColumnShort")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesDataWithDates(this.seriesData,"date","sumNet",this.$tc("nfx-analytics.view.sumColumn"));return Array.isArray(t)&&t.push(this.defaultChartSeriesDataWithDates(this.seriesData,"date","count",this.$tc("nfx-analytics.view.countColumnShort"))[0]),t},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.orderSales.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={formatedDate:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_all"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length;let e=t.data.seriesData;e.reverse(),this.gridData=e}this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:H,Mixin:Q}=Shopware;H.register("nfx-analytics-index-sales-all-invoice",{template:'{% block nfx_analytics_sales_all_invoice %}\n    <div>\n\n        {% block nfx_analytics_sales_all_invoice_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-all-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_all_invoice_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_all_invoice_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-all-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_all_invoice_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_all_invoice_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_all_invoice_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-all-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.invoiceOrderInfo\') }}\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[Q.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!1,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesAllInvoice.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:[{title:{text:this.$tc("nfx-analytics.view.sumColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.countColumnShort")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesDataWithDates(this.seriesData,"date","sumNet",this.$tc("nfx-analytics.view.sumColumn"));return Array.isArray(t)&&t.push(this.defaultChartSeriesDataWithDates(this.seriesData,"date","count",this.$tc("nfx-analytics.view.countColumnShort"))[0]),t},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.orderSales.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={formatedDate:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_all_invoice"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length;let e=t.data.seriesData;e.reverse(),this.gridData=e}this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:X,Mixin:Z}=Shopware;X.register("nfx-analytics-index-sales-all-pwreturn",{template:'{% block nfx_analytics_sales_all_pwreturn %}\n    <div>\n\n        {% block nfx_analytics_sales_all_pwreturn_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-all-pwreturn-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_all_pwreturn_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_all_pwreturn_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-all-pwreturn-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_all_pwreturn_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showSettings="true"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-refund="{ item }">\n                            {{ currencyFilter(item.refund, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-newGross="{ item }">\n                            {{ currencyFilter(item.newGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_all_pwreturn_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_all_pwreturn_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-all-pwreturn-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-refund="{ item }">\n                            {{ currencyFilter(item.refund, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-newGross="{ item }">\n                            {{ currencyFilter(item.newGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[Z.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!1,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:[{title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesDataWithDates(this.seriesData,"date","newGross",this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn"));return Array.isArray(t)&&t.push(this.defaultChartSeriesDataWithDates(this.seriesData,"date","return",this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn"))[0]),t},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.orderSales.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"refund",dataIndex:"refund",label:this.$tc("nfx-analytics.view.salesAllPwreturn.refundColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"return",dataIndex:"return",label:this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newGross",dataIndex:"newGross",label:this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newQuantity",dataIndex:"newQuantity",label:this.$tc("nfx-analytics.view.salesAllPwreturn.newQuantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={formatedDate:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0,refund:0,return:0,newGross:0,newQuantity:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity,t.refund+=e.refund,t.return+=e.return,t.newGross+=e.newGross,t.newQuantity+=e.newQuantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_all_pwreturn"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length;let e=t.data.seriesData;e.reverse(),this.gridData=e}this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:J,Mixin:Y}=Shopware;J.register("nfx-analytics-index-sales-by-month",{template:'{% block nfx_analytics_sales_monthly %}\n    <div>\n\n        {% block nfx_analytics_sales_monthly_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-monthly-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_monthly_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_monthly_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_monthly_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_monthly_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_monthly_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[Y.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.orderSalesMonthly.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:[{title:{text:this.$tc("nfx-analytics.view.sumColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.countColumnShort")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesData(this.seriesData,"date","sumNet",this.$tc("nfx-analytics.view.sumColumn"),!0);return Array.isArray(t)&&t.push(this.defaultChartSeriesData(this.seriesData,"date","count",this.$tc("nfx-analytics.view.countColumnShort"),!0)[0]),t},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.orderSalesMonthly.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={date:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_month"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tt,Mixin:te}=Shopware;tt.register("nfx-analytics-index-sales-by-month-invoice",{template:'{% block nfx_analytics_sales_monthly_invoice %}\n    <div>\n\n        {% block nfx_analytics_sales_monthly_invoice_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-monthly-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_monthly_invoice_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_monthly_invoice_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_monthly_invoice_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_monthly_invoice_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_monthly_invoice_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                        positionIdentifier="\'test\'"\n                        class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                        :isLoading="isLoading"\n                        v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.invoiceOrderInfo\') }}\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[te.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByMonthInvoice.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:[{title:{text:this.$tc("nfx-analytics.view.sumColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.countColumnShort")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesData(this.seriesData,"date","sumNet",this.$tc("nfx-analytics.view.sumColumn"),!0);return Array.isArray(t)&&t.push(this.defaultChartSeriesData(this.seriesData,"date","count",this.$tc("nfx-analytics.view.countColumnShort"),!0)[0]),t},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.orderSalesMonthly.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={date:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_month_invoice"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:ta,Mixin:ti}=Shopware;ta.register("nfx-analytics-index-sales-by-month-pwreturn",{template:'{% block nfx_analytics_sales_monthly_pwreturn %}\n    <div>\n\n        {% block nfx_analytics_sales_monthly_pwreturn_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-monthly-pwreturn-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_monthly_pwreturn_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_monthly_pwreturn_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-pwreturn-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_monthly_pwreturn_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-refund="{ item }">\n                            {{ currencyFilter(item.refund, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-newGross="{ item }">\n                            {{ currencyFilter(item.newGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_monthly_pwreturn_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_monthly_pwreturn_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-pwreturn-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-refund="{ item }">\n                            {{ currencyFilter(item.refund, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-newGross="{ item }">\n                            {{ currencyFilter(item.newGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ti.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesMonthlyPwreturn.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:[{title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesData(this.seriesData,"date","newGross",this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn"),!0);return Array.isArray(t)&&t.push(this.defaultChartSeriesData(this.seriesData,"date","return",this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn"),!0)[0]),t},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.orderSalesMonthly.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"refund",dataIndex:"refund",label:this.$tc("nfx-analytics.view.salesAllPwreturn.refundColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"return",dataIndex:"return",label:this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newGross",dataIndex:"newGross",label:this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newQuantity",dataIndex:"newQuantity",label:this.$tc("nfx-analytics.view.salesAllPwreturn.newQuantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={date:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0,refund:0,return:0,newGross:0,newQuantity:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity,t.refund+=e.refund,t.return+=e.return,t.newGross+=e.newGross,t.newQuantity+=e.newQuantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_month_pwreturn"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tn,Mixin:ts}=Shopware;tn.register("nfx-analytics-index-sales-by-quarter",{template:'{% block nfx_analytics_sales_by_quarter %}\n    <div>\n\n        {% block nfx_analytics_sales_by_quarter_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-monthly-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_quarter_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_quarter_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_quarter_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="orderLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_quarter_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_quarter_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-by-quarter-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ts.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByQuarter.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:[{title:{text:this.$tc("nfx-analytics.view.sumColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.countColumnShort")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesData(this.seriesData,"date","sumNet",this.$tc("nfx-analytics.view.sumColumn"),!0);return Array.isArray(t)&&t.push(this.defaultChartSeriesData(this.seriesData,"date","count",this.$tc("nfx-analytics.view.countColumnShort"),!0)[0]),t},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.salesByQuarterInvoice.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={date:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_quarter"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tr,Mixin:tl}=Shopware;tr.register("nfx-analytics-index-sales-by-quarter-invoice",{template:'{% block nfx_analytics_sales_by_quarter_invoice %}\n    <div>\n\n        {% block nfx_analytics_sales_by_quarter_invoice_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-monthly-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_quarter_invoice_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_quarter_invoice_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_quarter_invoice_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_quarter_invoice_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_quarter_invoice_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-by-quarter-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.invoiceOrderInfo\') }}\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tl.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByQuarterInvoice.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:[{title:{text:this.$tc("nfx-analytics.view.sumColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.countColumnShort")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesData(this.seriesData,"date","sumNet",this.$tc("nfx-analytics.view.sumColumn"),!0);return Array.isArray(t)&&t.push(this.defaultChartSeriesData(this.seriesData,"date","count",this.$tc("nfx-analytics.view.countColumnShort"),!0)[0]),t},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.salesByQuarterInvoice.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={date:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_quarter_invoice"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:to,Mixin:tc}=Shopware;to.register("nfx-analytics-index-sales-by-quarter-pwreturn",{template:'{% block nfx_analytics_sales_by_quarter_pwreturn %}\n    <div>\n\n        {% block nfx_analytics_sales_by_quarter_pwreturn_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-monthly-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_quarter_pwreturn_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_quarter_pwreturn_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-monthly-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_quarter_pwreturn_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-refund="{ item }">\n                            {{ currencyFilter(item.refund, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-newGross="{ item }">\n                            {{ currencyFilter(item.newGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_quarter_pwreturn_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_quarter_pwreturn_grid_summery %}\n                <sw-card :title="$tc(\'nfx-analytics.index.sums\')"\n                         positionIdentifier="\'test\'"\n                         class="nfx-analytics-content-card-grid nfx-analytics-sales-by-quarter-grid"\n                         :isLoading="isLoading"\n                         v-if="!displayOptions.dashboard && summerySeriesData && summerySeriesData.length > 0">\n\n                    <sw-data-grid :dataSource="summerySeriesData"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :showActions="false">\n\n                        <template #column-sumGross="{ item }">\n                            {{ currencyFilter(item.sumGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNet="{ item }">\n                            {{ currencyFilter(item.sumNet, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-sumNetAverage="{ item }">\n                            {{ currencyFilter(item.sumNetAverage, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-refund="{ item }">\n                            {{ currencyFilter(item.refund, systemCurrency.isoCode,2) }}\n                        </template>\n\n                        <template #column-newGross="{ item }">\n                            {{ currencyFilter(item.newGross, systemCurrency.isoCode,2) }}\n                        </template>\n\n                    </sw-data-grid>\n                </sw-card>\n            {% endblock %}\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.invoiceOrderInfo\') }}\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tc.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByQuarterPwreturn.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:[{title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn")},min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}},{opposite:!0,title:{text:this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn")},labels:{formatter:t=>parseInt(t,10)}}]}},chartSeriesData(){let t=this.defaultChartSeriesData(this.seriesData,"date","newGross",this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn"),!0);return Array.isArray(t)&&t.push(this.defaultChartSeriesData(this.seriesData,"date","return",this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn"),!0)[0]),t},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.salesByQuarterInvoice.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumGross",dataIndex:"sumGross",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNet",dataIndex:"sumNet",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sumNetAverage",dataIndex:"sumNetAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.sumNetAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"quantityAverage",dataIndex:"quantityAverage",label:this.$tc("nfx-analytics.view.salesAllInvoice.quantityAverageColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"refund",dataIndex:"refund",label:this.$tc("nfx-analytics.view.salesAllPwreturn.refundColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"return",dataIndex:"return",label:this.$tc("nfx-analytics.view.salesAllPwreturn.returnColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newGross",dataIndex:"newGross",label:this.$tc("nfx-analytics.view.salesAllPwreturn.newGrossColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newQuantity",dataIndex:"newQuantity",label:this.$tc("nfx-analytics.view.salesAllPwreturn.newQuantityColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},summerySeriesData(){if(!this.gridData||!Array.isArray(this.gridData)||Array.isArray(this.gridData)&&0===this.gridData.length)return null;let t={date:"_",count:0,sumGross:0,sumNet:0,quantity:0,sumNetAverage:0,quantityAverage:0,refund:0,return:0,newGross:0,newQuantity:0};return this.gridData.forEach(e=>{t.count+=e.count,t.sumGross+=e.sumGross,t.sumNet+=e.sumNet,t.quantity+=e.quantity,t.refund+=e.refund,t.return+=e.return,t.newGross+=e.newGross,t.newQuantity+=e.newQuantity}),t.sumNetAverage=Math.round(100*t.sumNet/t.count)/100,t.quantityAverage=Math.round(100*t.quantity/t.count)/100,[t]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_quarter_pwreturn"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:td,Mixin:tp}=Shopware;td.register("nfx-analytics-index-sales-by-products",{template:'{% block nfx_analytics_sales_by_products %}\n    <div>\n\n        {% block nfx_analytics_sales_by_products_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-products-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_products_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_products_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_products_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-products-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_products_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard"\n                            :showSettings="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_sales_by_products_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-priceAV="{ item }">\n                            {{ currencyFilter(item.priceAV, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_products_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_products_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productsOnlyInfo\') }}\n                        {{ $tc(\'nfx-analytics.view.salesByProducts.info\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tp.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"line-item",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sales"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByProducts.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sales","Bestellungen",!1,!0)},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.salesByProducts.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByProducts.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByProducts.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"stock",dataIndex:"stock",label:this.$tc("nfx-analytics.view.stock"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.salesByProducts.salesColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"orderCount",dataIndex:"orderCount",label:this.$tc("nfx-analytics.view.salesByProducts.orderCount"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"priceAV",dataIndex:"priceAV",label:this.$tc("nfx-analytics.view.salesByProducts.priceAV")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"manufacturer",dataIndex:"manufacturer",label:this.$tc("nfx-analytics.view.manufacturer"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"sales_by_products"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}});let{Component:th,Mixin:tu}=Shopware;th.register("nfx-analytics-index-sales-by-products-pwreturn",{template:'{% block nfx_analytics_sales_by_products %}\n    <div>\n\n        {% block nfx_analytics_sales_by_products_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-products-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_products_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_products_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_products_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-products-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_products_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard"\n                            :showSettings="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_sales_by_products_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block analytics_sales_by_products_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_products_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productsOnlyInfo\') }}\n                        {{ $tc(\'nfx-analytics.view.salesByProducts.info\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tu.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"line-item",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByProductsPwreturn.titleChart")},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","newSum","Verk\xe4ufe",!1,!0)},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.salesByProducts.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByProducts.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByProducts.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"stock",dataIndex:"stock",label:this.$tc("nfx-analytics.view.stock"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"returnSum",dataIndex:"returnSum",label:this.$tc("nfx-analytics.view.salesByProductsPwreturn.returnSumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"newSum",dataIndex:"newSum",label:this.$tc("nfx-analytics.view.salesByProductsPwreturn.newSumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"orderCount",dataIndex:"orderCount",label:this.$tc("nfx-analytics.view.salesByProducts.orderCount"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"manufacturer",dataIndex:"manufacturer",label:this.$tc("nfx-analytics.view.manufacturer"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"sales_by_products_pwreturn"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}});let{Component:tm,Mixin:ty}=Shopware;tm.register("nfx-analytics-index-sales-by-country",{template:'{% block nfx_analytics_sales_by_country %}\n    <div>\n\n        {% block nfx_analytics_sales_by_country_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-country-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_country_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_country_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_country_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-country-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_country_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_country_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ty.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"shipping-country",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByCountry.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByCountry.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_country"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tg,Mixin:tf}=Shopware;tg.register("nfx-analytics-index-sales-by-language",{template:'{% block nfx_analytics_sales_by_language %}\n    <div>\n\n        {% block nfx_analytics_sales_by_language_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-language-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_language_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_language_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_language_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-language-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_language_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_language_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tf.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByLanguage.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByLanguage.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByLanguage.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByLanguage.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_language"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tv,Mixin:tb}=Shopware;tv.register("nfx-analytics-index-count-by-products",{template:'{% block nfx_analytics_count_by_products %}\n    <div>\n\n        {% block nfx_analytics_count_by_products_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-count-by-products-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_count_by_products_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_count_by_products_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_count_by_products_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-count-by-products-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_count_by_products_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                    >\n                        {% block nfx_analytics_count_by_products_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_count_by_products_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tb.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.categoryCompare.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.countByProducts.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.countByProducts.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.countByProducts.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"count_by_products"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tw,Mixin:tx}=Shopware;tw.register("nfx-analytics-index-sales-by-saleschannel",{template:'{% block nfx_analytics_sales_by_saleschannel %}\n    <div>\n\n        {% block nfx_analytics_sales_by_saleschannel_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-saleschannel-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_saleschannel_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_saleschannel_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_saleschannel_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-saleschannel-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_saleschannel_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                    <template #actions="{ item }">\n                        <sw-context-menu-item\n                            class="sw-order-list__order-view-action"\n                            :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                            :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                        >\n                            {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                        </sw-context-menu-item>\n                        <sw-context-menu-item\n                            class="sw-order-list__order-view-action"\n                            :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                            :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                        >\n                            {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                        </sw-context-menu-item>\n                    </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_saleschannel_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tx.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"sales-channel",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesBySaleschannel.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesBySaleschannel.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_saleschannel"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:t_,Mixin:tS}=Shopware;t_.register("nfx-analytics-index-sales-by-affiliate",{template:'{% block nfx_analytics_sales_by_affiliate %}\n    <div>\n\n        {% block nfx_analytics_sales_by_affiliate_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-affiliate-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_affiliate_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_affiliate_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_affiliate_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-affiliate-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_affiliate_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showActions="!displayOptions.dashboard"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showSelection="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_affiliate_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tS.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"affiliate-code",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByAffiliate.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByAffiliate.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"200px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_affiliate"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setLabels(t.data.seriesData),a=this.setLabels(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},setLabels(t){for(let e=0;e<t.length;e++)"nfx-analytics.data.others"===t[e].name?t[e].name=this.$tc("nfx-analytics.data.others"):"nfx-analytics.view.noAffiliate"===t[e].name&&(t[e].name=this.$tc("nfx-analytics.view.noAffiliate"));return t}}});let{Component:tC,Mixin:tk}=Shopware;tC.register("nfx-analytics-index-sales-by-campaign",{template:'{% block nfx_analytics_sales_by_campaign %}\n    <div>\n\n        {% block nfx_analytics_sales_by_campaign_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-campaign-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_campaign_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_campaign_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_campaign_grid %}\n\n\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-campaign-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_campaign_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showActions="!displayOptions.dashboard"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showSelection="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_campaign_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tk.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"campaign-code",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByCampaign.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByCampaign.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_campaign"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setLabels(t.data.seriesData),a=this.setLabels(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},setLabels(t){for(let e=0;e<t.length;e++)"nfx-analytics.data.others"===t[e].name?t[e].name=this.$tc("nfx-analytics.data.others"):"nfx-analytics.view.noCampaign"===t[e].name&&(t[e].name=this.$tc("nfx-analytics.view.noCampaign"));return t}}});let{Component:tD,Mixin:tO}=Shopware;tD.register("nfx-analytics-index-sales-by-customergroups",{template:'{% block nfx_analytics_sales_by_customergroups %}\n    <div>\n\n        {% block nfx_analytics_sales_by_customergroups_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-customergroups-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_customergroups_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_customergroups_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_customergroups_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-customergroups-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_customergroups_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_customergroups_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tO.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"customer-group",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByCustomergroups.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByCustomergroups.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_customergroups"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:t$,Mixin:tI}=Shopware;t$.register("nfx-analytics-index-sales-by-weekdays",{template:'{% block nfx_analytics_sales_by_weekdays %}\n    <div>\n\n        {% block nfx_analytics_sales_by_weekdays_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-weekdays-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_weekdays_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_weekdays_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-weekdays-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_weekdays_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_weekdays_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tI.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByWeekdays.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByWeekdays.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px",fred:!0},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByWeekdays.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByWeekdays.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_weekdays"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){let e=this.setWeekdaysName(t.data.seriesData);this.seriesData=e,this.total=t.data.seriesData.length,this.gridData=e}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},setWeekdaysName(t){for(let e=0;e<t.length;e++)t[e].name=this.$tc(t[e].name);return t}}});let{Component:tL,Mixin:tT}=Shopware;tL.register("nfx-analytics-index-sales-by-time",{template:'{% block nfx_analytics_sales_by_time %}\n    <div>\n\n        {% block nfx_analytics_sales_by_time_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-time-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_time_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_time_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-time-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_time_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_time_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tT.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.salesByTime.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByTime.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByTime.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByTime.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_time"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tB,Mixin:tA}=Shopware;tB.register("nfx-analytics-index-orders-by-status",{template:'{% block nfx_analytics_orders_by_status %}\n    <div>\n\n        {% block nfx_analytics_orders_by_status_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-orders-by-status-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_orders_by_status_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_orders_by_status_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_orders_by_status_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-orders-by-status-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_orders_by_status_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_orders_by_status_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_orders_by_status_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tA.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"status",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.ordersByStatus.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.ordersByStatus.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.ordersByStatus.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.ordersByStatus.salesColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"orders_by_status"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tz,Mixin:tP}=Shopware;tz.register("nfx-analytics-index-product-low-instock",{template:'{% block nfx_analytics_product_low_instock %}\n    <div>\n\n        {% block nfx_analytics_product_low_instock_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-product-low-instock-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_product_low_instock_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(\'nfx-analytics.view.productLowInstock.titleChart\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_product_low_instock_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_product_low_instock_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tP.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,sortDirection:"ASC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productLowInstock.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productLowInstock.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productLowInstock.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"product_low_instock"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData){let e=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.gridData=e}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tN,Mixin:tF}=Shopware;tN.register("nfx-analytics-index-product-high-instock",{template:'{% block nfx_analytics_product_high_instock %}\n    <div>\n\n        {% block nfx_analytics_product_high_instock_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-product-high-instock-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_product_high_instock_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(\'nfx-analytics.view.productHighInstock.titleChart\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_product_high_instock_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_product_high_instock_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tF.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productHighInstock.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productHighInstock.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productHighInstock.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},productSearchIds(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"product_high_instock"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData){let e=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.gridData=e}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(2043);let{Component:tR,Mixin:tG}=Shopware;tR.register("nfx-analytics-index-sales-by-promotion",{template:'{% block nfx_analytics_sales_by_promotion %}\n    <div>\n\n        {% block nfx_analytics_sales_by_promotion_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-promotion-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_promotion_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_promotion_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_promotion_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-promotion-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_promotion_grid_data_code %}\n                    <div class="nfx-analytics-sales-by-promotion-grid-headline">\n                        {{ $tc(\'nfx-analytics.view.salesByPromotion.titleGridCode\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="!displayOptions.dashboard">\n\n                        {% block nfx_analytics_sales_by_promotion_grid_columns_name_code %}\n                            <template #column-name="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.promotion.v2.detail\', params: { id: item.id } }">\n                                    {{ item.name }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-discount="{ item }">\n                            {{ currencyFilter(item.discount, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-avg="{ item }">\n                            {{ currencyFilter(item.avg, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.code, filterName, displayOptions, activeStatistic)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.code, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_promotion_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_promotion_grid_data_promotion %}\n                    <div class="nfx-analytics-sales-by-promotion-grid-headline">\n                        {{ $tc(\'nfx-analytics.view.salesByPromotion.titleGridPromotion\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesDataPromotion || (gridSeriesDataPromotion && gridSeriesDataPromotion.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                                  :dataSource="gridSeriesDataPromotion"\n                                  :columns="getGridColumns"\n                                  :showSelection="false"\n                                  :sort-by="sortByPromotion"\n                                  :sort-direction="sortDirectionPromotion"\n                                  @column-sort="onColumnSortPromotion"\n                                  :showActions="false">\n\n                        {% block nfx_analytics_sales_by_promotion_grid_columns_name_promotion %}\n                            <template #column-name="{ item }">\n                                <router-link\n                                    class="sw-data-grid__cell-value"\n                                    :to="{ name: \'sw.promotion.v2.detail\', params: { id: item.id } }">\n                                    {{ item.name }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-discount="{ item }">\n                            {{ currencyFilter(item.discount, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-avg="{ item }">\n                            {{ currencyFilter(item.avg, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_promotion_grid_pagination_promotion %}\n                                <sw-pagination :page="pagePromotion"\n                                               :limit="limitPromotion"\n                                               :total="totalPromotion"\n                                               :total-visible="7"\n                                               @page-change="onPageChangePromotion">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tG.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"promotion-code",isLoading:!1,seriesData:null,gridData:null,seriesDataPromotion:null,gridDataPromotion:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum",totalPromotion:0,pagePromotion:1,limitPromotion:25,sortDirectionPromotion:"DESC",sortByPromotion:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByPromotion.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByPromotion.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"code",dataIndex:"code",label:this.$tc("nfx-analytics.view.salesByPromotion.codeColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"discount",dataIndex:"discount",label:this.$tc("nfx-analytics.view.salesByPromotion.discountColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByPromotion.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByPromotion.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"avg",dataIndex:"avg",label:this.$tc("nfx-analytics.view.salesByPromotion.avgColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},gridSeriesDataPromotion(){return this.defaultGridSeriesData(this.gridDataPromotion,this.pagePromotion,this.limitPromotion)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_promotion"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesDataCode&&t.data.gridDataCode&&t.data.seriesDataPromotion&&t.data.gridDataPromotion&&(this.total=t.data.gridDataCode.length,this.seriesData=t.data.seriesDataCode,this.gridData=t.data.gridDataCode,this.totalPromotion=t.data.gridDataPromotion.length,this.seriesDataPromotion=t.data.seriesDataPromotion,this.gridDataPromotion=t.data.gridDataPromotion),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onPageChangePromotion(t){this.pagePromotion=t.page,this.limitPromotion=t.limit},onColumnSortPromotion(t){this.isLoading=!0;let e=null;if(this.sortByPromotion===t.dataIndex?this.sortDirectionPromotion="ASC"===this.sortDirectionPromotion?"DESC":"ASC":this.sortByPromotion=t.dataIndex,0===this.gridDataPromotion.length){this.$nextTick(()=>{this.isLoading=!1});return}this.gridDataPromotion.length>0&&this.gridDataPromotion[this.gridDataPromotion.length-1].name===this.$tc("nfx-analytics.data.others")&&(e=this.gridDataPromotion.pop()),"ASC"===this.sortDirectionPromotion?this.gridDataPromotion[0]&&this.gridDataPromotion[0][this.sortByPromotion]&&"string"==typeof this.gridDataPromotion[0][this.sortByPromotion]?this.gridDataPromotion.sort((t,e)=>{let a=t[this.sortByPromotion].toUpperCase(),i=e[this.sortByPromotion].toUpperCase();return a>i?1:a<i?-1:0}):this.gridDataPromotion.sort((t,e)=>t[this.sortByPromotion]-e[this.sortByPromotion]):this.gridDataPromotion[0]&&this.gridDataPromotion[0][this.sortByPromotion]&&"string"==typeof this.gridDataPromotion[0][this.sortByPromotion]?this.gridDataPromotion.sort((t,e)=>{let a=t[this.sortByPromotion].toUpperCase(),i=e[this.sortByPromotion].toUpperCase();return a>i?-1:a<i?1:0}):this.gridDataPromotion.sort((t,e)=>e[this.sortByPromotion]-t[this.sortByPromotion]),setTimeout(()=>{e&&this.gridDataPromotion.push(e),this.$nextTick(()=>{this.isLoading=!1})},400)}}});let{Component:tq,Mixin:tE}=Shopware;tq.register("nfx-analytics-index-sales-by-promotion-others",{template:'{% block nfx_analytics_sales_by_promotion_others %}\n    <div>\n\n        {% block nfx_analytics_sales_by_promotion_others_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-promotion-others-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_promotion_others_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_promotion_others_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_promotion_others_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-promotion-others-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_promotion_others_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        {% block nfx_analytics_sales_by_promotion_others_grid_columns_name %}\n                            <template #column-name="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.promotion.v2.detail\', params: { id: item.id } }">\n                                    {{ item.name }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-discount="{ item }">\n                            {{ currencyFilter(item.discount, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-avg="{ item }">\n                            {{ currencyFilter(item.avg, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_promotion_others_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tE.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByPromotionOthers.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByPromotionOthers.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"discount",dataIndex:"discount",label:this.$tc("nfx-analytics.view.salesByPromotionOthers.discountColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByPromotionOthers.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByPromotionOthers.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"avg",dataIndex:"avg",label:this.$tc("nfx-analytics.view.salesByPromotionOthers.avgColumnExport")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_promotion_others"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData&&(this.total=t.data.gridData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tM,Mixin:tj}=Shopware;tM.register("nfx-analytics-index-product-inactive-with-instock",{template:'{% block nfx_analytics_product_inactive_with_instock %}\n    <div>\n\n        {% block nfx_analytics_product_inactive_with_instock_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-product-inactive-with-instock-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_product_inactive_with_instock_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(\'nfx-analytics.view.productInactiveWithInstock.titleChart\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                    >\n                        {% block nfx_analytics_product_inactive_with_instock_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_product_inactive_with_instock_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tj.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productInactiveWithInstock.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productInactiveWithInstock.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productInactiveWithInstock.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"product_inactive_with_instock"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData){let e=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.gridData=e}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tU,Mixin:tV}=Shopware;tU.register("nfx-analytics-index-product-by-orders",{template:'{% block nfx_analytics_product_by_orders %}\n    <div>\n\n        {% block nfx_analytics_product_by_orders_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-product-by-orders-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_product_by_orders_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_product_by_orders_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_product_by_orders_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-product-by-orders-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_product_by_orders_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_product_by_orders_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        v-if="item.type == \'product\'"\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block analytics_product_by_orders_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tV.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{filterName:"line-item",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.productByOrders.titleChart")},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productByOrders.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productByOrders.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productByOrders.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"product_by_orders"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tW,Mixin:tK}=Shopware;tW.register("nfx-analytics-index-sales-by-customer",{template:'{% block nfx_analytics_sales_by_customer %}\n    <div>\n\n        {% block nfx_analytics_sales_by_customer_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-customer-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_customer_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_customer_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_customer_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-customer-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_customer_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="gridSeriesData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :sort-by="sortBy"\n                        :sort-direction="sortDirection"\n                        @column-sort="onColumnSort"\n                        :showActions="false">\n\n                        {% block nfx_analytics_sales_by_customer_grid_columns_customer_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.customer.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-lastLogin="{ item }">\n                            <sw-time-ago v-if="item.lastLogin" :date="item.lastLogin" />\n                            <p v-else>-</p>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_customer_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tK.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByCustomer.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.salesByCustomer.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByCustomer.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"70px"},{property:"email",dataIndex:"email",label:this.$tc("nfx-analytics.view.salesByCustomer.emailColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"70px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByCustomer.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByCustomer.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"70px"},{property:"lastLogin",dataIndex:"lastLogin",label:this.$tc("nfx-analytics.view.salesByCustomer.lastLoginColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"70px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_customer"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tH,Mixin:tQ}=Shopware;tH.register("nfx-analytics-index-new-customers-by-time",{template:'{% block nfx_analytics_new_customers_by_time %}\n    <div>\n\n        {% block nfx_analytics_new_customers_by_time_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-new-customers-by-time-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_new_customers_by_time_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_new_customers_by_time_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-new-customers-by-time-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_new_customers_by_time_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #pagination>\n                            {% block analytics_new_customers_by_time_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tQ.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.newCustomersByTime.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}}}},chartSeriesData(){if(!this.seriesData)return null;let t=this.seriesData.map(t=>({x:t.date,y:t.sum}));t.reverse();let e=this.seriesData.map(t=>({x:t.date,y:t.paying}));return e.reverse(),[{name:this.$tc("nfx-analytics.view.newCustomersByTime.sumChart"),data:t},{name:this.$tc("nfx-analytics.view.newCustomersByTime.payingChart"),data:e}]},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.newCustomersByTime.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.newCustomersByTime.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"paying",dataIndex:"paying",label:this.$tc("nfx-analytics.view.newCustomersByTime.payingColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"new_customers_by_time"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:tX,Mixin:tZ}=Shopware;tX.register("nfx-analytics-index-customer-age",{template:'{% block nfx_analytics_customer_age %}\n    <div>\n\n        {% block nfx_analytics_customer_age_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-customer-age-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_customer_age_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_customer_age_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-customer-age-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_customer_age_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #pagination>\n                            {% block analytics_customer_age_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tZ.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.customerAge.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}}}},chartSeriesData(){if(!this.seriesData)return null;let t=this.seriesData.map(t=>({x:t.age,y:t.count}));return t.reverse(),[{name:"Bestellungen",data:t}]},getGridColumns(){return[{property:"age",dataIndex:"age",label:this.$tc("nfx-analytics.view.customerAge.ageColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"percent",dataIndex:"percent",label:this.$tc("nfx-analytics.view.customerAge.percentColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.customerAge.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"customer_age"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(1639);let{Component:tJ,Mixin:tY}=Shopware;tJ.register("nfx-analytics-index-product-soon-outstock",{template:'{% block nfx_analytics_product_soon_outstock %}\n    <div>\n\n        {% block nfx_analytics_product_soon_outstock_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-product-soon-outstock-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_product_soon_outstock_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(\'nfx-analytics.view.productSoonOutstock.titleChart\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_product_soon_outstock_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_product_soon_outstock_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_soon_outstock_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productSoonOutstock.description\') }} {{ displayOptions.config.lookBackDays }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[tY.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,sortDirection:"ASC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productSoonOutstock.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productSoonOutstock.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productSoonOutstock.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"stock",dataIndex:"stock",label:this.$tc("nfx-analytics.view.productSoonOutstock.stockColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sold",dataIndex:"sold",label:this.$tc("nfx-analytics.view.productSoonOutstock.soldColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"product_soon_outstock"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.total=t.data.gridData.length,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:t0,Mixin:t1}=Shopware;t0.register("nfx-analytics-index-orders-by-transaction-status",{template:'{% block nfx_analytics_orders_by_transaction_status %}\n    <div>\n\n        {% block nfx_analytics_orders_by_transaction_status_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-orders-by-transaction-status-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_orders_by_transaction_status_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_orders_by_transaction_status_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_orders_by_transaction_status_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-orders-by-transaction-status-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_orders_by_transaction_status_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_orders_by_transaction_status_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_orders_by_transaction_status_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[t1.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"payment-status",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.ordersByTransactionStatus.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.ordersByTransactionStatus.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.ordersByTransactionStatus.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.ordersByTransactionStatus.salesColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"orders_by_transaction_status"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:t2,Mixin:t5}=Shopware;t2.register("nfx-analytics-index-orders-by-delivery-status",{template:'{% block nfx_analytics_orders_by_delivery_status %}\n    <div>\n\n        {% block nfx_analytics_orders_by_delivery_status_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-orders-by-delivery-status-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_orders_by_delivery_status_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_orders_by_delivery_status_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_orders_by_delivery_status_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-orders-by-delivery-status-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_orders_by_delivery_status_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_orders_by_delivery_status_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_orders_by_delivery_status_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[t5.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"delivery-status",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.ordersByDeliveryStatus.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.ordersByDeliveryStatus.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.ordersByDeliveryStatus.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.ordersByDeliveryStatus.salesColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"orders_by_delivery_status"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(5601);let{Component:t3,Mixin:t7}=Shopware;t3.register("nfx-analytics-index-quick-overview",{template:'{% block nfx_analytics_quick_overview %}\n    <div>\n\n        {% block nfx_analytics_quick_overview_summery %}\n            <nfx-analytics-summery\n                    :headline="$tc(activeStatistic.label)"\n                    :data="summeryData"\n                    :columns="summeryColumnNames"\n            >\n            </nfx-analytics-summery>\n        {% endblock %}\n\n        {% block nfx_analytics_quick_overview_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-quick-overview-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_quick_overview_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                    >\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-avg="{ item }">\n                            {{ currencyFilter(item.avg, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-netto="{ item }">\n                            {{ currencyFilter(item.netto, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block nfx_analytics_quick_overview_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_quick_overview_help %}\n                <sw-alert\n                        v-if="!displayOptions.dashboard"\n                        :appearance="\'notification\'"\n                        :showIcon="false"\n                        :closable="false"\n                        :variant="\'neutral\'"\n                        :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.quickOverview.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[t7.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!1,default:{}},format:{type:String,required:!1,default:""}},data(){return{summeryData:[],summeryColumnNames:{},isLoading:!1,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.dateColumn"),allowResize:!0,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.quickOverview.orderCountColumn"),allowResize:!0,inlineEdit:!1,width:"100px"},{property:"firstTimeCount",dataIndex:"firstTimeCount",label:this.$tc("nfx-analytics.view.quickOverview.firstTimeCountColumn"),allowResize:!0,inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.quickOverview.salesColumn"),allowResize:!0,inlineEdit:!1,width:"100px"},{property:"avg",dataIndex:"avg",label:this.$tc("nfx-analytics.view.quickOverview.avgSalesColumn"),allowResize:!0,inlineEdit:!1,width:"100px"},{property:"netto",dataIndex:"netto",label:this.$tc("nfx-analytics.view.quickOverview.nettoSalesColumn"),allowResize:!0,inlineEdit:!1,width:"100px"},{property:"new",dataIndex:"new",label:this.$tc("nfx-analytics.view.quickOverview.newCustomersColumn"),allowResize:!0,inlineEdit:!1,align:"right",width:"100px"},{property:"paying",dataIndex:"paying",label:this.$tc("nfx-analytics.view.quickOverview.newPayingCustomersColumn"),allowResize:!0,inlineEdit:!1,align:"right",width:"100px"},{property:"visitors",dataIndex:"visitors",label:this.$tc("nfx-analytics.view.quickOverview.visitorsColumn"),allowResize:!0,inlineEdit:!1,align:"right",width:"100px"},{property:"impressions",dataIndex:"impressions",label:this.$tc("nfx-analytics.view.quickOverview.impressionsColumn"),allowResize:!0,inlineEdit:!1,align:"right",width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.summeryColumnNames={count:this.$tc("nfx-analytics.view.quickOverview.orderCountColumn"),firstTimeCount:this.$tc("nfx-analytics.view.quickOverview.firstTimeCountColumn"),sales:this.$tc("nfx-analytics.view.quickOverview.salesColumn"),avgSales:this.$tc("nfx-analytics.view.quickOverview.avgSalesColumn"),netto:this.$tc("nfx-analytics.view.quickOverview.nettoSalesColumn"),new:this.$tc("nfx-analytics.view.quickOverview.newCustomersColumn"),paying:this.$tc("nfx-analytics.view.quickOverview.newPayingCustomersColumn"),visitors:this.$tc("nfx-analytics.view.quickOverview.visitorsColumn"),impressions:this.$tc("nfx-analytics.view.quickOverview.impressionsColumn")};let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"quick_overview"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.total=t.data.gridData.length,this.gridData=t.data.gridData,this.getOverallData(this.gridData)),this.$nextTick(()=>{this.isLoading=!1})}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},getOverallData(t){if(this.summeryData=[],!t||0===t.length)return;let e={};e.count=0,e.firstTimeCount=0,e.sales=0,e.netto=0,e.new=0,e.paying=0,e.visitors=0,e.impressions=0,t.forEach(t=>{e.count+=t.count,e.firstTimeCount+=t.firstTimeCount,e.sales+=t.sales,e.netto+=t.netto,e.new+=t.new,e.paying+=t.paying,e.visitors+=t.visitors,e.impressions+=t.impressions}),e.avgSales=0===e.count?0:e.sales/e.count,e.avgSales=this.currencyFilter(Math.round(100*e.avgSales)/100,this.systemCurrency.shortName,2),e.sales=this.currencyFilter(Math.round(100*e.sales)/100,this.systemCurrency.shortName,2),e.netto=this.currencyFilter(Math.round(100*e.netto)/100,this.systemCurrency.shortName,2),this.summeryData.push(e)}}}),a(9755);let{Component:t4,Mixin:t8}=Shopware;t4.register("nfx-analytics-index-unfinished-orders",{template:'{% block nfx_analytics_unfinished_orders %}\n    <div>\n\n        {% block nfx_analytics_unfinished_orders_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-unfinished-orders-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_unfinished_orders_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-name="{ item }">\n                            <router-link\n                                class="sw-data-grid__cell-value"\n                                :to="{ name: \'sw.customer.detail\', params: { id: item.id } }">\n                                {{ item.name }}\n                            </router-link>\n                        </template>\n\n                        <template #column-email="{ item }">\n                            <router-link\n                                class="sw-data-grid__cell-value"\n                                :to="{ name: \'sw.customer.detail\', params: { id: item.id } }">\n                                {{ item.email }}\n                            </router-link>\n                        </template>\n\n                        <template #column-gross="{ item }">\n                            {{ currencyFilter(item.gross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-net="{ item }">\n                            {{ currencyFilter(item.net, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-position="{ item }">\n                            <div class="nfx-analytics-unfinished-orders-position">\n                                <div>\n                                    <sw-icon\n                                        color="#189eff"\n                                        name="regular-shopping-cart"\n                                        small\n                                        @click="openLineItemsModal($event, item)"\n                                    />\n                                </div>\n                                <div>\n                                    {{ item.position }}\n                                </div>\n                            </div>\n                        </template>\n\n                        <template #pagination>\n                            {% block nfx_analytics_unfinished_orders_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n                {% block nfx_analytics_unfinished_orders_lineitems %}\n                    <sw-modal\n                        v-if="lineItemsModalOpen"\n                        class="nfx-analytics-unfinished-orders-modal"\n                        :title="$tc(\'nfx-analytics.view.unfinishedOrders.modal.title\')"\n                        :is-loading="isLoading"\n                        @modal-close="onCloseLineItemsModal">\n\n                        <sw-data-grid :dataSource="modalItems"\n                                      :columns="getModalGridColumns"\n                                      :showSelection="false"\n                                      :isLoading="isLoading"\n                                      :showActions="false">\n\n                            <template #column-unitPrice="{ item }">\n                                {{ currencyFilter(item.unitPrice, systemCurrency.isoCode) }}\n                            </template>\n\n                            <template #column-productNumber="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.productNumber }}\n                                </router-link>\n                            </template>\n\n                            <template #column-totalPrice="{ item }">\n                                {{ currencyFilter(item.totalPrice, systemCurrency.isoCode) }}\n                            </template>\n\n                        </sw-data-grid>\n\n                    </sw-modal>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_unfinished_orders_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.unfinishedOrders.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[t8.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{lineItemsModalOpen:!1,isLoading:!1,gridData:null,total:0,page:1,limit:25,modalItems:[]}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getModalGridColumns(){return[{property:"label",dataIndex:"label",label:this.$tc("nfx-analytics.view.unfinishedOrders.modal.labelColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"productNumber",dataIndex:"productNumber",label:this.$tc("nfx-analytics.product.productNumber"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"unitPrice",dataIndex:"unitPrice",label:this.$tc("nfx-analytics.view.unfinishedOrders.modal.unitPriceColumn"),allowResize:!1,inlineEdit:!1,align:"right",width:"100px"},{property:"quantity",dataIndex:"quantity",label:this.$tc("nfx-analytics.view.unfinishedOrders.modal.quantityColumn"),allowResize:!1,inlineEdit:!1,align:"right",width:"100px"},{property:"totalPrice",dataIndex:"totalPrice",label:this.$tc("nfx-analytics.view.unfinishedOrders.modal.totalPriceColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"type",dataIndex:"type",label:this.$tc("nfx-analytics.view.unfinishedOrders.modal.typeColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.unfinishedOrders.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"gross",dataIndex:"gross",label:this.$tc("nfx-analytics.view.unfinishedOrders.salesColumn")+" "+this.$tc("nfx-analytics.view.gross"),allowResize:!1,inlineEdit:!1,align:"right",width:"100px"},{property:"net",dataIndex:"net",label:this.$tc("nfx-analytics.view.unfinishedOrders.salesColumn")+" "+this.$tc("nfx-analytics.view.net"),allowResize:!1,inlineEdit:!1,align:"right",width:"100px"},{property:"position",dataIndex:"position",label:this.$tc("nfx-analytics.view.unfinishedOrders.positionColumn"),allowResize:!1,inlineEdit:!1,align:"right",width:"100px"},{property:"itemCount",dataIndex:"itemCount",label:this.$tc("nfx-analytics.view.unfinishedOrders.itemCountColumn"),allowResize:!1,inlineEdit:!1,align:"right",width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.unfinishedOrders.nameColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"email",dataIndex:"email",label:this.$tc("nfx-analytics.view.unfinishedOrders.emailColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"phone",dataIndex:"phone",label:this.$tc("nfx-analytics.view.unfinishedOrders.phoneColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"payment",dataIndex:"payment",label:this.$tc("nfx-analytics.view.unfinishedOrders.paymentColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"salesChannel",dataIndex:"salesChannel",label:this.$tc("nfx-analytics.view.unfinishedOrders.salesChannelColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"unfinished_orders"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.total=t.data.gridData.length,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},openLineItemsModal(t,e){e.lineItems&&e.lineItems.length>0&&(this.isLoading=!0,this.modalItems=e.lineItems,this.lineItemsModalOpen=!0,this.isLoading=!1)},onCloseLineItemsModal(t){this.lineItemsModalOpen=!1,this.modalItems=[]}}});let{Component:t9,Mixin:t6}=Shopware;t9.register("nfx-analytics-index-unfinished-orders-by-payment",{template:'{% block nfx_analytics_unfinished_orders_by_payment %}\n    <div>\n\n        {% block nfx_analytics_unfinished_orders_by_payment_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-unfinished-orders-by-payment-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_unfinished_orders_by_payment_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_unfinished_orders_by_payment_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_unfinished_orders_by_payment_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-unfinished-orders-by-payment-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_unfinished_orders_by_payment_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                    >\n                        {% block nfx_analytics_unfinished_orders_by_payment_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-gross="{ item }">\n                            {{ currencyFilter(item.gross, systemCurrency.isoCode) }}\n                        </template>\n                        <template #column-net="{ item }">\n                            {{ currencyFilter(item.net, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-avgGross="{ item }">\n                            {{ currencyFilter(item.avgGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block nfx_analytics_unfinished_orders_by_payment_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_unfinished_orders_by_payment_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.unfinishedOrders.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[t6.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.unfinishedOrdersByPayment.titleChart")},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","count","Bestellungen")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.unfinishedOrdersByPayment.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.countColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"gross",dataIndex:"gross",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.salesColumn")+" "+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"net",dataIndex:"net",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.salesColumn")+" "+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"avgGross",dataIndex:"avgGross",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.avgColumn")+" "+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"position",dataIndex:"position",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.positionColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"itemCount",dataIndex:"itemCount",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.itemCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"avgCount",dataIndex:"avgCount",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.avgItemCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"unfinished_orders_by_payment"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},setOthersLabel(t){for(let e=0;e<t.length;e++)"nfx-analytics.data.others"===t[e].name&&(t[e].name=this.$tc("nfx-analytics.data.others"));return t}}});let{Component:et,Mixin:ee}=Shopware;et.register("nfx-analytics-index-unfinished-orders-by-cart",{template:'{% block nfx_analytics_unfinished_orders_by_cart %}\n    <div>\n\n        {% block nfx_analytics_unfinished_orders_by_cart_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-unfinished-orders-by-cart-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_unfinished_orders_by_cart_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_unfinished_orders_by_cart_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-unfinished-orders-by-cart-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_unfinished_orders_by_cart_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                    >\n                        {% block nfx_analytics_unfinished_orders_by_cart_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-gross="{ item }">\n                            {{ currencyFilter(item.gross, systemCurrency.isoCode) }}\n                        </template>\n                        <template #column-net="{ item }">\n                            {{ currencyFilter(item.net, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-avgGross="{ item }">\n                            {{ currencyFilter(item.avgGross, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block nfx_analytics_unfinished_orders_by_cart_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_unfinished_orders_by_cart_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.unfinishedOrders.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ee.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,minX:null,maxX:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}}}},chartSeriesData(){return this.seriesData?[{name:"Bestellungen",data:this.seriesData.map(t=>({x:this.parseDate(t.date),y:t.count}))}]:null},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.countColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"gross",dataIndex:"gross",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.salesColumn")+" "+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"net",dataIndex:"net",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.salesColumn")+" "+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"avgGross",dataIndex:"avgGross",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.avgColumn")+" "+this.$tc("nfx-analytics.view.gross"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"position",dataIndex:"position",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.positionColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"itemCount",dataIndex:"itemCount",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.itemCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"avgCount",dataIndex:"avgCount",label:this.$tc("nfx-analytics.view.unfinishedOrdersByCart.avgItemCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"unfinished_orders_by_cart"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length;let e=t.data.seriesData;e.reverse(),this.gridData=e}this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:ea,Mixin:ei}=Shopware;ea.register("nfx-analytics-index-canceled-orders-by-month",{template:'{% block nfx_analytics_canceled_orders_by_month %}\n    <div>\n\n        {% block nfx_analytics_canceled_orders_by_month_chart %}\n            <sw-card positionIdentifier="\'test\'" positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-canceled-orders-by-month-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_canceled_orders_by_month_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_canceled_orders_by_month_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-canceled-orders-by-month-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_canceled_orders_by_month_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_canceled_orders_by_month_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ei.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.canceledOrdersByMonth.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>this.currencyFilter(t,this.systemCurrency.isoCode)}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"date","sum","Bestellungen",!0,!0)},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.canceledOrdersByMonth.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.canceledOrdersByMonth.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.canceledOrdersByMonth.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"canceled_orders_by_month"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:en,Mixin:es}=Shopware;en.register("nfx-analytics-index-search-terms",{template:'{% block nfx_analytics_search_terms %}\n    <div>\n\n        {% block nfx_analytics_search_terms_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-search-terms-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_search_terms_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                          :dataSource="gridSeriesData"\n                          :columns="getGridColumns"\n                          :showSelection="false"\n                          :sort-by="sortBy"\n                          :sort-direction="sortDirection"\n                          @column-sort="onColumnSort"\n                          :showActions="false">\n\n                        <template #pagination>\n                            {% block nfx_analytics_search_terms_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_search_terms_help %}\n                <sw-alert\n                        v-if="!displayOptions.dashboard"\n                        :appearance="\'notification\'"\n                        :showIcon="false"\n                        :closable="false"\n                        :variant="\'neutral\'"\n                        :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.searchTerms.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[es.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,sortDirection:"DESC",sortBy:"count"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"searchTerm",dataIndex:"searchTerm",label:this.$tc("nfx-analytics.view.searchTerms.searchTermColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.searchTerms.countColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"results",dataIndex:"results",label:this.$tc("nfx-analytics.view.searchTerms.resultsColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"salesChannelName",dataIndex:"salesChannelName",label:this.$tc("nfx-analytics.view.searchTerms.salesChannelNameColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"search_terms"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.total=t.data.gridData.length,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:er,Mixin:el}=Shopware;er.register("nfx-analytics-index-search-activity",{template:'{% block nfx_analytics_activity_all %}\n    <div>\n\n        {% block nfx_analytics_activity_all_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-activity-all-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_activity_all_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_activity_all_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-activity-all-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_activity_all_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #pagination>\n                            {% block analytics_activity_all_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_activity_all_help %}\n                <sw-alert\n                        v-if="!displayOptions.dashboard"\n                        :appearance="\'notification\'"\n                        :showIcon="false"\n                        :closable="false"\n                        :variant="\'neutral\'"\n                        :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.searchTerms.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[el.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.searchActivity.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:{min:0,forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}}}},chartSeriesData(){return this.seriesData?[{name:"Bestellungen",data:this.seriesData.map(t=>({x:this.parseDate(t.date),y:t.count}))}]:null},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.searchActivity.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.searchActivity.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"search_activity"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData){this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length;let e=t.data.seriesData;e.reverse(),this.gridData=e}this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eo,Mixin:ec}=Shopware;eo.register("nfx-analytics-index-sales-by-device",{template:'{% block nfx_analytics_sales_by_device %}\n    <div>\n\n        {% block nfx_analytics_sales_by_device_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-device-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_device_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_device_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{ $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_device_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-device-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_device_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_device_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_device_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.detectionNote\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ec.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByDevice.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByDevice.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByDevice.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByDevice.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.gridData?this.gridData.slice((this.page-1)*this.limit,this.limit*this.page):null}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_device"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData&&(this.total=t.data.gridData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:ed,Mixin:ep}=Shopware;ed.register("nfx-analytics-index-sales-by-os",{template:'{% block nfx_analytics_sales_by_os %}\n    <div>\n\n        {% block nfx_analytics_sales_by_os_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-os-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_os_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_os_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_os_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-os-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_os_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_os_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_os_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.detectionNote\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ep.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByOs.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByOs.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByOs.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByOs.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.gridData?this.gridData.slice((this.page-1)*this.limit,this.limit*this.page):null}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_os"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData&&(this.total=t.data.gridData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eh,Mixin:eu}=Shopware;eh.register("nfx-analytics-index-sales-by-browser",{template:'{% block nfx_analytics_sales_by_browser %}\n    <div>\n\n        {% block nfx_analytics_sales_by_browser_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-browser-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_browser_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_browser_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_browser_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-browser-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_browser_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_browser_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_browser_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.detectionNote\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eu.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByBrowser.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByBrowser.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByBrowser.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByBrowser.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.gridData?this.gridData.slice((this.page-1)*this.limit,this.limit*this.page):null}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_browser"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData&&(this.total=t.data.gridData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(4865);let{Component:em,Mixin:ey}=Shopware;em.register("nfx-analytics-index-products-inventory",{template:'{% block nfx_analytics_products_inventory %}\n    <div>\n\n        {% block nfx_analytics_products_inventory_head %}\n        <sw-card :isLoading="isLoading" positionIdentifier="\'test\'" class="nfx-analytics-products-inventory-head" v-if="!displayOptions.dashboard">\n            <sw-label class="nfx-analytics-products-inventory-overall" :dismissable="true">\n                {{ $tc(\'nfx-analytics.view.overall.label\') }}{{ currencyFilter(overall, systemCurrency.isoCode) }}\n            </sw-label>\n        </sw-card>\n\n        {% endblock %}\n\n        {% block nfx_analytics_products_inventory_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-products-inventory-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_products_inventory_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(\'nfx-analytics.view.productsInventory.titleChart\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="gridSeriesData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :showActions="false"\n                        :sort-by="sortBy"\n                        :sort-direction="sortDirection"\n                        @column-sort="onColumnSort"\n                    >\n                        {% block nfx_analytics_products_inventory_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-pprice="{ item }">\n                            {{ currencyFilter(item.pprice, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-worth="{ item }">\n                            {{ currencyFilter(item.worth, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block nfx_analytics_products_inventory_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ey.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!1,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,overall:0,sortDirection:"DESC",sortBy:"worth"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productsInventory.numberColumn"),allowResize:!0,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productsInventory.nameColumn"),allowResize:!0,inlineEdit:!1,width:"120px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productsInventory.sumColumn"),allowResize:!0,align:"right",inlineEdit:!1,width:"40px"},{property:"pprice",dataIndex:"pprice",label:this.$tc("nfx-analytics.view.productsInventory.ppriceColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!0,align:"right",inlineEdit:!1,width:"65px"},{property:"worth",dataIndex:"worth",label:this.$tc("nfx-analytics.view.productsInventory.worthColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!0,align:"right",inlineEdit:!1,width:"65px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.page=1;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"products_inventory"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData){let e=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.overall=t.data.overall,this.gridData=e}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}}),a(8979);let{Component:eg,Mixin:ef}=Shopware;eg.register("nfx-analytics-index-products-profit",{template:'{% block nfx_analytics_products_profit %}\n    <div>\n\n        {% block nfx_analytics_products_profit_head %}\n            <sw-card :isLoading="isLoading" positionIdentifier="\'test\'" class="nfx-analytics-products-profit-head" v-if="!displayOptions.dashboard">\n                    <sw-switch-field\n                            v-model:value="hideNoSales"\n                            :label="$tc(\'nfx-analytics.view.productsProfit.hideNoSales\')"\n                            @update:value="onChangeField"\n                    >\n                    </sw-switch-field>\n\n                    <sw-label class="nfx-analytics-products-profit-overall" :dismissable="true">\n                        {{ $tc(\'nfx-analytics.view.overall.label\') }}{{ currencyFilter(overall, systemCurrency.isoCode) }}\n                    </sw-label>\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_products_profit_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-products-profit-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_products_profit_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(\'nfx-analytics.view.productsProfit.titleChart\') }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="gridSeriesData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :showActions="!displayOptions.dashboard"\n                        :sort-by="sortBy"\n                        :sort-direction="sortDirection"\n                        @column-sort="onColumnSort"\n                    >\n                        {% block nfx_analytics_products_profit_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-pprice="{ item }">\n                            {{ currencyFilter(item.pprice, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-cprice="{ item }">\n                            {{ currencyFilter(item.cprice, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-profit="{ item }">\n                            {{ currencyFilter(item.profit, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-markUp="{ item }">\n                            {{ item.markUp }} <span v-if="item.markUp != \'NA\'">%</span>\n                        </template>\n\n                        <template #pagination>\n                            {% block nfx_analytics_products_profit_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_products_profit_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productProfitNote\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ef.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"line-item",hideNoSales:!1,isLoading:!0,gridData:null,total:0,page:1,limit:25,overall:0,sortDirection:"DESC",sortBy:"profit"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productsProfit.numberColumn"),allowResize:!0,primary:!0,inlineEdit:!1,width:"90px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productsProfit.nameColumn"),allowResize:!0,inlineEdit:!1,width:"120px"},{property:"profit",dataIndex:"profit",label:this.$tc("nfx-analytics.view.productsProfit.profitColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!0,align:"right",inlineEdit:!1,width:"50px"},{property:"markUp",dataIndex:"markUp",label:this.$tc("nfx-analytics.view.productsProfit.markUp"),allowResize:!0,align:"right",inlineEdit:!1,width:"30px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productsProfit.sumColumn"),allowResize:!0,align:"right",inlineEdit:!1,width:"30px"},{property:"pprice",dataIndex:"pprice",label:this.$tc("nfx-analytics.view.productsProfit.ppriceColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!0,align:"right",inlineEdit:!1,width:"45px"},{property:"cprice",dataIndex:"cprice",label:this.$tc("nfx-analytics.view.productsProfit.cpriceColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!0,align:"right",inlineEdit:!1,width:"45px"}]},gridSeriesData(){let t;return this.gridData?this.gridData&&this.hideNoSales?(t=this.gridData.filter(t=>t.sum>0),this.total=t.length,this.page>Math.ceil(this.total/this.limit)&&(this.page=1),this.defaultGridSeriesData(t,this.page,this.limit)):(this.total=this.gridData.length,this.defaultGridSeriesData(this.gridData,this.page,this.limit)):null}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.page=1;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"products_profit"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData){let e=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.overall=t.data.overall,this.gridData=e}this.$nextTick(()=>{this.isLoading=!1})}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onChangeField(){this.createdComponent()},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}});let{Component:ev,Mixin:eb}=Shopware;ev.register("nfx-analytics-index-sales-by-billing-country",{template:'{% block nfx_analytics_sales_by_billing_country %}\n    <div>\n\n        {% block nfx_analytics_sales_by_billing_country_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-billing-country-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_billing_country_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_billing_country_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_billing_country_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-billing-country-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_billing_country_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_billing_country_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eb.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"billing-country",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByBillingCountry.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByBillingCountry.nameColumn"),primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_billing_country"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:ew,Mixin:ex}=Shopware;ew.register("nfx-analytics-index-sales-by-billing-country-invoice",{template:'{% block nfx_analytics_sales_by_billing_country_invoice %}\n    <div>\n\n        {% block nfx_analytics_sales_by_billing_country_invoice_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-billing-country-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_billing_country_invoice_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_billing_country_invoice_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_billing_country_invoice_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-billing-country-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_billing_country_invoice_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_billing_country_invoice_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.invoiceOrderInfo\') }}\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ex.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByBillingCountryInvoice.titleChart",this.systemCurrency.symbol)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByBillingCountry.nameColumn"),primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_billing_country_invoice"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:e_,Mixin:eS}=Shopware;e_.register("nfx-analytics-index-sales-by-currency",{template:'{% block nfx_analytics_sales_by_currency %}\n    <div>\n\n        {% block nfx_analytics_sales_by_currency_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-currency-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_currency_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_currency_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_currency_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-currency-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_currency_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ item.sum }} {{ item.symbol }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_currency_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eS.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByCurrency.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByCurrency.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesByCurrency.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByCurrency.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_currency"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eC,Mixin:ek}=Shopware;eC.register("nfx-analytics-index-lexicon-impressions",{template:'{% block nfx_analytics_lexicon_impressions %}\n    <div>\n        {% block nfx_analytics_lexicon_impressions_noplugin %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-noplugin nfx-analytics-lexicon-impressions-noplugin"\n                     v-if="noPlugin && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1)"\n                     :isLoading="isLoading">\n                <sw-alert\n                        :appearance="\'notification\'"\n                        :showIcon="false"\n                        :variant="\'info\'"\n                >\n                    <div class="nfx-analytics-content-card-noplugin-alert">\n                        {{  $tc(\'nfx-analytics.view.lexiconImpressions.nolplugin.alert\') }}\n                    </div>\n                    <div>\n                        <sw-external-link :href="\'https://store.shopware.com/nfx547914511276/lexikon/glossar-professionell-pro.html\'">\n                            {{  $tc(\'nfx-analytics.view.lexiconImpressions.nolplugin.swLink\') }}\n                        </sw-external-link>\n\n                    </div>\n                    <div>\n                        <sw-external-link :href="\'https://www.coolbax.de/shopware-plugins/storefront/64/lexikon/glossar-professionell-sw6\'">\n                            {{  $tc(\'nfx-analytics.view.lexiconImpressions.nolplugin.nfxLink\') }}\n                        </sw-external-link>\n                    </div>\n\n\n                </sw-alert>\n            </sw-card>\n\n\n        {% endblock %}\n\n        {% block nfx_analytics_lexicon_impressions_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-lexicon-impressions-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_lexicon_impressions_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                <div class = "nfx-analytics-charttype-select-container">\n                    {% block nfx_analytics_lexicon_impressions_select_box %}\n                        <sw-select-field class="nfx-analytics-charttype-select"\n                                         :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                         :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                         :value="chartType"\n                                         @update:value="onChangeField($event, \'chartType\')">\n                            <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                            <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                            <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                        </sw-select-field>\n                    {% endblock %}\n\n                    {% block nfx_analytics_manufacturer_impressions_overall_box %}\n                        <div v-if="overallData != null" class="nfx-analytics-lexicon-impressions-grid-sums">\n                            <span>{{ $tc(\'nfx-analytics.view.lexiconImpressions.total\') }} {{ overallData }}</span>\n                        </div>\n                    {% endblock %}\n                </div>\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_lexicon_impressions_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-lexicon-impressions-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_lexicon_impressions_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_lexicon_impressions_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_lexicon_impressions_help %}\n\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ek.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",overallData:null,noPlugin:!1,sortDirection:"DESC",sortBy:"count"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.lexiconImpressions.titleChart")},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){if(!this.seriesData)return null;let t=this.seriesData.map(t=>({x:t.name,y:t.count}));return[{name:"Clicks",data:t=t.filter(t=>t.y>0)}]},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.lexiconImpressions.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.lexiconImpressions.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"lexicon_impressions"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a,this.overallData=t.data.overall}else void 0!==t.data&&!1===t.data.success?(this.total=0,this.seriesData=[],this.gridData=[],this.noPlugin=!0):(this.total=0,this.seriesData=[],this.gridData=[]);this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eD,Mixin:eO}=Shopware;eD.register("nfx-analytics-index-customer-online",{template:'{% block nfx_analytics_customer_online %}\n    <div>\n\n        {% block nfx_analytics_customer_online_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-customer-online-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_customer_online_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        {% block nfx_analytics_customer_online_grid_columns_time %}\n                            <template #column-time="{ item }">\n                                {{ $tc(item.time) }}\n                            </template>\n                        {% endblock %}\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_visitors_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.customerOnline.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eO.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"time",dataIndex:"time",label:this.$tc("nfx-analytics.view.customerOnline.timeColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"visitors",dataIndex:"visitors",label:this.$tc("nfx-analytics.view.customerOnline.visitorsColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"logins",dataIndex:"logins",label:this.$tc("nfx-analytics.view.customerOnline.loginsColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.gridData?this.gridData:null}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"customer_online"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:e$,Mixin:eI}=Shopware;e$.register("nfx-analytics-index-conversion-all",{template:'{% block nfx_analytics_conversion_all %}\n    <div>\n\n        {% block nfx_analytics_conversion_all_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-conversion-all-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_conversion_all_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_conversion_all_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-conversion-all-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_conversion_all_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-conversionPercent="{ item }">\n                            {{ item.conversionPercent }} %\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_conversion_all_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_conversion_all_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.conversionAll.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eI.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.conversionAll.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",min:this.minX,max:this.maxX,labels:{datetimeUTC:!1}},yaxis:{title:{text:"Conversion in %"},min:0,forceNiceScale:!0,labels:{formatter:t=>parseFloat(t)}}}},chartSeriesData(){return this.defaultChartSeriesDataWithDates(this.seriesData,"date","conversionPercent","Conversion")},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"visitors",dataIndex:"visitors",label:this.$tc("nfx-analytics.view.conversionAll.visitorsColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"conversion",dataIndex:"conversion",label:this.$tc("nfx-analytics.view.conversionAll.conversionColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"conversionPercent",dataIndex:"conversionPercent",label:this.$tc("nfx-analytics.view.conversionAll.conversionPercentColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"conversion_all"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.gridData=t.data.gridData,this.total=t.data.gridData.length,this.seriesData=[...t.data.gridData],this.seriesData=this.seriesData.filter(t=>"NA"!==t.conversion),this.gridData.reverse()),this.maxX=this.getMaxDate(this.displayOptions.end),this.minX=this.getMinDate(this.displayOptions.start),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eL,Mixin:eT}=Shopware;eL.register("nfx-analytics-index-conversion-by-month",{template:'{% block nfx_analytics_conversion_by_month %}\n    <div>\n\n        {% block nfx_analytics_conversion_by_month_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-conversion-by-month-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_conversion_by_month_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_conversion_by_month_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-conversion-by-month-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_conversion_by_month_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard">\n\n                        <template #column-conversionPercent="{ item }">\n                            {{ item.conversionPercent }} %\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="orderLink(item.date, filterName, displayOptions, activeStatistic)"\n                                    :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="productLink(item.date, filterName, displayOptions, activeStatistic)"\n                                :target="productLinkTarget(displayOptions)"\n                                :title="$tc(\'nfx-analytics.view.goToProductsTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToProducts\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_conversion_by_month_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_conversion_by_month_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.conversionByMonth.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eT.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{filterName:"order-date",isLoading:!1,seriesData:null,gridData:null,total:0,minX:null,maxX:null,page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.conversionByMonth.titleChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"category"},yaxis:{title:{text:"Conversion in %"},min:0,forceNiceScale:!0,labels:{formatter:t=>parseFloat(t)}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"date","conversionPercent","Conversion",!0)},getGridColumns(){return[{property:"date",dataIndex:"date",label:this.$tc("nfx-analytics.view.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"visitors",dataIndex:"visitors",label:this.$tc("nfx-analytics.view.conversionByMonth.visitorsColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"conversion",dataIndex:"conversion",label:this.$tc("nfx-analytics.view.conversionByMonth.conversionColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"conversionPercent",dataIndex:"conversionPercent",label:this.$tc("nfx-analytics.view.conversionByMonth.conversionPercentColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"conversion_by_month"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.gridData=t.data.gridData,this.total=t.data.gridData.length,this.seriesData=[...t.data.gridData],this.seriesData=this.seriesData.filter(t=>"NA"!==t.conversion)),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(5639);let{Component:eB,Context:eA,Mixin:ez}=Shopware,{EntityCollection:eP}=Shopware.Data;eB.register("nfx-analytics-index-sales-by-category",{template:'{% block nfx_analytics_sales_by_category %}\n    <div>\n\n        {% block nfx_analytics_sales_by_category_head %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-sales-by-category-head" :isLoading="isLoading">\n                {% block nfx_analytics_sales_by_category_select %}\n                    <sw-category-tree-field\n                        v-if="!isLoading"\n                        :label="$tc(\'nfx-analytics.view.categorySelect.labelNotOptional\')"\n                        class="sw-product-detail__select-category"\n                        :categories-collection="categoryCollection ? categoryCollection : []"\n                        :placeholder="$tc(\'nfx-analytics.view.categorySelect.placeholder\')"\n                        :single-select="true"\n                        @selection-add="onCategoryAdd"\n                        @selection-remove="onCategoryRemove"\n                    />\n                {% endblock %}\n                {% block nfx_analytics_sales_by_category_sorting %}\n                    <sw-label class="nfx-analytics-sales-by-category-overall" :dismissable="true" v-if="!!categoryId">\n                        {{ $tc(\'nfx-analytics.view.overall.label\') }}{{ currencyFilter(overall, systemCurrency.isoCode) }}<br>\n                        {{ $tc(\'nfx-analytics.view.overallCount.label\') }}{{ overallCount }}\n                    </sw-label>\n                {% endblock %}\n            </sw-card>\n\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_content_empty %}\n            <sw-empty-state v-if="!categoryId" :title="$tc(\'nfx-analytics.index.emptyCategoryHeadline\')"></sw-empty-state>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_category_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-category-chart"\n                     v-if="categoryId && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_sales_by_category_chart_data %}\n                    <sw-chart\n                            v-if="!isLoading && chartType != null && chartSeriesData != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_category_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_category_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-category-grid"\n                     v-if="categoryId && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_sales_by_category_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_sales_by_category_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_category_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_category_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.salesByCategory.info\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[ez.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!0,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",categoryCollection:null,categoryId:null,overall:0,overallCount:0,sortDirection:"DESC",sortBy:"sales",errors:{categoryCollection:null}}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},categoryRepository(){return this.repositoryFactory.create("category")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByCategory.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sales","Bestellungen",!1,!0)},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productNumberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productNameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(this.isLoading=!0,this.categoryCollection||(this.categoryCollection=new eP(this.categoryRepository.route,this.categoryRepository.entityName,eA.api)),this.categoryId||this.$nextTick(()=>{this.isLoading=!1}),this.categoryId){let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);a.categoryId=this.categoryId,"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_category"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a,this.overall=t.data.overall,this.overallCount=t.data.overallCount}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}},onCategoryAdd(t){this.categoryId=t.id,this.createdComponent()},onCategoryRemove(){this.categoryId=null}}}),a(535);let{Component:eN,Mixin:eF}=Shopware;eN.register("nfx-analytics-index-sales-by-products-filter",{template:'{% block nfx_analytics_sales_by_products_filter %}\n    <div>\n\n        {% block nfx_analytics_sales_by_products_filter_head %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-sales-by-products-filter-head">\n                {% block nfx_analytics_sales_by_products_filter_stream_select %}\n                    <sw-entity-single-select class="nfx-analytics-sales-by-products-filter-stream-select"\n                                     :label="$tc(\'nfx-analytics.view.streamSelect.label\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.streamSelect.placeholder\')"\n                                     labelProperty="name"\n                                     valueProperty="id"\n                                     :error="errors.productStreamId"\n                                     entity="product_stream"\n                                     v-model:value="productStreamId"\n                                     @update:value="onChangeStreamField($event, \'productStreamId\')">\n                    </sw-entity-single-select>\n                {% endblock %}\n                {% block nfx_analytics_sales_by_products_filter_sorting %}\n                    <sw-label class="nfx-analytics-sales-by-products-filter-overall" :dismissable="true" v-if="productStreamId != \'\'">\n                        {{ $tc(\'nfx-analytics.view.overall.label\') }}{{ currencyFilter(overall, systemCurrency.isoCode) }}<br>\n                        {{ $tc(\'nfx-analytics.view.overallCount.label\') }}{{ overallCount }}\n                    </sw-label>\n                {% endblock %}\n            </sw-card>\n\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_content_empty %}\n            <sw-empty-state v-if="productStreamId == \'\' || !productStreamId" :title="$tc(\'nfx-analytics.index.emptyStreamHeadline\')"></sw-empty-state>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_products_filter_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-products-filter-chart"\n                     v-if="productStreamId != \'\' && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_sales_by_products_filter_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null && chartSeriesData != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_products_filter_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_products_filter_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-products-filter-grid"\n                     v-if="productStreamId != \'\' && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_sales_by_products_filter_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="!displayOptions.dashboard"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_sales_by_products_filter_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_products_filter_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="orderLink(item.name, filterName, displayOptions, activeStatistic, item.id)"\n                                :target="orderLinkTarget(displayOptions)"\n                                    :title="$tc(\'nfx-analytics.view.goToOrdersTip\')"\n                            >\n                                {{ $tc(\'nfx-analytics.view.goToOrders\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_products_filter_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productsOnlyInfo\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eF.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{filterName:"line-item",isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",productStreamId:"",overall:0,overallCount:0,sortDirection:"DESC",sortBy:"sales",errors:{productStreamId:null}}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByProductsFilter.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sales","Bestellungen",!1,!0)},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.salesByProductsFilter.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByProductsFilter.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByProductsFilter.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.salesByProductsFilter.salesColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(this.isLoading=!0,!this.productStreamId||""===this.productStreamId){this.isLoading=!1;return}let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);a.productStreamId=this.productStreamId,"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"sales_by_products_filter"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a,this.overall=t.data.overall,this.overallCount=t.data.overallCount}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onChangeStreamField(t,e){this.createdComponent()},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}}),a(8191);let{Component:eR,Mixin:eG}=Shopware;eR.register("nfx-analytics-index-variants-compare",{template:'{% block nfx_analytics_variants_compare %}\n    <div>\n\n        {% block nfx_analytics_variants_compare_head %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-variants-compare-head">\n                <div class="nfx-analytics-variants-compare-head-selections">\n                    {% block nfx_analytics_variants_compare_property_group_select %}\n                        <sw-entity-single-select class="nfx-analytics-variants-compare-property-group-select"\n                                         :label="$tc(\'nfx-analytics.view.propertyGroupSelect.label\')"\n                                         :placeholder="$tc(\'nfx-analytics.view.propertyGroupSelect.placeholder\')"\n                                         labelProperty="name"\n                                         valueProperty="id"\n                                         :error="errors.propertyGroupId"\n                                         entity="property_group"\n                                         v-model:value="propertyGroupId"\n                                         @update:value="onChangeGroupField">\n                        </sw-entity-single-select>\n                    {% endblock %}\n                    {% block nfx_analytics_variants_compare_category_select %}\n                        <sw-entity-single-select class="nfx-analytics-variants-compare-category-select"\n                                                 :label="$tc(\'nfx-analytics.view.categorySelect.label\')"\n                                                 :placeholder="$tc(\'nfx-analytics.view.categorySelect.placeholder\')"\n                                                 labelProperty="name"\n                                                 valueProperty="id"\n                                                 :error="errors.categoryId"\n                                                 entity="category"\n                                                 v-model:value="categoryId"\n                                                 @update:value="onChangeCategoryField">\n                        </sw-entity-single-select>\n                    {% endblock %}\n                </div>\n                <div class="nfx-analytics-variants-compare-head-overalls">\n                    <sw-label class="nfx-analytics-variants-compare-overall" :dismissable="true" v-if="propertyGroupId != \'\'">\n                        {{ $tc(\'nfx-analytics.view.overall.sales.label\') }}{{ currencyFilter(overall.sales, systemCurrency.isoCode) }}\n                    </sw-label>\n                    <sw-label class="nfx-analytics-variants-compare-overall" :dismissable="true" v-if="propertyGroupId != \'\'">\n                        {{ $tc(\'nfx-analytics.view.overall.sold.label\') }}{{ overall.sum }}\n                    </sw-label>\n                    <sw-label class="nfx-analytics-variants-compare-overall" :dismissable="true" v-if="propertyGroupId != \'\'">\n                        {{ $tc(\'nfx-analytics.view.overall.productCount.label\') }}{{ overall.count }}\n                    </sw-label>\n                </div>\n            </sw-card>\n\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_content_empty %}\n            <sw-empty-state v-if="propertyGroupId == \'\' || !propertyGroupId" :title="$tc(\'nfx-analytics.index.emptyPropertyGroupHeadline\')"></sw-empty-state>\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-variants-compare-chart"\n                     v-if="propertyGroupId != \'\' && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_variants_compare_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null && chartSeriesData != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_variants_compare_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-variants-compare-grid"\n                     v-if="propertyGroupId != \'\' && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_variants_compare_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_variants_compare_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eG.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",categoryId:"",propertyGroupId:"",overall:{},errors:{productStreamId:null,categoryId:null}}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.variantsCompare.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sales","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.variantsCompare.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.variantsCompare.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"80px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.variantsCompare.salesColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"50px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.variantsCompare.productCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"50px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(Shopware.State.commit("adminMenu/collapseSidebar"),this.isLoading=!0,!this.propertyGroupId||""===this.propertyGroupId){this.isLoading=!1;return}let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);a.propertyGroupId=this.propertyGroupId,a.categoryId=this.categoryId,"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"variants_compare"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){this.total=t.data.gridData.length;let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.seriesData=e,this.gridData=a,this.overall=t.data.overall}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onChangeGroupField(){this.createdComponent()},onChangeCategoryField(){this.createdComponent()},setOthersLabel(t){for(let e=0;e<t.length;e++)"nfx-analytics.data.others"==t[e].name&&(t[e].name=this.$tc("nfx-analytics.data.others"));return t}}}),a(4355);let{Component:eq,Mixin:eE}=Shopware;eq.register("nfx-analytics-index-product-impressions",{template:'{% block nfx_analytics_product_impressions %}\n    <div class="nfx-analytics-product-impressions">\n\n        {% block nfx_analytics_product_impressions_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-count-by-products-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_product_impressions_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                <div class = "nfx-analytics-charttype-select-container">\n                    {% block nfx_analytics_product_impressions_select_box %}\n                        <sw-select-field class="nfx-analytics-charttype-select"\n                                        :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                        :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                        :value="chartType"\n                                        @update:value="onChangeField($event, \'chartType\')">\n                            <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                            <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                            <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                        </sw-select-field>\n                    {% endblock %}\n\n                    {% block nfx_analytics_product_impressions_overall_box %}\n                        <div v-if="overallData != null" class="nfx-analytics-product-impressions-grid-sums">\n                            <span>{{ $tc(\'nfx-analytics.view.productImpressions.total\') }} {{ overallData }}</span>\n                        </div>\n                    {% endblock %}\n                </div>\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_product_impressions_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-count-by-products-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_product_impressions_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="gridSeriesData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :showActions="false"\n                        :sort-by="sortBy"\n                        :sort-direction="sortDirection"\n                        @column-sort="onColumnSort"\n                    >\n                        {% block nfx_analytics_product_impressions_grid_columns_product_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        {% block nfx_analytics_product_impressions_grid_columns_conversion %}\n                            <template #column-conversion="{ item }">\n                                {{ item.conversion }} %\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_product_impressions_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_product_impressions_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.productImpressions.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eE.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",overallData:null,sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.productImpressions.titleChart")},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Impressions")},getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.productImpressions.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.productImpressions.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum1",dataIndex:"sum1",label:this.$tc("nfx-analytics.view.productImpressions.sum1Column"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum2",dataIndex:"sum2",label:this.$tc("nfx-analytics.view.productImpressions.sum2Column"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.productImpressions.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sold",dataIndex:"sold",label:this.$tc("nfx-analytics.view.salesCountColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"conversion",dataIndex:"conversion",label:this.$tc("nfx-analytics.view.conversionColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"product_impressions"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a,this.overallData=t.data.overall}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eM,Mixin:ej}=Shopware;eM.register("nfx-analytics-index-visitors",{template:'{% block nfx_analytics_visitors %}\n    <div>\n\n        {% block nfx_analytics_visitors_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-visitors-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_visitors_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_visitors_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-visitors-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_visitors_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-uniqueVisits="{ item }">\n                            {{ item.uniqueVisits }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_visitors_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_visitors_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.visitors.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ej.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",overallData:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.visitors.titleChart")},stroke:{curve:"smooth"},xaxis:{},yaxis:{forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){if(!this.seriesData)return null;let t=this.seriesData.map(t=>({x:t.date,y:t.uniqueVisits})),e=this.seriesData.map(t=>({x:t.date,y:t.desktop})),a=this.seriesData.map(t=>({x:t.date,y:t.mobile})),i=this.seriesData.map(t=>({x:t.date,y:t.tablet}));return[{name:this.$tc("nfx-analytics.view.visitors.totalVisitors"),data:t},{name:this.$tc("nfx-analytics.view.visitors.desktopColumn"),data:e},{name:this.$tc("nfx-analytics.view.visitors.mobileColumn"),data:a},{name:this.$tc("nfx-analytics.view.visitors.tabletColumn"),data:i}]},getGridColumns(){return[{property:"date.date",dataIndex:"date.date",label:this.$tc("nfx-analytics.view.visitors.dateColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"desktop",dataIndex:"desktop",label:this.$tc("nfx-analytics.view.visitors.desktopColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"mobile",dataIndex:"mobile",label:this.$tc("nfx-analytics.view.visitors.mobileColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"tablet",dataIndex:"tablet",label:this.$tc("nfx-analytics.view.visitors.tabletColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"uniqueVisits",dataIndex:"uniqueVisits",label:this.$tc("nfx-analytics.view.visitors.totalVisitors"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"visitors"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=[...t.data.seriesData],this.gridData.reverse()),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eU,Mixin:eV}=Shopware;eU.register("nfx-analytics-index-visitor-impressions",{template:'{% block nfx_analytics_visitor_impressions %}\n    <div>\n\n        {% block nfx_analytics_visitor_impressions_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-visitor-impressions-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_visitor_impressions_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_visitor_impressions_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-visitor-impressions-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_visitor_impressions_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-uniqueVisits="{ item }">\n                            {{ item.uniqueVisits }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_visitor_impressions_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_visitor_impressions_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.visitorImpressions.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eV.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",overallData:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.visitorImpressions.titleChart")},stroke:{curve:"smooth"},xaxis:{},yaxis:{forceNiceScale:!0,labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){if(!this.seriesData)return null;let t=this.seriesData.map(t=>({x:t.date,y:t.pageImpressions})),e=this.seriesData.map(t=>({x:t.date,y:t.desktop})),a=this.seriesData.map(t=>({x:t.date,y:t.mobile})),i=this.seriesData.map(t=>({x:t.date,y:t.tablet}));return[{name:this.$tc("nfx-analytics.view.visitorImpressions.totalVisitors"),data:t},{name:this.$tc("nfx-analytics.view.visitorImpressions.desktopColumn"),data:e},{name:this.$tc("nfx-analytics.view.visitorImpressions.mobileColumn"),data:a},{name:this.$tc("nfx-analytics.view.visitorImpressions.tabletColumn"),data:i}]},getGridColumns(){return[{property:"date.date",dataIndex:"date.date",label:this.$tc("nfx-analytics.view.visitorImpressions.dateColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"desktop",dataIndex:"desktop",label:this.$tc("nfx-analytics.view.visitorImpressions.desktopColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"mobile",dataIndex:"mobile",label:this.$tc("nfx-analytics.view.visitorImpressions.mobileColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"tablet",dataIndex:"tablet",label:this.$tc("nfx-analytics.view.visitorImpressions.tabletColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"pageImpressions",dataIndex:"pageImpressions",label:this.$tc("nfx-analytics.view.visitorImpressions.totalVisitors"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"visitor_impressions"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.total=t.data.seriesData.length,this.gridData=[...t.data.seriesData],this.gridData.reverse()),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:eW,Mixin:eK}=Shopware;eW.register("nfx-analytics-index-referer",{template:'{% block nfx_analytics_referer %}\n    <div class="nfx-analytics-referer">\n\n        {% block nfx_analytics_referer_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-count-by-referer-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_referer_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                    >\n                        {% block nfx_analytics_referer_grid_columns_product_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_referer_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_referer_help %}\n                <sw-alert\n                        v-if="!displayOptions.dashboard"\n                        :appearance="\'notification\'"\n                        :showIcon="false"\n                        :closable="false"\n                        :variant="\'neutral\'"\n                        :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.referer.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eK.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,overallData:null}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"date.date",dataIndex:"date.date",label:this.$tc("nfx-analytics.view.referer.dateColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"referer",dataIndex:"referer",label:this.$tc("nfx-analytics.view.referer.refererColumn"),allowResize:!1,align:"right",primary:!0,inlineEdit:!1,width:"100px"},{property:"deviceType",dataIndex:"deviceType",label:this.$tc("nfx-analytics.view.referer.deviceTypeColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"counted",dataIndex:"counted",label:this.$tc("nfx-analytics.view.referer.countedColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"referer"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(this.gridData=t.data.gridData,this.total=t.data.gridData.length),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(7697);let{Component:eH,Mixin:eQ}=Shopware;eH.register("nfx-analytics-index-category-impressions",{template:'{% block nfx_analytics_category_impressions %}\n    <div class="nfx-analytics-category-impressions">\n\n        {% block nfx_analytics_category_impressions_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-count-by-categories-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_category_impressions_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                <div class = "nfx-analytics-charttype-select-container">\n                    {% block nfx_analytics_category_impressions_select_box %}\n                        <sw-select-field class="nfx-analytics-charttype-select"\n                                        :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                        :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                        :value="chartType"\n                                        @update:value="onChangeField($event, \'chartType\')">\n                            <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                            <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                            <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                        </sw-select-field>\n                    {% endblock %}\n\n                    {% block nfx_analytics_category_impressions_overall_box %}\n                        <div v-if="overallData != null" class="nfx-analytics-category-impressions-grid-sums">\n                            <span>{{ $tc(\'nfx-analytics.view.categoryImpressions.total\') }} {{ overallData }}</span>\n                        </div>\n                    {% endblock %}\n                </div>\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_category_impressions_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-count-by-categorys-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_category_impressions_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                          :dataSource="gridSeriesData"\n                          :columns="getGridColumns"\n                          :showSelection="false"\n                          :showActions="false"\n                          :sort-by="sortBy"\n                          :sort-direction="sortDirection"\n                          @column-sort="onColumnSort"\n                    >\n                        {% block nfx_analytics_category_impressions_grid_columns_category_name %}\n                            <template #column-name="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.category.detail\', params: { id: item.id } }">\n                                    {{ item.name }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_category_impressions_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_category_impressions_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.categoryImpressions.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eQ.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",overallData:null,sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.categoryImpressions.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Impressions")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.categoryImpressions.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum1",dataIndex:"sum1",label:this.$tc("nfx-analytics.view.categoryImpressions.sum1Column"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum2",dataIndex:"sum2",label:this.$tc("nfx-analytics.view.categoryImpressions.sum2Column"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.categoryImpressions.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"category_impressions"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a,this.overallData=t.data.overall}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(3135);let{Component:eX,Mixin:eZ}=Shopware;eX.register("nfx-analytics-index-manufacturer-impressions",{template:'{% block nfx_analytics_manufacturer_impressions %}\n    <div class="nfx-analytics-manufacturer-impressions">\n\n        {% block nfx_analytics_manufacturer_impressions_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-count-by-manufacturers-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_manufacturer_impressions_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                <div class = "nfx-analytics-charttype-select-container">\n                    {% block nfx_analytics_manufacturer_impressions_select_box %}\n                        <sw-select-field class="nfx-analytics-charttype-select"\n                                        :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                        :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                        :value="chartType"\n                                        @update:value="onChangeField($event, \'chartType\')">\n                            <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                            <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                            <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                        </sw-select-field>\n                    {% endblock %}\n\n                    {% block nfx_analytics_manufacturer_impressions_overall_box %}\n                        <div v-if="overallData != null" class="nfx-analytics-manufacturer-impressions-grid-sums">\n                            <span>{{ $tc(\'nfx-analytics.view.manufacturerImpressions.total\') }} {{ overallData }}</span>\n                        </div>\n                    {% endblock %}\n                </div>\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_manufacturer_impressions_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-count-by-manufacturers-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_manufacturer_impressions_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                          :dataSource="gridSeriesData"\n                          :columns="getGridColumns"\n                          :showSelection="false"\n                          :showActions="false"\n                          :sort-by="sortBy"\n                          :sort-direction="sortDirection"\n                          @column-sort="onColumnSort"\n                    >\n                        {% block nfx_analytics_manufacturer_impressions_grid_columns_manufacturer_name %}\n                            <template #column-name="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.manufacturer.detail\', params: { id: item.id } }">\n                                    {{ item.name }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block nfx_analytics_manufacturer_impressions_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_manufacturer_impressions_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.manufacturerImpressions.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eZ.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",overallData:null,sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.manufacturerImpressions.titleChart")},xaxis:{},yaxis:{labels:{formatter:t=>parseInt(t,10)}},legend:{position:"bottom"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}}}},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Impressions")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.manufacturerImpressions.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum1",dataIndex:"sum1",label:this.$tc("nfx-analytics.view.manufacturerImpressions.sum1Column"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum2",dataIndex:"sum2",label:this.$tc("nfx-analytics.view.manufacturerImpressions.sum2Column"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.manufacturerImpressions.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"manufacturer_impressions"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&t.data.gridData){let e=this.setOthersLabel(t.data.seriesData),a=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.seriesData=e,this.gridData=a,this.overallData=t.data.overall}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(4891);let{Component:eJ,Mixin:eY}=Shopware,{Criteria:e0}=Shopware.Data;eJ.register("nfx-analytics-index-single-product",{template:'{% block nfx_analytics_single_product %}\n    <div>\n\n        {% block nfx_analytics_single_product_head %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-single-product-head" :isLoading="isLoading">\n                {% block nfx_analytics_single_product_select %}\n                    <sw-container columns="repeat(auto-fit, minmax(150px, 1fr))" gap="0px 30px">\n                        <sw-entity-single-select class="nfx-analytics-single-product-select"\n                             :label="$tc(\'nfx-analytics.view.singleProduct.productSelect.label\')"\n                             :placeholder="$tc(\'nfx-analytics.view.singleProduct.productSelect.placeholder\')"\n                             :labelProperty="labelProperty"\n                             valueProperty="id"\n                             :error="errors.productId"\n                            :criteria="singleSelectCriteria"\n                             entity="product"\n                             v-model:value="productId"\n                             @update:value="onChangeProductSelectField">\n                        </sw-entity-single-select>\n                        <sw-entity-multi-id-select\n                                class="nfx-analytics-single-product-compare-select"\n                                v-model:value="compareIds"\n                                :labelProperty="labelProperty"\n                                :label="$tc(\'nfx-analytics.view.singleProduct.compareSelect.label\')"\n                                :placeholder="$tc(\'nfx-analytics.view.singleProduct.compareSelect.placeholder\')"\n                                :repository="productRepository"\n                                :criteria="singleSelectCriteria"\n                                :disabled="compareIdsDisabled"\n                                @update:value="onChangeCompareSelectField">\n                        </sw-entity-multi-id-select>\n                    </sw-container>\n                {% endblock %}\n\n            </sw-card>\n\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_content_empty %}\n            <sw-empty-state v-if="productId == \'\' || !productId" :title="$tc(\'nfx-analytics.index.emptyProductHeadline\')"></sw-empty-state>\n        {% endblock %}\n\n        {% block nfx_analytics_single_product_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-single-product-chart"\n                     v-if="productId != \'\' && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_single_product_chart_sales %}\n                    <sw-chart\n                            v-if="isLoading == false"\n                            :type="\'line\'"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            fillEmptyDates\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_single_product_chart_clicks %}\n                    <sw-chart\n                        v-if="isLoading == false"\n                        :type="\'line\'"\n                        :series="chartClickData"\n                        :options="chartClickOptions"\n                        fillEmptyDates\n                        sort>\n                    </sw-chart>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_single_product_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-single-product-grid"\n                     v-if="productId != \'\' && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_single_product_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #pagination>\n                            {% block analytics_single_product_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[eY.getByName("nfx-analytics")],inject:["repositoryFactory"],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",productId:"",productName:"",overall:0,overallCount:0,errors:{productId:null},compareIds:[],compareNames:{},seriesCompareData:null}},computed:{singleSelectCriteria(){let t=new e0;return this.displayOptions.showVariantParent?t.addFilter(e0.equals("parentId",null)):t.addFilter(e0.multi("OR",[e0.equals("childCount",0),e0.equals("childCount",null)])),t},currencyFilter(){return Shopware.Filter.getByName("currency")},labelProperty(){return["name","productNumber"]},chartOptions(){return{title:{text:this.$tc("nfx-analytics.view.singleProduct.titleChart")+" - "+this.productName},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",labels:{datetimeUTC:!1}},yaxis:{min:0,forceNiceScale:!0}}},chartClickOptions(){return{title:{text:this.$tc("nfx-analytics.view.singleProduct.titleClicksChart")},stroke:{curve:"smooth"},noData:{text:this.$tc("nfx-analytics.index.noData"),style:{color:"#189eff",fontSize:20}},xaxis:{type:"datetime",labels:{datetimeUTC:!1}},yaxis:{min:0,forceNiceScale:!0}}},chartSeriesData(){if(!this.seriesData)return null;let t,e=[];if(t=this.seriesData.map(t=>({x:this.parseDate(t.date),y:t.count})),e.push({name:this.productName,data:t}),!this.seriesCompareData||!(this.seriesCompareData.length>0))return e;for(let a=0;a<this.seriesCompareData.length;a++)if(t=this.seriesCompareData[a].map(t=>({x:this.parseDate(t.date),y:t.count})),e.push({name:this.compareNames[a],data:t}),a===this.seriesCompareData.length-1)return e},chartClickData(){if(!this.seriesData)return null;let t,e=[];if(t=this.seriesData.map(t=>({x:this.parseDate(t.date),y:t.clicks})),e.push({name:this.productName,data:t}),!this.seriesCompareData||!(this.seriesCompareData.length>0))return e;for(let a=0;a<this.seriesCompareData.length;a++)if(t=this.seriesCompareData[a].map(t=>({x:this.parseDate(t.date),y:t.clicks})),e.push({name:this.compareNames[a],data:t}),a===this.seriesCompareData.length-1)return e},getGridColumns(){return[{property:"formatedDate",dataIndex:"formatedDate",label:this.$tc("nfx-analytics.view.singleProduct.dateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.singleProduct.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"clicks",dataIndex:"clicks",label:this.$tc("nfx-analytics.view.singleProduct.clicksColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)},productRepository(){return this.repositoryFactory.create("product")},compareIdsDisabled(){return!this.productId||""===this.productId}},watch:{displayOptions:{handler(){this.createdComponent()}},"displayOptions.showVariantParent":{handler(){this.isLoading=!0,this.productId="",this.seriesData=null,this.gridData=null,this.total=0,this.page=1,this.productName="",this.overall=0,this.overallCount=0,this.compareIds=[],this.compareNames={},this.seriesCompareData=null,this.$nextTick(()=>{this.isLoading=!1})}},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(this.isLoading=!0,this.productId&&""!==this.productId){let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);a.productId=this.productId,a.compareIds=this.compareIds,a.labels=this.getGridLabels(this.getGridColumns),"single_product"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.seriesData=t.data.seriesData,this.productName=t.data.productName,this.total=t.data.gridData.length,this.gridData=t.data.gridData,this.seriesCompareData=t.data.seriesCompareData,this.compareNames=t.data.compareProductNames),this.$nextTick(()=>{this.isLoading=!1})}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}else this.isLoading=!1},onChangeProductSelectField(t){this.createdComponent()},onChangeCompareSelectField(t){this.createdComponent()}}}),a(3251);let{Component:e1,Mixin:e2}=Shopware;e1.register("nfx-grid-viewed",{template:'<div class="nfx-analytics-cross-selling-grid">\n    <h3 class="nfx-analytics-cross-selling-grid-headline">\n        {{ $tc(\'nfx-analytics.view.crossSelling.headlineViews\') }}\n    </h3>\n    <div v-if="!gridData || (gridData && gridData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n    </div>\n    <sw-data-grid v-else\n                  :compactMode="false"\n                  :dataSource="gridData"\n                  :columns="getGridColumns"\n                  :showSelection="false"\n                  :showActions="false">\n\n        <template #column-productName="{ item }">\n            <router-link\n                    class="sw-data-grid__cell-value"\n                    :to="{ name: \'sw.product.detail\', params: { id: item.productId } }">\n                {{ item.productName }}\n            </router-link>\n        </template>\n        <template #column-crossSellings="{ item }">\n            <div v-if="item.crossSellings" class="nfx-analytics-cross-selling-grid-column">\n                <div v-for="csName in item.crossSellings" class="nfx-analytics-cross-selling-grid-csname">\n                    {{ csName }}\n                </div>\n            </div>\n        </template>\n        <template #pagination>\n            {% block analytics_cross_selling_grid_pagination %}\n                <sw-pagination :page="page"\n                               :limit="limit"\n                               :total="dataTotal"\n                               :total-visible="7"\n                               @page-change="onPageChange">\n                </sw-pagination>\n            {% endblock %}\n        </template>\n    </sw-data-grid>\n</div>\n\n',mixins:[e2.getByName("nfx-analytics")],props:{data:{type:Object,required:!1,default:null}},data(){return{page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"productName",dataIndex:"productName",label:this.$tc("nfx-analytics.view.crossSelling.name"),allowResize:!1,align:"left",inlineEdit:!1,width:"250px"},{property:"viewed",dataIndex:"viewed",label:this.$tc("nfx-analytics.view.crossSelling.viewed"),allowResize:!1,align:"left",inlineEdit:!1,width:"80px"},{property:"crossSellings",dataIndex:"crossSellings",label:this.$tc("nfx-analytics.view.crossSelling.crossSellings"),allowResize:!1,align:"left",inlineEdit:!1,width:"220px"}]},dataTotal(){return this.data?this.data.length:0},gridData(){return this.data?this.data.slice((this.page-1)*this.limit,this.limit*this.page):null}}});let{Component:e5,Mixin:e3}=Shopware;e5.register("nfx-grid-bought",{template:'<div class="nfx-analytics-cross-selling-grid">\n    <h3 class="nfx-analytics-cross-selling-grid-headline">\n        {{ $tc(\'nfx-analytics.view.crossSelling.headlineSales\') }}\n    </h3>\n    <div v-if="!gridData || (gridData && gridData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n    </div>\n    <sw-data-grid v-else\n                  :dataSource="gridData"\n                  :columns="getGridColumns"\n                  :showSelection="false"\n                  :showActions="false">\n\n        <template #column-productName="{ item }">\n            <router-link\n                    class="sw-data-grid__cell-value"\n                    :to="{ name: \'sw.product.detail\', params: { id: item.productId } }">\n                {{ item.productName }}\n            </router-link>\n        </template>\n        <template #column-crossSellings="{ item }">\n            <div v-if="item.crossSellings" class="nfx-analytics-cross-selling-grid-column">\n                <div v-for="csName in item.crossSellings" class="nfx-analytics-cross-selling-grid-csname">\n                    {{ csName }}\n                </div>\n            </div>\n        </template>\n        <template #pagination>\n            {% block analytics_cross_selling_grid_pagination %}\n                <sw-pagination :page="page"\n                               :limit="limit"\n                               :total="dataTotal"\n                               :total-visible="7"\n                               @page-change="onPageChange">\n                </sw-pagination>\n            {% endblock %}\n        </template>\n    </sw-data-grid>\n</div>\n\n',mixins:[e3.getByName("nfx-analytics")],props:{data:{type:Object,required:!1,default:null}},data(){return{page:1,limit:25}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},getGridColumns(){return[{property:"productName",dataIndex:"productName",label:this.$tc("nfx-analytics.view.crossSelling.name"),allowResize:!1,align:"left",inlineEdit:!1,width:"250px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.crossSelling.sales"),allowResize:!1,align:"left",inlineEdit:!1,width:"80px"},{property:"crossSellings",dataIndex:"crossSellings",label:this.$tc("nfx-analytics.view.crossSelling.crossSellings"),allowResize:!1,align:"left",inlineEdit:!1,width:"220px"}]},dataTotal(){return this.data?this.data.length:0},gridData(){return this.data?this.data.slice((this.page-1)*this.limit,this.limit*this.page):null}}});let{Component:e7,Mixin:e4}=Shopware;e7.register("nfx-analytics-index-cross-selling",{template:'{% block nfx_analytics_cross_selling %}\n    <div>\n\n        {% block nfx_analytics_cross_selling_noplugin %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-noplugin nfx-analytics-cross-selling-noplugin"\n                     v-if="noPlugin"\n                     :isLoading="isLoading">\n                <sw-alert\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :variant="\'info\'"\n                >\n                    <div class="nfx-analytics-content-card-noplugin-alert">\n                        {{  $tc(\'nfx-analytics.view.crossSelling.nolplugin.alert\') }}\n                    </div>\n                    <div>\n                        <sw-external-link :href="\'https://store.shopware.com/nfx670444287112/cross-selling/zubehoer-professionell-pro.html\'">\n                            {{  $tc(\'nfx-analytics.view.crossSelling.nolplugin.swLink\') }}\n                        </sw-external-link>\n\n                    </div>\n                    <div>\n                        <sw-external-link :href="\'https://www.coolbax.de/shopware-plugins/storefront/89/cross-selling/zubehoer-professionall-pro\'">\n                            {{  $tc(\'nfx-analytics.view.crossSelling.nolplugin.nfxLink\') }}\n                        </sw-external-link>\n                    </div>\n                </sw-alert>\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_cross_selling_head %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-cross-selling-head" :isLoading="isLoading">\n                {% block nfx_analytics_cross_selling_select %}\n                    <sw-entity-single-select class="nfx-analytics-cross-selling-select"\n                         :label="$tc(\'nfx-analytics.view.singleProduct.productSelect.label\')"\n                         :placeholder="$tc(\'nfx-analytics.view.singleProduct.productSelect.placeholder\')"\n                         :labelProperty="labelProperty"\n                         valueProperty="id"\n                         :error="errors.productId"\n                         entity="product"\n                         v-model:value="productId"\n                         @update:value="onChangeProductSelectField">\n                    </sw-entity-single-select>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_content_empty %}\n            <sw-empty-state v-if="productId == \'\' || !productId" :title="$tc(\'nfx-analytics.index.emptyProductHeadline\')"></sw-empty-state>\n        {% endblock %}\n\n        {% block nfx_analytics_cross_selling_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-cross-selling-grids"\n                     v-if="productId != \'\'"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_cross_selling_grid_data %}\n                    <h2 class="nfx-analytics-cross-selling-productname">\n                        {{ productName }}\n                    </h2>\n                    <div class="nfx-analytics-cross-selling-double-grid-wrapper">\n                        <nfx-grid-viewed :data="alsoViewed">\n                        </nfx-grid-viewed>\n                        <nfx-grid-bought :data="alsoBought">\n                        </nfx-grid-bought>\n                    </div>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_cross_selling_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.crossSelling.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[e4.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,alsoViewed:null,alsoBought:null,productId:"",productName:"",errors:{productId:null},noPlugin:!1}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},labelProperty(){return["name","productNumber"]}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(this.isLoading=!0,!this.productId||""===this.productId){this.isLoading=!1;return}let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);a.productId=this.productId,"cross_selling"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&this.$emit("nfx-statistics-csv_done"),void 0!==t.data&&!0===t.data.success?(this.alsoViewed=t.data.alsoViewed,this.alsoBought=t.data.alsoBought,this.productName=t.data.productName):void 0!==t.data&&!1===t.data.success?(this.alsoViewed=[],this.alsoBought=[],this.productName="",this.noPlugin=!0):(this.alsoViewed=[],this.alsoBought=[],this.productName=""),this.$nextTick(()=>{this.isLoading=!1})}).catch(t=>{this.isLoading=!1})},onChangeProductSelectField(t){this.createdComponent()}}});let{Component:e8,Mixin:e9}=Shopware;e8.register("nfx-analytics-index-customer-by-salutation",{template:'{% block nfx_analytics_customer_by_salutation %}\n    <div>\n\n        {% block nfx_analytics_customer_by_salutation_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-customer-by-salutation-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_customer_by_salutation_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_customer_by_salutation_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_customer_by_salutation_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-customer-by-salutation-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_customer_by_salutation_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #pagination>\n                            {% block analytics_customer_by_salutation_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[e9.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.customerBySalutation.titleChart")},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","count","Bestellungen")},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.customerBySalutation.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.customerBySalutation.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"percent",dataIndex:"percent",label:this.$tc("nfx-analytics.view.customerBySalutation.percentColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"customer_by_salutation"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.total=t.data.seriesData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:e6,Mixin:at}=Shopware;e6.register("nfx-analytics-index-sales-by-salutation",{template:'{% block nfx_analytics_sales_by_salutation %}\n    <div>\n\n        {% block nfx_analytics_sales_by_salutation_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-salutation-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_salutation_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_salutation_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_salutation_grid %}\n\n\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-salutation-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_salutation_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_salutation_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[at.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"sum"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesBySalutation.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesBySalutation.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.salesBySalutation.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesBySalutation.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_salutation"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.total=t.data.seriesData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:ae,Mixin:aa}=Shopware;ae.register("nfx-analytics-index-sales-by-taxrate",{template:'{% block nfx_analytics_sales_by_taxrate %}\n    <div>\n\n        {% block nfx_analytics_sales_by_taxrate_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-taxrate-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_taxrate_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_taxrate_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_taxrate_grid %}\n\n\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-taxrate-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_taxrate_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort"\n                            :showActions="false">\n\n                        <template #column-tax="{ item }">\n                            {{ currencyFilter(item.tax, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_taxrate_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_sales_by_taxrate_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.salesByTaxrate.description\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[aa.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",sortDirection:"DESC",sortBy:"taxRate"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByTaxrate.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"taxRate","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"taxRate",dataIndex:"taxRate",label:this.$tc("nfx-analytics.view.salesByTaxrate.taxRateColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"tax",dataIndex:"tax",label:this.$tc("nfx-analytics.view.salesByTaxrate.taxColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByTaxrate.sumColumn")+this.$tc("nfx-analytics.view.net"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_taxrate"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.total=t.data.seriesData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}}),a(5940);let{Component:ai,Context:an,Mixin:as}=Shopware,{EntityCollection:ar}=Shopware.Data;ai.register("nfx-analytics-index-category-compare",{template:'{% block nfx_analytics_category_compare %}\n    <div>\n\n        {% block nfx_analytics_category_compare_head %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-category-compare-head" :isLoading="categoryLoading">\n                {% block nfx_analytics_category_compare_select %}\n                    <sw-category-tree-field\n                        ref="nfxAnalyticsCategoryCompareSelect"\n                        v-if="!categoryLoading"\n                        :label="$tc(\'nfx-analytics.view.categorySelect.labelNotOptional\')"\n                        class="sw-product-detail__select-category"\n                        :categories-collection="categoryCollection ? categoryCollection : []"\n                        :placeholder="$tc(\'nfx-analytics.view.categorySelect.placeholderMulti\')"\n                        @selection-add="onCategoryAdd"\n                        @selection-remove="onCategoryRemove"\n                    />\n                {% endblock %}\n            </sw-card>\n\n        {% endblock %}\n\n        {% block nfx_analytics_variants_compare_content_empty %}\n            <sw-empty-state v-if="!categories" :title="$tc(\'nfx-analytics.index.emptyCategoryHeadline\')"></sw-empty-state>\n        {% endblock %}\n\n        {% block nfx_analytics_category_compare_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-category-compare-chart"\n                     v-if="categories && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_category_compare_chart_data %}\n                    <sw-chart\n                            v-if="!isLoading && chartType != null && chartSeriesData != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_category_compare_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_category_compare_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-category-compare-grid"\n                     v-if="categories && (!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1)"\n                     :isLoading="isLoading">\n\n                {% block nfx_analytics_category_compare_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                        :dataSource="gridSeriesData"\n                        :columns="getGridColumns"\n                        :showSelection="false"\n                        :showActions="false"\n                        :sort-by="sortBy"\n                        :sort-direction="sortDirection"\n                        @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_category_compare_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        <template #column-sales="{ item }">\n                            {{ currencyFilter(item.sales, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_category_compare_grid_pagination %}\n                                <sw-pagination\n                                        :page="page"\n                                        :limit="limit"\n                                        :total="total"\n                                        :total-visible="7"\n                                        @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            {% block nfx_analytics_category_compare_help %}\n                <sw-alert\n                    v-if="!displayOptions.dashboard"\n                    :appearance="\'notification\'"\n                    :showIcon="false"\n                    :closable="false"\n                    :variant="\'neutral\'"\n                    :title="$tc(\'nfx-analytics.general.help\')"\n                >\n                    <div class="nfx-analytics-description">\n                        {{ $tc(\'nfx-analytics.view.salesByCategory.info\') }}\n                    </div>\n                </sw-alert>\n            {% endblock %}\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[as.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!0,categoryLoading:!0,seriesData:null,gridData:null,total:0,page:1,limit:25,chartType:"pie",categoryCollection:null,categories:[],sortDirection:"DESC",sortBy:"sum",errors:{categoryCollection:null}}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},categoryRepository(){return this.repositoryFactory.create("category")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.categoryCompare.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.seriesData,"name","sales","Bestellungen",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:"nfx-analytics.view.categoryNameColumn",allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:"nfx-analytics.view.salesCountColumn",allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sales",dataIndex:"sales",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(this.isLoading=!0,this.categoryCollection||(this.categoryLoading=!0,this.categoryCollection=new ar(this.categoryRepository.route,this.categoryRepository.entityName,an.api),this.$nextTick(()=>{this.categoryLoading=!1})),(!this.categories||Array.isArray(this.categories)&&0===this.categories.length)&&this.$nextTick(()=>{this.isLoading=!1}),this.categories&&this.categories.length>0){let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);a.categories=this.categories,"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"category_compare"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.seriesData&&(this.total=t.data.seriesData.length,this.seriesData=t.data.seriesData,this.gridData=t.data.seriesData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}},onCategoryAdd(t){this.categories.push({id:t.id,name:t.translated?.name}),this.categories.length>1&&this.createdComponent()},onCategoryRemove(t){this.categories=this.categories.filter(e=>e.id!==t.id),this.categories.length>1&&this.createdComponent()}}});let{Component:al,Mixin:ao}=Shopware;al.register("nfx-analytics-index-sales-by-account-types",{template:'{% block nfx_analytics_sales_by_account_types %}\n    <div>\n\n        {% block nfx_analytics_sales_by_account_types_chart %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-chart nfx-analytics-sales-by-account-types-chart"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showChart == 1">\n\n                {% block nfx_analytics_sales_by_account_types_chart_data %}\n                    <sw-chart\n                            v-if="isLoading == false && chartType != null"\n                            :type="chartType"\n                            :series="chartSeriesData"\n                            :options="chartOptions"\n                            sort>\n                    </sw-chart>\n                {% endblock %}\n\n                {% block nfx_analytics_sales_by_account_types_select_box %}\n                    <sw-select-field class="nfx-analytics-charttype-select"\n                                     :label="$tc(\'nfx-analytics.view.chartSelection.selectLabel\')"\n                                     :placeholder="$tc(\'nfx-analytics.view.chartSelection.placeholder\')"\n                                     :value="chartType"\n                                     @update:value="onChangeField($event, \'chartType\')">\n                        <option value="bar">{{  $tc(\'nfx-analytics.view.chartSelection.bar\') }}</option>\n                        <option value="pie">{{ $tc(\'nfx-analytics.view.chartSelection.pie\') }}</option>\n                        <option value="donut">{{ $tc(\'nfx-analytics.view.chartSelection.donut\') }}</option>\n                    </sw-select-field>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block nfx_analytics_sales_by_account_types_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-sales-by-account-types-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_sales_by_account_types_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false">\n\n                        <template #column-name="{ item }">\n                            {{ $tc(item.name) }}\n                        </template>\n\n                        <template #column-sum="{ item }">\n                            {{ currencyFilter(item.sum, systemCurrency.isoCode) }}\n                        </template>\n\n                        <template #pagination>\n                            {% block analytics_sales_by_account_types_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n            <sw-alert\n                v-if="!displayOptions.dashboard"\n                :appearance="\'notification\'"\n                :showIcon="false"\n                :closable="false"\n                :variant="\'neutral\'"\n                :title="$tc(\'nfx-analytics.general.help\')"\n            >\n                <div class="nfx-analytics-description">\n                    {{ $tc(\'nfx-analytics.view.fullOrderInfo\') }}\n                </div>\n            </sw-alert>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ao.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},systemCurrency:{type:Object,required:!0,default:{}},format:{type:String,required:!1,default:""},grossOrNet:{type:String,required:!1,default:"net"}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,chartType:"pie"}},computed:{currencyFilter(){return Shopware.Filter.getByName("currency")},chartOptions(){return this.pieChartOptions("nfx-analytics.view.salesByAccountTypes.titleChart",this.systemCurrency)},chartSeriesData(){return this.defaultChartSeriesData(this.gridData,"name","sum","Umsatz",!1,!0)},getGridColumns(){return[{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByAccountTypes.nameColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"count",dataIndex:"count",label:this.$tc("nfx-analytics.view.countColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.sumColumn")+this.$tc("nfx-analytics.view."+this.grossOrNet),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService");this.chartType=this.displayOptions.chartType??"pie";let a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),"sales_by_account_types"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{"csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData&&(t.data.gridData.forEach(t=>{t.name=this.$tc(t.name)}),this.total=t.data.gridData.length,this.gridData=t.data.gridData),this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})}}});let{Component:ac,Mixin:ad}=Shopware;ac.register("nfx-analytics-index-pickware-returns",{template:'{% block nfx_analytics_pickware_returns %}\n    <div>\n\n        {% block nfx_analytics_pickware_returns_grid %}\n            <sw-card positionIdentifier="\'test\'" class="nfx-analytics-content-card-grid nfx-analytics-pickware-returns-grid"\n                     :isLoading="isLoading" v-if="!displayOptions.dashboard || activeStatistic.parameter.dashboard.showTable == 1">\n\n                {% block nfx_analytics_pickware_returns_grid_data %}\n                    <div v-if="displayOptions.dashboard" class="nfx-analytics-grid-label">\n                        {{ $tc(activeStatistic.label) }}\n                    </div>\n\n                    <div v-if="!gridSeriesData || (gridSeriesData && gridSeriesData.length == 0)" class="nfx-analytics-empty-state-wrapper">\n                        <sw-empty-state :title="$tc(\'nfx-analytics.index.noData\')"></sw-empty-state>\n                    </div>\n\n                    <sw-data-grid v-else\n                            :dataSource="gridSeriesData"\n                            :columns="getGridColumns"\n                            :showSelection="false"\n                            :showActions="false"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            @column-sort="onColumnSort">\n\n                        {% block nfx_analytics_pickware_returns_grid_columns_order_number %}\n                            <template #column-number="{ item }">\n                                <router-link\n                                        class="sw-data-grid__cell-value"\n                                        :to="{ name: \'sw.product.detail\', params: { id: item.id } }">\n                                    {{ item.number }}\n                                </router-link>\n                            </template>\n                        {% endblock %}\n\n                        {% block nfx_analytics_pickware_returns_grid_columns_order_part %}\n                            <template #column-part="{ item }">\n                                {{ item.part }} %\n                            </template>\n                        {% endblock %}\n\n                        <template #pagination>\n                            {% block analytics_pickware_returns_grid_pagination %}\n                                <sw-pagination :page="page"\n                                               :limit="limit"\n                                               :total="total"\n                                               :total-visible="7"\n                                               @page-change="onPageChange">\n                                </sw-pagination>\n                            {% endblock %}\n                        </template>\n\n                    </sw-data-grid>\n                {% endblock %}\n\n            </sw-card>\n\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',mixins:[ad.getByName("nfx-analytics")],props:{activeStatistic:{type:Object,required:!1,default:null},displayOptions:{type:Object,required:!0},format:{type:String,required:!1,default:""}},data(){return{isLoading:!1,gridData:null,total:0,page:1,limit:25,sortDirection:"DESC",sortBy:"sum"}},computed:{getGridColumns(){return[{property:"number",dataIndex:"number",label:this.$tc("nfx-analytics.view.salesByProducts.numberColumn"),allowResize:!1,primary:!0,inlineEdit:!1,width:"100px"},{property:"name",dataIndex:"name",label:this.$tc("nfx-analytics.view.salesByProducts.nameColumn"),allowResize:!1,inlineEdit:!1,width:"100px"},{property:"sum",dataIndex:"sum",label:this.$tc("nfx-analytics.view.salesByProducts.sumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"returnSum",dataIndex:"returnSum",label:this.$tc("nfx-analytics.view.salesByProductsPwreturn.returnSumColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"part",dataIndex:"part",label:this.$tc("nfx-analytics.view.pickwareReturns.partColumn"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"},{property:"manufacturer",dataIndex:"manufacturer",label:this.$tc("nfx-analytics.view.manufacturer"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}]},gridSeriesData(){return this.defaultGridSeriesData(this.gridData,this.page,this.limit)}},watch:{displayOptions(){this.createdComponent()},format(){"csv"==this.format&&this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let t=Shopware.Application.getContainer("init").httpClient,e=Shopware.Service("loginService"),a=this.getBasicParameters(this.displayOptions,this.format,this.activeStatistic.name);"csv"===this.format&&(a.labels=this.getGridLabels(this.getGridColumns)),a.sortBy=this.sortBy,a.sortDirection=this.sortDirection,"pickware_returns"===this.activeStatistic.name&&this.activeStatistic.pathInfo&&t.post(this.activeStatistic.pathInfo,{parameters:a},{headers:{Authorization:`Bearer ${e.getToken()}`}}).then(t=>{if("csv"===a.format&&void 0!==t.data&&!0===t.data.success&&t.data.fileSize&&(this.$emit("nfx-statistics-csv_done"),this.csvDownload(this.activeStatistic.name+".csv",t.data.fileSize)),void 0!==t.data&&!0===t.data.success&&t.data.gridData){let e=this.setOthersLabel(t.data.gridData);this.total=t.data.gridData.length,this.gridData=e}this.isLoading=!1}).catch(t=>{this.isLoading=!1,"csv"===a.format&&this.$emit("nfx-statistics-csv_done")})},onColumnSort(t){this.sortBy===t.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":this.sortBy=t.dataIndex,this.gridData.length>0&&this.createdComponent()}}});var ap=JSON.parse('{"nfx-analytics":{"general":{"name":"nfx-analytics","title":"Magic Analytics","description":"Verwaltung von Statistik-Eintr\xe4gen","navigationLabel":"Magic Analytics","treeHeadline":"Navigation","placeholderSearchBar":"Durchsuche alle Statistiken ...","help":"Hilfe","favorites":"Favoriten","manualLink":"Handbuch","coolbaxLink":"Weitere Plugins von nfx:MEDIA"},"index":{"labelActionExport":"CSV Export","noData":"Keine Daten vorhanden","title":"Magic Analytics","orderGridTitle":"Bestellungen zur Statistik ","productGridTitle":"Produkte zur Statistik ","goToOrderDetail":"Zur SW Order Detailansicht","goToProductDetail":"Zur SW Produkt Detailansicht","emptyStateHeadline":"W\xe4hle Links eine Statistik aus","emptyPropertyGroupHeadline":"Bitte eine Eigenschaft ausw\xe4hlen!","emptyStreamHeadline":"Bitte eine dynamische Produktgruppe ausw\xe4hlen!","emptyProductHeadline":"Bitte ein Produkt w\xe4hlen!","emptyCategoryHeadline":"Bitte eine Kategorie w\xe4hlen!","labelSidebarFilter":"Filter","labelSidebarMoreFilter":"Zus\xe4tzliche spezifische Filter","labelSidebarFilterOptions":"Haupt - Filter","labelSidebarExport":"Export starten","labelSidebarExportBar":" CSV Export","labelSidebarProductSearchBar":"Produktsuche","labelSidebarProductSearch":"Produkte ausw\xe4hlen","labelSidebarProductSearchStart":"Suche","dates":{"from":"von:","to":"bis:"},"sums":"Summen"},"dashboard":{"settingsTitel":"Einstellungen","save":"Speichern","showChart":"Zeige Chart","showTable":"Zeige Tabelle","position":"Position","title":"Statistiken","dateRanges":{"90Days":"Letzte 90 Tage","30Days":"Letzte 30 Tage","14Days":"Letzte 14 Tage","7Days":"Letzte 7 Tage","yesterday":"Seit gestern"}},"product":{"avPrice":"\xd8 Preis","sales":"Umsatz","productNumber":"Produktnummer"},"order":{"profitColumn":"Profit","info":"Profit wird errechnet aus den Nettopreisen der Produkte in der Bestellung (abzgl. Promotion Rabatte) und den Netto Einkaufspreisen, funktioniert also nicht, wenn die Einkaufspreise nicht bei allen Produkten gepflegt werden. Versandkosten werden nicht ber\xfccksichtigt."},"component":{"displayOptions":{"showVariantParent":"Varianten zusammenfassen","dateFrom":"Von","dateTo":"Bis","dateRanges":{"label":"Zeitspanne","365Days":"Letzte 365 Tage","180Days":"Letzte 180 Tage","90Days":"Letzte 90 Tage","30Days":"Letzte 30 Tage","14Days":"Letzte 14 Tage","7Days":"Letzte 7 Tage","yesterday":"Seit gestern","userdefined":"Benutzerdefiniert","currentWeek":"Diese Woche","lastWeek":"Letzte Woche","currentMonth":"Dieser Monat","lastMonth":"Letzter Monat","currentQuarter":"Dieses Vierteljahr","lastQuarter":"Letztes Vierteljahr","currentYear":"Dieses Jahr","lastYear":"Letztes Jahr"},"refreshButton":"Aktualisieren","saleschannel":{"label":"Verkaufskan\xe4le","placeholder":"Alle Verkaufskan\xe4le"},"customerGroup":{"label":"Kundengruppen","placeholder":"Alle Kundengruppen"},"product":{"label":"Produkte","placeholder":"W\xe4hle Produkt"},"manufacturer":{"label":"Hersteller","placeholder":"W\xe4hle Hersteller"},"affiliate":{"label":"Partner-Code (Affiliates)","placeholder":"W\xe4hle Affiliate-Code"},"notaffiliate":{"label":"Hat NICHT Partner-Code (Affiliates)"},"campaign":{"label":"Kampagnen-Code","placeholder":"W\xe4hle Kampagnen-Code"},"promotion":{"label":"Promotion-Code","placeholder":"W\xe4hle Promotion-Code"}},"tree":{"headline":"Navigation"}},"view":{"noAffiliate":"Kein Partner Code","noCampaign":"Keine Kampagne","productsOnlyInfo":"Bei der Berechnung des Umsatzes werden nur die Preise der Produkte ber\xfccksichtigt, nicht jedoch Rabattgutscheine oder Versandkosten.","fullOrderInfo":"Bei der Berechnung des Umsatzes werden die Gesamtpreise der Bestellungen ber\xfccksichtigt, also inklusive Rabattgutscheine oder Versandkosten.","invoiceOrderInfo":"Die Bestellungen sind nach Rechnungsdatum gruppiert, also werden Bestellungen ohne Rechnung nicht ber\xfccksichtigt. Das Rechnungsdatum wird bei Erstellung der Rechnung in einer extra Datenbanktabelle erfasst, aber nur, wenn in den Plugin-Einstellungen der Schalter \'Zus\xe4tzliche Orderdaten speichern wenn m\xf6glich\' aktiv ist, ansonsten gibt es hier keine Daten.","dateColumn":"Datum","goToOrdersTip":"Zeige zugeh\xf6rige Bestellungen","goToProductsTip":"Zeige zugeh\xf6rige Produkte","goToOrders":"Bestellungen","goToProducts":"Produkte","countColumn":"Anzahl Bestellungen","countColumnShort":"Bestellungen","sumColumn":"Umsatz","productNumberColumn":"Produktnummer","productNameColumn":"Produktname","categoryNameColumn":"Kategorie","salesCountColumn":"Anzahl Verk\xe4ufe","conversionColumn":"Conversion Rate","detectionNote":" *) Die Bestimmung von Ger\xe4t, Browser und Betriebssystem sind nicht immer genau. Daher k\xf6nnen diese Daten nur als ungef\xe4hre Sch\xe4tzung angesehen werden! Auch sind Marktplatzbestellungen nicht enthalten.","productProfitNote":" *) Bei der Berechnung werden keine Preisregeln, Preis\xe4nderungen oder dergleichen ber\xfccksichtigt. Daher k\xf6nnen die tats\xe4chliche Gewinne abweichen. Diese Statistik gibt also nur einen ungef\xe4hren \xdcberblick \xfcber die Profitabilit\xe4t der einzelnen Produkte.","net":" (netto)","gross":" (brutto)","manufacturer":"Hersteller","stock":"Lager","groups":{"sales":"Umsatz","customers":"Kunden","products":"Produkte","marketing":"Marketing","orders":"Bestellungen","lexicon":"Lexikon","unfinished":"Abbruchanalyse","visitors":"Besucher und Seitenklicks","invoice":"Nach Rechnungsdatum","pwreturn":"Mit Pickware Erp Pro - Retour"},"overallCount":{"label":"Gesamtanzahl : "},"overall":{"label":"Gesamtsumme :   ","sales":{"label":"Umsatz :   "},"sold":{"label":"Anzahl verkauft :   "},"productCount":{"label":"Anzahl angebotene Produkte :   "}},"streamSelect":{"label":"Dynamische Produktgruppe Auswahl","placeholder":"Bitte eine dynamische Produktgruppe w\xe4hlen!"},"propertyGroupSelect":{"label":"Eigenschaftsauspr\xe4gung Auswahl","placeholder":"Bitte Eigenschaftsauspr\xe4gung w\xe4hlen!"},"categorySelect":{"label":"Kategorie Auswahl (optional)","labelNotOptional":"Kategorie Auswahl","placeholder":"Produkte auf diese Kategorie beschr\xe4nken","placeholderMulti":"W\xe4hle mindestens 2 Kategorien"},"sortingSelect":{"label":"Sortierung","placeholder":"Sortierung","worthASC":"Bestandswert aufsteigend","worthDESC":"Bestandswert absteigend","nameASC":"Produktname aufsteigend","nameDESC":"Produktname absteigend","stockASC":"Lagerbestand aufsteigend","stockDESC":"Lagerbestand absteigend","ppriceASC":"Einkaufspreis aufsteigend","ppriceDESC":"Einkaufspreis absteigend","numberASC":"Produktnummer aufsteigend","numberDESC":"Produktnummer absteigend","cpriceASC":"Verkaufspreis aufsteigend","cpriceDESC":"Verkaufspreis absteigend","profitASC":"Rohertrag aufsteigend","profitDESC":"Rohertrag absteigend","markUpASC":"Handelsspanne aufsteigend","markUpDESC":"Handelsspanne absteigend","countASC":"Verk\xe4ufe aufsteigend","countDESC":"Verk\xe4ufe absteigend"},"quickOverview":{"titleTree":"Schnell\xfcbersicht","titleChart":"Schnell\xfcbersicht","dateColumn":"Datum","orderCountColumn":"Bestellungen","salesColumn":"Brutto-Umsatz","avgSalesColumn":"\xd8 Bestellwert","avgSalesColumnExport":"Durchschnittlicher Bestellwert","nettoSalesColumn":"Netto-Umsatz","newCustomersColumn":"Neue Kunden*","newPayingCustomersColumn":"Mit Bestellungen*","firstTimeCountColumn":"Erstbestellungen*","visitorsColumn":"Besucher","impressionsColumn":"Klicks","description":"*)\\nNeue Kunden:  Anzahl der Kunden in der Datenbank, die an diesem Tag erstellt wurden.\\nErstbestellungen:  Anzahl von Bestellungen von Kunden, die vor diesem Tag noch nichts bestellt hatten.\\nMit Bestellungen:  Anzahl der Kunden unter den Neukunden des Tages, die mindestens eine abgeschlossene Bestellung bis heute get\xe4tigt haben."},"salesByCategory":{"titleTree":"Umsatz einer Kategorie","titleChart":"Umsatz einer Kategorie","info":"Bei Kategorien mit manueller Produktzuweisung werden auch die Unterkategorien einbezogen. F\xfcr Kategorien mit Zuweisung \xfcber eine dynamische Produktgruppe gilt dies derzeit nicht.\\nBei der Berechnung des Umsatzes werden nur die Preise der Produkte ber\xfccksichtigt, nicht jedoch Rabattgutscheine oder Versandkosten."},"categoryCompare":{"titleTree":"Umsatz nach Kategorien","titleChart":"Umsatz nach Kategorien"},"salesByAccountTypes":{"titleTree":"Umsatz nach Besteller Typ","titleChart":"Umsatz nach Besteller Typ","guest":"Gastbesteller","nonguest":"Registriert","nameColumn":"Typ"},"conversionAll":{"titleTree":"Conversion (t\xe4glich)","titleChart":"Conversion (t\xe4glich) *","visitorsColumn":"Besucher","conversionColumn":"Conversion Rate","conversionPercentColumn":"Conversion Rate %","description":"Bitte beachten: Besucher werden nur nach Saleschannel gefiltert. Bei den Bestellungen wirken alle eingestellten Filter. Diese sollten so gew\xe4hlt werden, dass m\xf6glichst nur Bestellungen aus dem Shop ber\xfccksichtigt werden, nicht importierte Bestellungen, wie z.B. von Amazon. Diese w\xfcrden die Conversion Rate verf\xe4lschen. Beim Link zu den zugeh\xf6rigen Bestellungen wirkt der Nicht-Partnercode Filter nicht."},"conversionByMonth":{"titleTree":"Conversion (monatlich)","titleChart":"Conversion (monatlich) *","visitorsColumn":"Besucher","conversionColumn":"Conversion Rate","conversionPercentColumn":"Conversion Rate %","description":"Bitte beachten: Besucher werden nur nach Saleschannel gefiltert. Bei den Bestellungen wirken alle eingestellten Filter. Diese sollten so gew\xe4hlt werden, dass m\xf6glichst nur Bestellungen aus dem Shop ber\xfccksichtigt werden, nicht importierte Bestellungen, wie z.B. von Amazon. Diese w\xfcrden die Conversion Rate verf\xe4lschen. Beim Link zu den zugeh\xf6rigen Bestellungen wirkt der Nicht-Partnercode Filter nicht. Monate ohne Besucherdaten werden nicht angezeigt, z.B. wenn \xe4ltere Besucherdaten automatisch nach Plugin-Einstellung gel\xf6scht werden."},"crossSelling":{"name":"Produkt","viewed":"Anzahl","sales":"Anzahl","titleTree":"Cross Selling","headlineViews":"In einer Sitzung auch angesehen *","headlineSales":"In einer Bestellung auch gekauft *","crossSellings":"Cross-Sellings","description":"*) Keine Ber\xfccksichtigung der Filtereinstellungen","nolplugin":{"swLink":"Zum Plugin im Shopware Store","nfxLink":"Plugin Infos bei coolbax.de","alert":"F\xfcr diese Statistik stehen leider keine Daten zur Verf\xfcgung. Die ben\xf6tigten Daten kommen vom Coolbax Plugin \'Cross Selling / Zubeh\xf6r Professionell\'."}},"searchTerms":{"titleTree":"Beliebte Suchbegriffe","titleChart":"Beliebte Suchbegriffe","searchTermColumn":"Suchbegriff *","countColumn":"Anfragen","resultsColumn":"Ergebnisse","salesChannelNameColumn":"Saleschannel","description":"Falls es hier keine Daten gibt, k\xf6nnte es folgende Ursachen haben:\\n\\n- Javascript Fehler im Frontend k\xf6nnten verhindern, dass das JS zur Datenerfassung ausgef\xfchrt wird. Bitte Browser Konsole checken!\\n- Der Twig Block base_body_script in der base.html.twig Datei wird von einem Plugin oder dem Theme \xfcberschrieben. In diesen Block h\xe4ngt das Plugin f\xfcr die Datenerfassung notwendigen Code ein."},"searchActivity":{"titleTree":"Suchanfragen (t\xe4glich)","titleChart":"Suchanfragen (t\xe4glich) *","countColumn":"Anfragen","dateColumn":"Datum"},"salesByManufacturer":{"titleTree":"Umsatz nach Hersteller","titleChart":"Umsatz nach Hersteller","nameColumn":"Hersteller","countColumn":"Verkaufte Artikel","sumColumn":"Umsatz"},"salesByDevice":{"titleTree":"Umsatz nach Ger\xe4t","titleChart":"Umsatz nach Ger\xe4t*","nameColumn":"Ger\xe4t","countColumn":"Anzahl Bestellungen*","sumColumn":"Umsatz*"},"salesByOs":{"titleTree":"Umsatz nach Betriebssystem","titleChart":"Umsatz nach Betriebssystem*","nameColumn":"Betriebssystem","countColumn":"Anzahl Bestellungen*","sumColumn":"Umsatz*"},"salesByBrowser":{"titleTree":"Umsatz nach Browser","titleChart":"Umsatz nach Browser*","nameColumn":"Browser","countColumn":"Anzahl Bestellungen*","sumColumn":"Umsatz*"},"unfinishedOrders":{"titleTree":"Abgebrochene Warenk\xf6rbe","titleChart":"Alle Abgebrochene Warenk\xf6rbe","dateColumn":"Datum","salesColumn":"Betrag","nameColumn":"Kunde","paymentColumn":"Zahlart","itemCountColumn":"Artikel","positionColumn":"Positionen","emailColumn":"Email","phoneColumn":"Telefon","salesChannelColumn":"Saleschannel","description":"Diese Statistik wertet die Daten der Shopware Datenbanktabelle \'cart\' aus, wo Shopware die angefangenen Warenk\xf6rbe speichert. Diese Daten werden bei Kaufabschluss gel\xf6scht oder von Shopware nach 90 Tagen. Ber\xfccksichtigt werden nur Daten von angemeldete Kunden. Es kann vorkommen, dass andere Plugins auch in diese Tabelle Daten schreiben, was diese Statistik verf\xe4lschen w\xfcrde.\\nBei Verwendung von Redis f\xfcr die cart Tabelle k\xf6nnen die Daten nicht ermittelt werden. Redis Unterst\xfctzung ist f\xfcr ein zuk\xfcnftiges Update geplant.","modal":{"title":"Artikel im Warenkorb","labelColumn":"Label","quantityColumn":"Anzahl","unitPriceColumn":"Preis","totalPriceColumn":"Gesamtpreis","typeColumn":"Typ"}},"unfinishedOrdersByPayment":{"titleTree":"Abgebrochene Warenk\xf6rbe (Zahlungsart)","titleChart":"Abgebrochene Warenk\xf6rbe nach Zahlungsart","sumColumn":"Anzahl Warenk\xf6rbe","salesColumn":"Umsatz","nameColumn":"Zahlungsart"},"unfinishedOrdersByCart":{"titleTree":"Abgebrochene Warenk\xf6rbe (t\xe4glich)","titleChart":"Abgebrochene Warenk\xf6rbe t\xe4glich","dateColumn":"Datum","countColumn":"Anzahl Warenk\xf6rbe","salesColumn":"Umsatz","avgColumn":"\xd8 Bestellwert","avgColumnExport":"Durchschnittlicher Bestellwert","itemCountColumn":"Artikelanzahl","positionColumn":"Positionen","avgItemCountColumn":"\xd8 Artikelanzahl"},"salesByProducts":{"titleTree":"Umsatz nach Produkten","titleChart":"Umsatz nach Produkten","numberColumn":"Produktnummer","nameColumn":"Produktname","salesColumn":"Umsatz","sumColumn":"Anzahl Verk\xe4ufe","orderCount":"Anzahl Bestellungen","priceAV":"\xd8 Preis","info":"Anzahl Verk\xe4ufe gibt die Gesamtzahl der verkauften Einheiten des Produkts wieder. Bei Anzahl Bestellungen sind die Bestellungen gemeint, die dieses Produkt enthalten. Lager zeigt nichts an, wenn Varianten zusammengefasst sind bei den dann angezeigten Parent Produkten."},"salesByProductsPwreturn":{"titleTree":"Anzahl Produktverk\xe4ufe mit Retouren","titleChart":"Anzahl Produktverk\xe4ufe mit Retouren","returnSumColumn":"Anzahl Retour","newSumColumn":"Verk\xe4ufe nach Retour"},"pickwareReturns":{"titleTree":"Produkt Retouren","titleChart":"Produkt Retouren","returnSumColumn":"Anzahl Retour","partColumn":"Anteil"},"variantsCompare":{"titleTree":"Varianten Umsatz","titleChart":"Varianten Umsatz","productCountColumn":"Anzahl Produkte","nameColumn":"Eigenschaft","salesColumn":"Umsatz","sumColumn":"Anzahl Verk\xe4ufe"},"countByProducts":{"titleTree":"Produkte nach Verk\xe4ufen","titleChart":"Produkte nach Verk\xe4ufen","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Anzahl Verk\xe4ufe"},"productByOrders":{"titleTree":"Anzahl Bestellungen mit Produkt","titleChart":"Anzahl Bestellungen mit Produkt","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Anzahl Bestellungen"},"productsInventory":{"titleTree":"Bestand","titleChart":"Produkte Bestand","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Lagerbestand","ppriceColumn":"Einkaufspreis","worthColumn":"Bestandswert"},"productsProfit":{"titleTree":"Ertrag","titleChart":"Produktertrag*","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Verk\xe4ufe","ppriceColumn":"Einkaufspreis","cpriceColumn":"Verkaufspreis","profitColumn":"Produktertrag*","markUp":"Handelsspanne","hideNoSales":"ohne Umsatz nicht zeigen"},"productStream":{"titleTree":"Umsatz nach Produkten in Produktstream","titleChart":"Umsatz nach Produkten in Produktstream","numberColumn":"Produktnummer","nameColumn":"Produktname","salesColumn":"Umsatz","sumColumn":"Anzahl Verk\xe4ufe"},"salesByProductsFilter":{"titleTree":"Umsatz nach Produkten mit Filter","titleChart":"Umsatz nach Produkten mit Filter","numberColumn":"Produktnummer","nameColumn":"Produktname","salesColumn":"Umsatz","sumColumn":"Anzahl Verk\xe4ufe"},"productLowInstock":{"titleTree":"Mit wenig Lagerbestand","titleChart":"Produkte mit wenig Lagerbestand","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Lagerbestand"},"productHighInstock":{"titleTree":"Mit hohem Lagerbestand","titleChart":"Produkte mit hohem Lagerbestand","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Lagerbestand"},"productSoonOutstock":{"titleTree":"Mit auslaufendem Lagerbestand","titleChart":"Produkte mit auslaufendem Lagerbestand","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Tage bis Produkt ausverkauft","stockColumn":"Lagerbestand","soldColumn":"Verkauft (Anzahl)*","description":"Basierend auf der Plugineinstellung \'Anzahl der Tage zur Berechnung von Durchschnittsverk\xe4ufen\': "},"productInactiveWithInstock":{"titleTree":"Inaktiv mit Lagerbestand","titleChart":"Inaktive Produkte mit Lagerbestand","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Lagerbestand"},"salesByShippingMethod":{"titleTree":"Umsatz nach Versandart","titleChart":"Umsatz nach Versandart","nameColumn":"Versandart","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByCountry":{"titleTree":"Umsatz nach Lieferland","titleChart":"Umsatz nach Lieferland","nameColumn":"Land","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByBillingCountry":{"titleTree":"Umsatz nach Rechnungsland","titleChart":"Umsatz nach Rechnungsland","nameColumn":"Land","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByBillingCountryInvoice":{"titleTree":"Umsatz nach Rechnungsland","titleChart":"Umsatz nach Rechnungsland (mit Rechnungsdatum)"},"salesByLanguage":{"titleTree":"Umsatz nach Sprache","titleChart":"Umsatz nach Sprache","nameColumn":"Sprache","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByCurrency":{"titleTree":"Umsatz nach W\xe4hrung","titleChart":"Umsatz nach W\xe4hrung","nameColumn":"W\xe4hrung","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"orderCountAll":{"titleTree":"Erstbestellungen (t\xe4glich)","titleChart":"Anzahl Bestellungen t\xe4glich","dateColumn":"Datum","countColumn":"Anzahl aller Bestellungen","firstTimeCountColumn":"Anzahl Erstbestellungen","countChart":"Alle Bestellungen","firstTimeCountChart":"Erstbestellungen","returningCountColumn":"Wiederkehrender Kunde","returningPart":"Anteil","firstTimePart":"Anteil"},"orderSales":{"titleTree":"Bestellungen (t\xe4glich)","titleChart":"Umsatz t\xe4glich","dateColumn":"Datum","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesAllInvoice":{"titleTree":"Bestellungen (t\xe4glich)","titleChart":"Bestellungen/Umsatz (netto) t\xe4glich nach Rechnungsdatum","quantityColumn":"Anzahl Artikel","sumNetAverageColumn":"\xd8 Umsatz netto","quantityAverageColumn":"\xd8 Anzahl Artikel"},"salesAllPwreturn":{"titleTree":"Bestellungen mit Refunds (t\xe4glich)","titleChart":"Umsatz (brutto) t\xe4glich nach Pickware Refunds/Retouren","newGrossColumn":"Umsatz brutto nach Refund","newQuantityColumn":"Artikel nach Retour","refundColumn":"Refund (brutto)","returnColumn":"Anzahl Artikel Retour"},"orderSalesMonthly":{"titleTree":"Bestellungen (monatlich)","titleChart":"Umsatz monatlich","dateColumn":"Datum","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByMonthPwreturn":{"titleTree":"Bestellungen mit Refunds (monatlich)","titleChart":"Umsatz (brutto) monatlich nach Pickware Refunds/Retouren"},"salesByMonthInvoice":{"titleTree":"Bestellungen (monatlich)","titleChart":"Bestellungen/Umsatz (netto) monatlich nach Rechnungsdatum"},"salesByQuarter":{"titleTree":"Bestellungen (Quartal)","titleChart":"Bestellungen/Umsatz (netto) quartalsweise"},"salesByQuarterInvoice":{"titleTree":"Bestellungen (Quartal)","titleChart":"Bestellungen/Umsatz (netto) quartalsweise nach Rechnungsdatum","dateColumn":"Quartal"},"salesByQuarterPwreturn":{"titleTree":"Bestellungen mit Refunds (Quartal)","titleChart":"Umsatz (brutto) quartalsweise nach Pickware Refunds/Retouren"},"canceledOrdersByMonth":{"titleTree":"Stornierungen (monatlich)","titleChart":"Umsatz Stornierungen monatlich","dateColumn":"Datum","sumColumn":"Umsatz","countColumn":"Anzahl Stornierungen"},"salesByPaymentMethod":{"titleTree":"Umsatz nach Zahlungsart","titleChart":"Umsatz nach Zahlungsart","nameColumn":"Zahlungsart","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesBySaleschannel":{"titleTree":"Umsatz nach Verkaufskanal","titleChart":"Umsatz nach Verkaufskanal","nameColumn":"Verkaufskanal","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByAffiliate":{"titleTree":"Umsatz nach Partner","titleChart":"Umsatz nach Partner","nameColumn":"Partner Code","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen","nfxLink":"Mehr Infos zu den Coolbax Bestellimport Erweiterungen","description":"Diese Statistik wertet die Spalte affiliate_code der Shopware Datenbanktabelle order aus. Wenn Sie z.B. Bestellungen von Marktpl\xe4tzen, wie Amazon, Ebay, Otto, Kaufland oder Etsy mit Hilfe der entsprechenen Coolbax Bestellimport Erweiterungen importieren, wird dort der Name des Marktplatzes eingetragen und Sie k\xf6nnen damit die Umatzdaten der Marktpl\xe4tze auswerten."},"salesByCampaign":{"titleTree":"Umsatz nach Kampagne","titleChart":"Umsatz nach Kampagne","nameColumn":"Kampagne Code","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByCustomergroups":{"titleTree":"Umsatz nach Kundengruppe","titleChart":"Umsatz nach Kundengruppe","nameColumn":"Kundengruppe","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByWeekdays":{"titleTree":"Bestellungen nach Wochentag","titleChart":"Umsatz nach Wochentag","nameColumn":"Wochentag","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"salesByTime":{"titleTree":"Bestellungen nach Uhrzeit","titleChart":"Umsatz nach Uhrzeit","nameColumn":"Uhrzeit","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen"},"customerAge":{"titleTree":"Altersverteilung der Kunden","titleChart":"Verteilung der Kunden nach Alter","ageColumn":"Alter","percentColumn":"Prozentanteil","countColumn":"Anzahl Kunden"},"salesByCustomer":{"titleTree":"Umsatzst\xe4rkste Kunden","titleChart":"Umsatzst\xe4rkste Kunden","numberColumn":"Kundennummer","nameColumn":"Kunde","sumColumn":"Umsatz","countColumn":"Anzahl Bestellungen","emailColumn":"Email","lastLoginColumn":"Letztes Login"},"newCustomersByTime":{"titleTree":"Neukundenanmeldungen","titleChart":"Neukundenanmeldungen monatlich","dateColumn":"Monat","sumColumn":"Anzahl aller Neukunden","payingColumn":"Davon haben bereits bestellt","sumChart":"Alle Neukunden","payingChart":"Neukunden mit Bestellungen"},"ordersByStatus":{"titleTree":"Bestellungen nach Bestellstatus","titleChart":"Bestellungen nach Bestellstatus","nameColumn":"Bestellstatus","sumColumn":"Anzahl Bestellungen","salesColumn":"Umsatz"},"ordersByTransactionStatus":{"titleTree":"Bestellungen nach Zahlungsstatus","titleChart":"Bestellungen nach Zahlungsstatus","nameColumn":"Zahlungsstatus","sumColumn":"Anzahl Bestellungen","salesColumn":"Umsatz"},"ordersByDeliveryStatus":{"titleTree":"Bestellungen nach Lieferstatus","titleChart":"Bestellungen nach Lieferstatus","nameColumn":"Lieferstatus","sumColumn":"Anzahl Bestellungen","salesColumn":"Umsatz"},"salesByPromotion":{"titleTree":"Rabatte mit Aktionscode/Gutscheine","titleChart":"Umsatz nach Gutschein","titleGridCode":"Gutscheine - gruppiert nach Aktionscode","titleGridPromotion":"Gutscheine - gruppiert nach Rabattaktion","nameColumn":"Rabattname","codeColumn":"Aktionscode","discountColumn":"Rabattwert","countColumn":"Eingel\xf6st","avgColumn":"\xd8 Bestellwert","avgColumnExport":"Durchschnittlicher Bestellwert","sumColumn":"Umsatz"},"salesByPromotionOthers":{"titleTree":"Sonstige Rabatte","titleChart":"Umsatz nach Rabatt","nameColumn":"Rabattname","discountColumn":"Rabattwert","countColumn":"Angewendet","avgColumn":"\xd8 Bestellwert","avgColumnExport":"Durchschnittlicher Bestellwert","sumColumn":"Umsatz"},"chartSelection":{"selectLabel":"Chart Typ","placeholder":"Chart ausblenden","bar":"Bar Chart","pie":"Pie Chart","donut":"Donut Chart"},"chartDataSelection":{"selectLabel":"Chart Daten","placeholder":"","sales":"Umsatz Chart","count":"Anzahl Verk\xe4ufe Chart"},"productImpressions":{"titleTree":"Produktimpressionen","titleChart":"Alle Produktimpressionen","numberColumn":"Produktnummer","nameColumn":"Produktname","sumColumn":"Alle Impressionen","sum1Column":"Impressionen (angemeldet)","sum2Column":"Impressionen (nicht angemeldet)","dateColumn":"Datum","total":"Summe aller Produktimpressionen:","description":"Ausgewertet werden s\xe4mtliche angeklickten Produkte (keine Auswertung anhand der Besucher). Kundengruppenfilter werden bei den Impressionen der angemeldeten Besucher ber\xfccksichtigt, damit auch bei allen, aber nicht bei nicht angemeldeten."},"lexiconImpressions":{"titleTree":"Lexikon/Glossar Impressionen","titleChart":"Lexikon/Glossar Impressionen","countColumn":"Impressionen","nameColumn":"Titel","total":"Summe aller Lexikon/Glossar Impressionen : ","description":"Falls es trotz aktivem Coolbax Lexikon Plugin hier keine Daten gibt, k\xf6nnte es folgende Ursachen haben:\\n\\n- Javascript Fehler im Frontend k\xf6nnten verhindern, dass das JS zur Datenerfassung ausgef\xfchrt wird. Bitte Browser Konsole checken!\\n- Der Twig Block base_body_script in der base.html.twig Datei wird von einem Plugin oder dem Theme \xfcberschrieben. In diesen Block h\xe4ngt das Plugin f\xfcr die Datenerfassung notwendigen Code ein.","nolplugin":{"swLink":"Zum Plugin im Shopware Store","nfxLink":"Plugin Infos bei coolbax.de","alert":"F\xfcr diese Statistik stehen leider keine Daten zur Verf\xfcgung. Die ben\xf6tigten Daten kommen vom Coolbax Plugin \'Lexikon / Glossar Professionell\'."}},"singleProduct":{"titleChart":"Verk\xe4ufe","titleClicksChart":"Klicks","titleTree":"Einzel-Produkt-Statistiken","dateColumn":"Datum","countColumn":"Verk\xe4ufe","clicksColumn":"Klicks","productSelect":{"label":"Produkt ausw\xe4hlen","placeholder":"Kein Produkt ausgew\xe4hlt"},"compareSelect":{"label":"Produkte zum Vergleich ausw\xe4hlen","placeholder":"Keine Produkte ausgew\xe4hlt"}},"visitors":{"titleTree":"Besucher","titleChart":"Besucher","desktopColumn":"Desktop Besucher","mobileColumn":"Mobile Besucher","tabletColumn":"Tablet Besucher","dateColumn":"Datum","totalVisitors":"Gesamt Besucher","description":"Statistik \xfcber die einzigartigen Besucher im Shop: Alle Besucher werden gez\xe4hlt, egal ob angemeldet oder nicht. Daher wird der Filter f\xfcr Kundengruppen hier auch nicht ber\xfccksichtigt. Ein wiederkehrender Besucher wird als neu gez\xe4hlt nach Ablauf der in den Plugin-Einstellungen eingetragenen Zeit (Standard 12 Stunden). Per Botfilter wird versucht, nur echte Besucher zu erfassen. Funktioniert ohne Cookies.\\n\\nFalls es hier keine Daten gibt, k\xf6nnte es folgende Ursachen haben:\\n- Javascript Fehler im Frontend k\xf6nnten verhindern, dass das JS zur Besuchererfassung ausgef\xfchrt wird. Bitte Browser Konsole checken!\\n- Der Twig Block base_body_script in der base.html.twig Datei wird von einem Plugin oder dem Theme \xfcberschrieben. In diesen Block h\xe4ngt das Plugin f\xfcr die Besuchererfassung notwendigen Code ein."},"visitorImpressions":{"titleTree":"Seitenimpressionen","titleChart":"Seitenimpressionen","desktopColumn":"Desktop Impressionen","mobileColumn":"Mobile Impressionen","tabletColumn":"Tablet Impressionen","dateColumn":"Datum","totalVisitors":"Gesamt Impressionen","description":"Ausgewertet werden s\xe4mtliche angeklickten Seiten (keine Auswertung anhand der Besucher). Kundengruppen werden auch nicht ber\xfccksichtigt, da nicht auf Kunden Login gepr\xfcft wird."},"customerOnline":{"titleTree":"Derzeit im Shop","timeColumn":"Zeitraum","visitorsColumn":"Besucher im Shop","loginsColumn":"Kunden Logins","4h":"In den letzen 4 Stunden","2h":"In den letzen 2 Stunden","1h":"In der letzen Stunde","30min":"In den letzen 30 Minuten","10min":"In den letzen 10 Minuten","description":"Wenn hier keine Daten erscheinen, k\xf6nnte das folgende Gr\xfcnde haben:\\n - Die globale PHP Variable session.save_path ist nicht korrekt gesetzt.\\n - Sie verwenden Redis f\xfcr die Sessions, Redis Unterst\xfctzung ist f\xfcr ein k\xfcnftiges Update geplant."},"referer":{"titleTree":"Besucher Zugriffsquellen","titleChart":"Besucher Zugriffsquellen","deviceTypeColumn":"Device","countedColumn":"Gesamt","dateColumn":"Datum","refererColumn":"Zugriffsquellen","description":"Ausgewertet werden neue Besucher, die einen Referrer Eintrag im Header des Request haben. Alternativ kann der Referrer auch \xfcber die URL \xfcbertragen werden, z.B. bei Links zum Shop in Blog Eintr\xe4gen. Dann bitte folgendes an die URL anh\xe4ngen: ?referer=Name. Name steht dabei f\xfcr die Kennung des Referrers."},"categoryImpressions":{"titleTree":"Kategorieimpressionen","titleChart":"Alle Kategorieimpressionen","nameColumn":"Kategoriename","sumColumn":"Alle Impressionen","sum1Column":"Impressionen (angemeldet)","sum2Column":"Impressionen (nicht angemeldet)","dateColumn":"Datum","total":"Summe aller Kategorieimpressionen:","description":"Ausgewertet werden s\xe4mtliche angeklickten Kategorien (keine Auswertung anhand der Besucher). Kundengruppenfilter werden bei den Impressionen der angemeldeten Besucher ber\xfccksichtigt, damit auch bei allen, aber nicht bei nicht angemeldeten."},"manufacturerImpressions":{"titleTree":"Herstellerimpressionen","titleChart":"Alle Herstellerimpressionen","nameColumn":"Herstellername","sumColumn":"Alle Impressionen","sum1Column":"Impressionen (angemeldet)","sum2Column":"Impressionen (nicht angemeldet)","dateColumn":"Datum","total":"Summe aller Herstellerimpressionen:","description":"Ausgewertet werden die Hersteller von s\xe4mtlichen angeklickten Produkten (keine Auswertung anhand der Besucher). Kundengruppenfilter werden bei den Impressionen der angemeldeten Besucher ber\xfccksichtigt, damit auch bei allen, aber nicht bei nicht angemeldeten."},"customerBySalutation":{"titleTree":"Kunden nach Anrede","titleChart":"Kunden nach gew\xe4hlter Anrede","nameColumn":"Anrede","countColumn":"Anzahl Kunden","percentColumn":"Anteil"},"salesBySalutation":{"titleTree":"Umsatz nach Anrede","titleChart":"Umsatz nach gew\xe4hlter Anrede","nameColumn":"Anrede","countColumn":"Anzahl Bestellungen","sumColumn":"Umsatz"},"salesByTaxrate":{"titleTree":"Umsatz nach Steuerrate","titleChart":"Umsatz nach Steuerrate *","taxRateColumn":"Steuerrate","taxColumn":"Steuer *","sumColumn":"Umsatz *","description":"*) Das Statistik Plugin ist kein Ersatz f\xfcr eine Buchhaltung. Die Exakheit aller Daten kann nicht gerantiert werden!"}},"data":{"others":"alle weiteren"},"weekdays":{"monday":"Montag","tuesday":"Dienstag","wednesday":"Mittwoch","thursday":"Donnerstag","friday":"Freitag","saturday":"Sonnabend","sunday":"Sonntag"}},"sw-privileges":{"permissions":{"nfxAnalytics":{"label":"Coolbax Statistik"},"nfxAnalyticsDashboard":{"label":"Coolbax Dashboard Statistik"}}},"sw-order":{"filters":{"promotionCodeFilter":{"label":"Gutschein-Code","placeholder":"Gutschein Code ausw\xe4hlen"}}}}'),ah=JSON.parse('{"nfx-analytics":{"general":{"name":"nfx-analytics","title":"Magic Analytics","description":"Administration of Statistic entries","navigationLabel":"Magic Analytics","treeHeadline":"Navigation","placeholderSearchBar":"Search all statistics entries ...","help":"Help","favorites":"Favorites","manualLink":"Manual","coolbaxLink":"More nfx:MEDIA Plugins","changeTheme":"Change Theme"},"index":{"labelActionExport":"CSV Export","noData":"No data available","title":"Magic Analytics","subtitle":"Advanced shop analytics and business intelligence","orderGridTitle":"Orders Of The Statistics: ","productGridTitle":"Products Of The Statistcs: ","goToOrderDetail":"To the SW order detail view","goToProductDetail":"To the SW product detail view","emptyStateHeadline":"Select a statistics on the left","emptyPropertyGroupHeadline":"Please, select a property group!","emptyStreamHeadline":"Please, select a dynamic product group!","emptyProductHeadline":"Please, select a product!","emptyCategoryHeadline":"Please, select a category!","labelSidebarFilter":"Filters","labelSidebarMoreFilter":"Additional Specific Filters","labelSidebarFilterOptions":"Main Filters","labelSidebarExport":"Start Export","labelSidebarExportBar":"CSV Export","labelSidebarProductSearchBar":"Product Search","labelSidebarProductSearch":"Select products","labelSidebarProductSearchStart":"Search","dates":{"from":"from:","to":"to:"},"sums":"Sumeries","smartBarActions":{"settings":"Settings","download":"Download Report"}},"stats":{"totalOrders":"Total Orders","totalRevenue":"Total Revenue","totalCustomers":"Total Customers","conversionRate":"Conversion Rate"},"filters":{"title":"Filters","dateRange":"Date Range","salesChannel":"Sales Channel","selectDateRange":"Select date range","selectSalesChannel":"Select sales channel"},"charts":{"salesOverTime":"Sales Over Time","topProducts":"Top Products"},"sidebar":{"categories":"Categories"},"dashboard":{"settingsTitel":"Settings","save":"Save","showChart":"Show chart","showTable":"Show grid","position":"Position","title":"Statistics","dateRanges":{"90Days":"Last 90 days","30Days":"Last 30 days","14Days":"Last 14 days","7Days":"Last 7 days","yesterday":"Since yesterday"}},"product":{"avPrice":"\xd8 Price","sales":"Turnover","productNumber":"Productnumber"},"order":{"profitColumn":"Profit","info":"Profit is calculated based on the net prices of the products in the order (minus promotional discounts) and the net purchase prices, so it will not work if purchase prices are not maintained for all products. Shipping costs are not considered."},"component":{"displayOptions":{"showVariantParent":"Sum up variants","dateFrom":"From","dateTo":"To","dateRanges":{"label":"Time period","365Days":"Last 365 days","180Days":"Last 180 days","90Days":"Last 90 days","30Days":"Last 30 days","14Days":"Last 14 days","7Days":"Last 7 days","yesterday":"Since yesterday","userdefined":"User defined","currentWeek":"Current week","lastWeek":"Last week","currentMonth":"Current month","lastMonth":"Last month","currentQuarter":"Current quarter","lastQuarter":"Last quarter","currentYear":"Current year","lastYear":"Last year"},"refreshButton":"Refresh","saleschannel":{"label":"Sales Channels","placeholder":"All Sales Channels"},"customerGroup":{"label":"Customer Groups","placeholder":"Alle Customer Groups"},"product":{"label":"Products","placeholder":"Select a product"},"manufacturer":{"label":"Manufacturer","placeholder":"Select a manufacturer"},"affiliate":{"label":"Affiliate Code","placeholder":"Select an affiliate code"},"notaffiliate":{"label":"Has NOT affiliate code"},"campaign":{"label":"Campaign Code","placeholder":"Select a campaign code"},"promotion":{"label":"Promotion-Code","placeholder":"Select a promotion code"}},"tree":{"headline":"Navigation"}},"view":{"noAffiliate":"No affiliate code","noCampaign":"No campaign","productsOnlyInfo":"In calculating revenue, only the prices of the products are taken into account, excluding discount vouchers or shipping costs.","fullOrderInfo":"In calculating revenue, the total prices of the orders are taken into account, including discount vouchers or shipping costs.","invoiceOrderInfo":"The orders are grouped by invoice date, so orders without an invoice will not be considered. The invoice date is recorded in a separate database table when the invoice is created, but only if the switch \'Record additional order data if possible\' is enabled in the plugin settings. Otherwise, no data is shown here.","dateColumn":"Date","goToOrdersTip":"Show underlying orders","goToProductsTip":"Show underlying products","goToOrders":"Show underlying orders","goToProducts":"Show underlying products","countColumn":"Number Of Orders","countColumnShort":"Orders","sumColumn":"Sales","productNumberColumn":"Product Number","productNameColumn":"Product Name","categoryNameColumn":"Category","salesCountColumn":"Numbers Sold","conversionColumn":"Conversion rate","detectionNote":" *) The detections of device, browser or OS are not always precise. So, the data can only be a regarded as rough estimation! Also, marketplace orders are not included.","productProfitNote":" *) No price rules, price changes or the like are taken into account in the calculation. Therefore, the actual winnings may differ. These statistics only give an approximate overview of the profitability of the individual products.","net":" (net)","gross":" (gross)","manufacturer":"Manufacturer","stock":"Stock","groups":{"sales":"Sales","customers":"Customers","products":"Products","marketing":"Marketing","orders":"Orders","lexicon":"Lexicon","unfinished":"Cancellation Analysis","visitors":"Visitors and Page Clicks","invoice":"By Invoice Date","pwreturn":"With Pickware Erp Pro - Return"},"overallCount":{"label":"Overall number : "},"overall":{"label":"Overall Sum :   ","sales":{"label":"Sales :   "},"sold":{"label":"Number sold :   "},"productCount":{"label":"Number of offered products :   "}},"streamSelect":{"label":"Dynamic Product Group Selection","placeholder":"Please, select a dynamic product group!"},"propertyGroupSelect":{"label":"Property Value Selection","placeholder":"Please, select property value!"},"categorySelect":{"label":"Category Selection (optional)","labelNotOptional":"Category Selection","placeholder":"Restrict products to this category!","placeholderMulti":"Select at least 2 categories"},"sortingSelect":{"label":"Sorting","placeholder":"Sorting","worthASC":"Stock Worth ascending","worthDESC":"Stock Worth descending","nameASC":"Product Name ascending","nameDESC":"Product Name descending","stockASC":"Stock ascending","stockDESC":"Stock descending","ppriceASC":"Purchase Price ascending","ppriceDESC":"Purchase Price descending","numberASC":"Product Number ascending","numberDESC":"Product Number descending","cpriceASC":"Sales Price ascending","cpriceDESC":"Sales Price descending","profitASC":"Product Profit ascending","profitDESC":"Product Profit descending","markUpASC":"Mark-Up ascending","markUpDESC":"Mark-Up descending","countASC":"Number of Sales ascending","countDESC":"Number of Sales descending"},"quickOverview":{"titleTree":"Quick Overview","titleChart":"Quick Overview","dateColumn":"Date","orderCountColumn":"Orders","salesColumn":"Sales (gross)","avgSalesColumn":"\xd8 Order Value","avgSalesColumnExport":"Average Order Value","nettoSalesColumn":"Sales (net)","newCustomersColumn":"New Customers*","newPayingCustomersColumn":"With Orders*","firstTimeCountColumn":"First Time Orders*","visitorsColumn":"Visitors","impressionsColumn":"Clicks","description":"*)\\nNew customers:  Number of customers in the database which were created that day.\\nFirst Time Orders:  Number of orders from customers, who never ordered something before that day.\\nWith Orders:  Number of customers among the new customers of that day, who have at least one completed order in the database until today."},"salesByCategory":{"titleTree":"Sales Of A Category","titleChart":"Sales Of A Category","info":"For categories with manual product assignment, the subcategories are also included. This does not currently apply to categories with assignment via a product stream.\\nIn calculating revenue, only the prices of the products are taken into account, excluding discount vouchers or shipping costs."},"categoryCompare":{"titleTree":"Sales By Categories","titleChart":"Sales By Categories"},"salesByAccountTypes":{"titleTree":"Sales By Buyer Type","titleChart":"Sales By Buyer Type","guest":"Guest","nonguest":"Registered","nameColumn":"Type"},"conversionAll":{"titleTree":"Conversion (daily)","titleChart":"Conversion (daily) *","visitorsColumn":"Visitors","conversionColumn":"Conversion rate","conversionPercentColumn":"Conversion rate %","description":"Please note: Visitors are only filtered by sales channel. For orders, all set filters apply. These should be chosen so that only orders from the shop are considered, not imported orders, such as those from Amazon. These would distort the conversion rate. The Not-Affiliate-Code filter does not apply for the link to the related orders."},"conversionByMonth":{"titleTree":"Conversion (monthly)","titleChart":"Conversion (monthly) *","visitorsColumn":"Visitors","conversionColumn":"Conversion rate","conversionPercentColumn":"Conversion rate %","description":"Please note: Visitors are only filtered by sales channel. For orders, all set filters apply. These should be chosen so that only orders from the shop are considered, not imported orders, such as those from Amazon. These would distort the conversion rate. The Not-Affiliate-Code filter does not apply for the link to the related orders. Months without visitor data are not displayed, for example, if older visitor data is automatically deleted according to the plugin settings."},"crossSelling":{"name":"Product","viewed":"Views","sales":"Sales","titleTree":"Cross Selling","headlineViews":"Also viewed in one session *","headlineSales":"Also bought in one order *","crossSellings":"Cross-Sellings","description":"*) The filter settings will not be applied","nolplugin":{"swLink":"To the plugin in the Shopware Store","nfxLink":"Plugin info at coolbax.de","alert":"Unfortunately, no data is available for these statistics. The required data comes from the Coolbax plugin \'Cross Selling Professionall\'."}},"searchTerms":{"titleTree":"Popular Search Terms","titleChart":"Popular Search Terms","searchTermColumn":"Search term","countColumn":"Requests","resultsColumn":"Results","salesChannelNameColumn":"Saleschannel","description":"If there is no data here, the possible causes could be:\\n\\n- JavaScript errors in the frontend might prevent the data collection JS from being executed. Please check the browser console!\\n- The Twig block base_body_script in the base.html.twig file is being overridden by a plugin or theme. The code necessary for data collection is inserted into this block by the plugin."},"searchActivity":{"titleTree":"Search Activity (daily)","titleChart":"Search Activity (daily)","countColumn":"Requests","dateColumn":"Date"},"salesByManufacturer":{"titleTree":"Sales By Manufacturer","titleChart":"Sales By Manufacturer","nameColumn":"Manufacturer","countColumn":"Articles Sold","sumColumn":"Sales"},"salesByDevice":{"titleTree":"Sales By Device","titleChart":"Sales By Device*","nameColumn":"Device","countColumn":"Number of orders*","sumColumn":"Sales*"},"salesByOs":{"titleTree":"Sales By Operating System","titleChart":"Sales By Operating System*","nameColumn":"Operating System","countColumn":"Number of orders*","sumColumn":"Sales*"},"salesByBrowser":{"titleTree":"Sales By Browser","titleChart":"Sales By Browser*","nameColumn":"Browser","countColumn":"Number of orders*","sumColumn":"Sales*"},"unfinishedOrders":{"titleTree":"All Aborted Carts","titleChart":"All Aborted Carts","dateColumn":"Date","salesColumn":"Total","nameColumn":"Customer","paymentColumn":"Payment Method","itemCountColumn":"Articles","positionColumn":"Positions","emailColumn":"Email","phoneColumn":"Phone","salesChannelColumn":"Saleschannel","description":"This statistic analyzes the data from the Shopware database table \'cart\', where Shopware stores the started shopping carts. This data is deleted upon completion of purchase or by Shopware after 90 days. Only data from logged-in customers is considered. It is possible that other plugins also write data to this table, which would distort this statistic.\\nWhen using Redis for the cart table, the data cannot be retrieved. Redis support is planned for a future update.","modal":{"title":"Cart items","labelColumn":"Label","quantityColumn":"Quantity","unitPriceColumn":"Unit price","totalPriceColumn":"Total price","typeColumn":"Type"}},"unfinishedOrdersByPayment":{"titleTree":"Aborted Carts By Payment Method","titleChart":"Aborted Carts By Payment Method","sumColumn":"Number Of Carts","salesColumn":"Total","nameColumn":"Payment Method"},"unfinishedOrdersByCart":{"titleTree":"Aborted Carts (daily)","titleChart":"Aborted Carts daily","dateColumn":"Date","countColumn":"Number Of Carts","salesColumn":"Total","avgColumn":"\xd8 Order Value","avgColumnExport":"Average Order Value","itemCountColumn":"Products","positionColumn":"Positions","avgItemCountColumn":"\xd8 Products"},"salesByProducts":{"titleTree":"Sales By Products","titleChart":"Sales By Products","numberColumn":"Product Number","nameColumn":"Product Name","salesColumn":"Sales","sumColumn":"Numbers Sold","orderCount":"Number of Orders","priceAV":"\xd8 Price","info":"Numbers Sold represents the total number of units sold of the product. Number of Orders refers to the orders that contain this product. Stock shows nothing when variants are grouped in the displayed parent products."},"salesByProductsPwreturn":{"titleTree":"Numbers Sold With Returns","titleChart":"Numbers Sold With Returns","returnSumColumn":"Number Returned","newSumColumn":"Number Sold after Return"},"pickwareReturns":{"titleTree":"Product Returns","titleChart":"Product Returns","returnSumColumn":"Number Returned","partColumn":"Proportion"},"variantsCompare":{"titleTree":"Variants Sales","titleChart":"Variants Sales","productCountColumn":"Number of Products","nameColumn":"Property","salesColumn":"Sales","sumColumn":"Numbers Sold"},"countByProducts":{"titleTree":"Products By Sold Numbers","titleChart":"Products By Sold Numbers","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Numbers Sold"},"productByOrders":{"titleTree":"Number Of Orders With Product","titleChart":"Number Of Orders With Product","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Number Of Orders"},"productsInventory":{"titleTree":"Inventory","titleChart":"Products Inventory","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Stock","ppriceColumn":"Purchase Price","worthColumn":"Stock Worth"},"productsProfit":{"titleTree":"Profits","titleChart":"Products Profits*","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Sold","ppriceColumn":"Purchase Price","cpriceColumn":"Sales Price","profitColumn":"Product Profit*","markUp":"Mark-Up","hideNoSales":"hide without sales"},"productStream":{"titleTree":"Sales By Products in Product Stream","titleChart":"Sales By Products in Product Stream","numberColumn":"Product Number","nameColumn":"Product Name","salesColumn":"Sales","sumColumn":"Numbers Sold"},"salesByProductsFilter":{"titleTree":"Sales By Products With Filters","titleChart":"Sales By Products With Filters","numberColumn":"Product Number","nameColumn":"Product Name","salesColumn":"Sales","sumColumn":"Numbers Sold"},"productLowInstock":{"titleTree":"With Low Stock","titleChart":"Products With Low Stock","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Stock"},"productHighInstock":{"titleTree":"With High Stock","titleChart":"Products With High Stock","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Stock"},"productSoonOutstock":{"titleTree":"To Run Out Of Stock","titleChart":"Products To Run Out Of Stock","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Days To Run Out Of Stock","stockColumn":"Stock","soldColumn":"Sold (number)*","description":"Based on the plugin setting \'Number of days to calculate average sales for calculating stock lasting days\': "},"productInactiveWithInstock":{"titleTree":"Inactive With Stock","titleChart":"Inactive Products With Stock","numberColumn":"Product Number","nameColumn":"Product Name","sumColumn":"Stock"},"salesByShippingMethod":{"titleTree":"Sales By Shipping Method","titleChart":"Sales By Shipping Method","nameColumn":"Shipping method","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByCountry":{"titleTree":"Sales By Destination Country","titleChart":"Sales By Destination Country","nameColumn":"Country","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByBillingCountry":{"titleTree":"Sales By Billing Country","titleChart":"Sales By Billing Country","nameColumn":"Country","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByBillingCountryInvoice":{"titleTree":"Sales By Billing Country","titleChart":"Sales By Billing Country (by invoice date)"},"salesByLanguage":{"titleTree":"Sales By Language","titleChart":"Sales By Language","nameColumn":"Language","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByCurrency":{"titleTree":"Sales By Currency","titleChart":"Sales By Currency","nameColumn":"Currency","sumColumn":"Sales","countColumn":"Number Of Orders"},"orderCountAll":{"titleTree":"First Time Orders (daily)","titleChart":"Order Count Daily","dateColumn":"Date","countColumn":"Number Of All Orders","firstTimeCountColumn":"Number Of First Time Orders","countChart":"All Orders","firstTimeCountChart":"First Time Orders","returningCountColumn":"Returning customer","returningPart":"Percentage","firstTimePart":"Percentage"},"orderSales":{"titleTree":"Orders (daily)","titleChart":"Sales daily","dateColumn":"Date","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesAllInvoice":{"titleTree":"Orders (daily)","titleChart":"Sales (net) daily by invoice date","quantityColumn":"Number of articles","sumNetAverageColumn":"\xd8 Sales net","quantityAverageColumn":"\xd8 Number of articles"},"salesAllPwreturn":{"titleTree":"Orders with returns (daily)","titleChart":"Sales (gross) daily after Pickware refunds/returns","newGrossColumn":"Sales gross after refund","newQuantityColumn":"Number returned","refundColumn":"Refund (gross)","returnColumn":"Number sold after returns"},"orderSalesMonthly":{"titleTree":"Orders (monthly)","titleChart":"Sales monthly","dateColumn":"Date","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByMonthPwreturn":{"titleTree":"Orders with returns (monthly)","titleChart":"Sales (gross) monthly after Pickware refunds/returns"},"salesByMonthInvoice":{"titleTree":"Orders (monthly)","titleChart":"Sales (net) monthly by invoice date"},"salesByQuarter":{"titleTree":"Orders (quarterly)","titleChart":"Sales (net) quarterly"},"salesByQuarterInvoice":{"titleTree":"Orders (quarterly)","titleChart":"Sales (net) quarterly by invoice date","dateColumn":"Quarter"},"salesByQuarterPwreturn":{"titleTree":"Orders with returns (quarterly)","titleChart":"Sales (gross) quarterly after Pickware refunds/returns"},"canceledOrdersByMonth":{"titleTree":"Cancellations (monthly)","titleChart":"Cancellations Total monthly","dateColumn":"Date","sumColumn":"Total","countColumn":"Number Of Cancellations"},"salesByPaymentMethod":{"titleTree":"Sales By Payment Method","titleChart":"Sales By Payment Method","nameColumn":"Payment method","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesBySaleschannel":{"titleTree":"Sales By Saleschannel","titleChart":"Sales By Saleschannel","nameColumn":"Saleschannel","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByAffiliate":{"titleTree":"Sales By Affiliate","titleChart":"Sales By Affiliate","nameColumn":"Affiliate Code","sumColumn":"Sales","countColumn":"Number Of Orders","nfxLink":"More information about the Coolbax order import extensions","description":"This statistic evaluates the \'affiliate_code\' column of the Shopware database table \'order\'. For instance, when importing orders from marketplaces such as Amazon, Ebay, Otto, Kaufland, or Etsy using the corresponding Coolbax order import extensions, the name of the marketplace is entered there. So, you can use this statistics to analyze the sales data from the marketplaces."},"salesByCampaign":{"titleTree":"Sales By Campaign","titleChart":"Sales By Campaign","nameColumn":"Campaign Code","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByCustomergroups":{"titleTree":"Sales By Customer Group","titleChart":"Sales By Customer Group","nameColumn":"Customer Group","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByWeekdays":{"titleTree":"Orders By Weekday","titleChart":"Sales By Weekday","nameColumn":"Weekday","sumColumn":"Sales","countColumn":"Number Of Orders"},"salesByTime":{"titleTree":"Orders By Time Of Day","titleChart":"Sales By Time Of Day","nameColumn":"Time Of Day","sumColumn":"Sales","countColumn":"Number Of Orders"},"customerAge":{"titleTree":"Customer Age Distribution","titleChart":"Customer Distribution By Age","ageColumn":"Age","percentColumn":"Percent","countColumn":"Number Of Customers"},"salesByCustomer":{"titleTree":"Best Customer By Turnover","titleChart":"Customer By Turnover","numberColumn":"Customer Number","nameColumn":"Customer","sumColumn":"Sales","countColumn":"Number Of Orders","emailColumn":"Email","lastLoginColumn":"Last Login"},"newCustomersByTime":{"titleTree":"New Customer Registrations","titleChart":"New Customer Registrations Monthly","dateColumn":"Month","sumColumn":"Number Of All New Customers","payingColumn":"Of Which Have Already Ordered","sumChart":"All new customers","payingChart":"New customers with orders"},"ordersByStatus":{"titleTree":"Orders By Order Status","titleChart":"Orders By Order Status","nameColumn":"Order Status","sumColumn":"Number Of Orders","salesColumn":"Sales"},"ordersByTransactionStatus":{"titleTree":"Orders By Transaction Status","titleChart":"Orders By Transaction Status","nameColumn":"Transaction Status","sumColumn":"Number Of Orders","salesColumn":"Sales"},"ordersByDeliveryStatus":{"titleTree":"Orders By Delivery Status","titleChart":"Orders By Delivery Status","nameColumn":"Delivery Status","sumColumn":"Number Of Orders","salesColumn":"Sales"},"salesByPromotion":{"titleTree":"Promotions With Promotion Code","titleChart":"Sales By Promotions","titleGridCode":"Promotions - grouped by promotion code","titleGridPromotion":"Promotions - grouped by promotion action","nameColumn":"Promotion Name","codeColumn":"Promotion code","discountColumn":"Promotion Value","countColumn":"Redemptions","avgColumn":"\xd8 Order Value","avgColumnExport":"Average Order Value","sumColumn":"Sales"},"salesByPromotionOthers":{"titleTree":"Other Promotions","titleChart":"Sales By Promotions","nameColumn":"Promotion Name","discountColumn":"Promotion Value","countColumn":"Redemptions","avgColumn":"\xd8 Order Value","avgColumnExport":"Average Order Value","sumColumn":"Sales"},"chartSelection":{"selectLabel":"Chart Type","placeholder":"Hide chart","bar":"Bar Chart","pie":"Pie Chart","donut":"Donut Chart"},"chartDataSelection":{"selectLabel":"Chart Data","placeholder":"","sales":"Sales Chart","count":"Numbers Sold Chart"},"productImpressions":{"titleTree":"Product impressions","titleChart":"All Product impressions","numberColumn":"Product number","nameColumn":"Product name","sumColumn":"All Impressions","sum1Column":"Impressions (logged in)","sum2Column":"Impressions (not logged in)","dateColumn":"Date","total":"Total of all product impressions:","description":"All clicked products are evaluated (no evaluation based on visitors). Customer groups filter are taken into account for the logged in column and hence for the all column, but not for the not logged in column."},"lexiconImpressions":{"titleTree":"Lexicon impressions","titleChart":"Lexicon impressions","countColumn":"Impressions","nameColumn":"Title","total":"Total of all lexicon impressions : ","description":"If there is no data here despite the Coolbax Lexicon Plugin being active, the possible causes could be:\\n\\n- JavaScript errors in the frontend might prevent the data collection JS from being executed. Please check the browser console!\\n- The Twig block base_body_script in the base.html.twig file is being overridden by a plugin or theme. The code necessary for data collection is inserted into this block by the plugin.","nolplugin":{"swLink":"To the plugin in the Shopware Store","nfxLink":"Plugin info at coolbax.de","alert":"Unfortunately, no data is available for these statistics. The required data comes from the Coolbax plugin \'Lexicon / Glossary Professional\'."}},"singleProduct":{"titleChart":"Sales","titleClicksChart":"Clicks","titleTree":"Single Product Statistics","dateColumn":"Date","countColumn":"Sales","clicksColumn":"Clicks","productSelect":{"label":"Select product","placeholder":"No Product selected"},"compareSelect":{"label":"Select products for comparison","placeholder":"No products selected"}},"visitors":{"titleTree":"Visitors","titleChart":"Visitors","desktopColumn":"Desktop visitors","mobileColumn":"Mobile visitors","tabletColumn":"Tablet visitors","dateColumn":"Date","totalVisitors":"Total visitors","description":"Statistics about unique visitors in the shop: All visitors are counted, whether logged in or not. Therefore, the filter for customer groups is not taken into account here. A returning visitor is counted as new after the time specified in the plugin settings has elapsed (default 12 hours). A bot filter is used to try to capture only real visitors. Works without cookies.\\n\\nIf there is no data here, it could be due to the following reasons:\\n- JavaScript errors in the frontend might prevent the visitor tracking JS from being executed. Please check the browser console!\\n- The Twig block base_body_script in the base.html.twig file is being overridden by a plugin or theme. The code necessary for visitor tracking is inserted into this block by the plugin."},"visitorImpressions":{"titleTree":"Page impressions","titleChart":"Page impressions","desktopColumn":"Desktop impressions","mobileColumn":"Mobile impressions","tabletColumn":"Tablet impressions","dateColumn":"Date","totalVisitors":"Page impressions*","description":"All clicked pages are evaluated (no evaluation based on visitors). Customer groups are also not taken into account, since the customer login is not checked."},"customerOnline":{"titleTree":"In the Shop currently","timeColumn":"Time period","visitorsColumn":"Visitors in the shop","loginsColumn":"Customers logins","4h":"In the last 4 hours","2h":"In the last 2 hours","1h":"In the last hour","30min":"In the last 30 minutes","10min":"In the last 10 minutes","description":"If no data appears here, the following reasons could apply:\\n - The global PHP variable session.save_path is not set correctly.\\n - You are using Redis for sessions; Redis support is planned for a future update."},"referer":{"titleTree":"Visitors referrer","titleChart":"Visitors referrer","deviceTypeColumn":"Device","countedColumn":"Total","dateColumn":"Date","refererColumn":"Referrer","description":"New visitors with a referrer entry in the header of the request are evaluated. Alternatively, the referrer can also be transmitted via the URL, e.g., in links to the shop in blog entries. In that case, please append the following to the URL: ?referer=Name. \'Name\' stands for the identifier of the referrer."},"categoryImpressions":{"titleTree":"Category impressions","titleChart":"All Category impressions","nameColumn":"Category name","sumColumn":"All Impressions","sum1Column":"Impressions (logged in)","sum2Column":"Impressions (not logged in)","dateColumn":"Date","total":"Total of all category impressions:","description":"All clicked categories are evaluated (no evaluation based on visitors). Customer groups filter are taken into account for the logged in column and hence for the all column, but not for the not logged in column."},"manufacturerImpressions":{"titleTree":"Manufacturer impressions","titleChart":"All Manufacturer impressions","nameColumn":"Manufacturer name","sumColumn":"All Impressions","sum1Column":"Impressions (logged in)","sum2Column":"Impressions (not logged in)","dateColumn":"Date","total":"Total of all manufacturer impressions:","description":"The manufacturers of all clicked products are evaluated (no evaluation based on visitors). Customer groups filter are taken into account for the logged in column and hence for the all column, but not for the not logged in column."},"customerBySalutation":{"titleTree":"Customer By Salutations","titleChart":"Customer by choosen salutations","nameColumn":"Salutation","countColumn":"Number of Customers","percentColumn":"Percent"},"salesBySalutation":{"titleTree":"Sales By Salutation","titleChart":"Sales by choosen salutations","nameColumn":"Salutation","countColumn":"Number Of Orders","sumColumn":"Sales"},"salesByTaxrate":{"titleTree":"Sales By Tax Rate","titleChart":"Sales by tax rate *","taxRateColumn":"Tax rate","taxColumn":"Tax *","sumColumn":"Sales *","description":"*) The statistics plugin is not a substitute for accounting. The accuracy of all data cannot be guaranteed!"}},"data":{"others":"all others"},"weekdays":{"monday":"Monday","tuesday":"Tuesday","wednesday":"Wednesday","thursday":"Thursday","friday":"Friday","saturday":"Saturday","sunday":"Sunday"}},"sw-privileges":{"permissions":{"nfxAnalytics":{"label":"Coolbax Statistics"},"nfxAnalyticsDashboard":{"label":"Coolbax Dashboard Statistics"}}},"sw-order":{"filters":{"promotionCodeFilter":{"label":"Promotion-Code","placeholder":"Select promotion code"}}}}');Shopware.Module.register("nfx-analytics",{type:"plugin",name:"nfx-analytics.general.name",title:"nfx-analytics.general.title",description:"nfx-analytics.general.description",color:"#ff68b4",icon:"regular-flask",entity:"nfx_analytics_config",snippets:{"de-DE":ap,"en-GB":ah},routes:{index:{components:{default:"nfx-analytics-index"},path:"index",meta:{parentPath:"nfx.analytics.index",privilege:"nfxAnalytics.viewer"}},order:{components:{default:"nfx-analytics-order"},path:"order",meta:{parentPath:"nfx.analytics.index",privilege:"nfxAnalytics.viewer"}},product:{components:{default:"nfx-analytics-product"},path:"product",meta:{parentPath:"nfx.analytics.index",privilege:"nfxAnalytics.viewer"}}},navigation:[{id:"nfx-analytics",label:"nfx-analytics.general.navigationLabel",color:"#ff68b4",icon:"default-object-lab-flask",path:"nfx.analytics.index",position:100,parent:"sw-dashboard",privilege:"nfxAnalytics.viewer"}]});let{Component:au}=Shopware;au.override("sw-dashboard-statistics",{template:'{% block sw_dashboard_statistics %}\n\n    <div>\n        <div v-if="(!nfxActive && !isNfxLoading) || !acl.can(\'nfxAnalyticsDashboard.viewer\')">\n            {% parent %}\n        </div>\n\n        <div v-if="!isNfxLoading && acl.can(\'nfxAnalyticsDashboard.viewer\')">\n            <nfx-analytics-dashboard-settings\n                v-if="nfxActive"\n                @nfx-statistics-settings-modal-closed="resetDashboard($event)"\n                :dateRange="dateRange">\n            </nfx-analytics-dashboard-settings>\n\n            <nfx-analytics-dashboard-statistics\n                v-if="nfxActive && (nfxLocation == \'before\' || nfxLocation == \'replace\')"\n                :nfxAnalyticsConfig="nfxAnalyticsConfig"\n                :dateRange="dateRange">\n            </nfx-analytics-dashboard-statistics>\n        </div>\n\n        <div v-if="nfxActive && nfxLocation != \'replace\'">\n            {% parent %}\n        </div>\n\n        <div v-if="!isNfxLoading && acl.can(\'nfxAnalyticsDashboard.viewer\')">\n            <nfx-analytics-dashboard-statistics\n                v-if="nfxActive && nfxLocation == \'after\'"\n                :nfxAnalyticsConfig="nfxAnalyticsConfig"\n                :dateRange="dateRange">\n            </nfx-analytics-dashboard-statistics>\n        </div>\n    </div>\n\n{% endblock %}\n',inject:["systemConfigApiService","acl"],data(){return{nfxLocation:"before",nfxActive:!1,dateRange:30,dateRangeInit:!1,isNfxLoading:!0,startLoadingNfxData:!1,nfxAnalyticsConfig:null}},methods:{initializeOrderData(){this.acl.can("nfxAnalyticsDashboard.viewer")?this.startLoadingNfxData||null!==this.nfxAnalyticsConfig?(this.isNfxLoading=!1,this.$super("initializeOrderData")):(this.startLoadingNfxData=!0,this.systemConfigApiService.getValues("NfxModulAnalytics.config").then(t=>{this.nfxAnalyticsConfig=t,t["NfxModulAnalytics.config.dashboardActiv"]&&(this.nfxActive=t["NfxModulAnalytics.config.dashboardActiv"]),!this.dateRangeInit&&t["NfxModulAnalytics.config.dashboardDateRange"]&&(this.dateRange=parseInt(t["NfxModulAnalytics.config.dashboardDateRange"],10)),t["NfxModulAnalytics.config.dashboardLocation"]&&(this.nfxLocation=t["NfxModulAnalytics.config.dashboardLocation"]),this.dateRangeInit=!0,this.startLoadingNfxData=!1,this.isNfxLoading=!1,this.$super("initializeOrderData")})):(this.isNfxLoading=!1,this.$super("initializeOrderData"))},resetDashboard(t){this.dateRange=t,this.isNfxLoading=!0,this.$nextTick(()=>{this.isNfxLoading=!1})}}});let{Component:am}=Shopware;am.extend("nfx-analytics-tree-item","sw-tree-item",{template:'{% block sw_tree_item_element_selection %}\n{% endblock %}\n\n{% block sw_tree_item_element_grip %}\n    <slot name="grip">\n        <div\n            v-if="item.childCount > 0 || item.id == 2"\n            class="sw-tree-item__icon"\n        >\n            <sw-icon\n                v-if="item.id == 2"\n                name="solid-star"\n                color="#f39c12"\n                small\n            />\n            <sw-icon\n                v-else-if="opened"\n                name="regular-folder-open"\n                multicolor\n                small\n            />\n            <sw-icon\n                v-else\n                name="regular-folder"\n                multicolor\n                small\n            />\n        </div>\n        <div\n            v-else\n            class="sw-tree-item__icon"\n        >\n            <sw-icon name="regular-circle-xxs" />\n        </div>\n    </slot>\n{% endblock %}\n\n{% block sw_tree_item_element_actions %}\n<div class="sw-tree-item__actions">\n\n    <slot\n            name="actions"\n            :item="item"\n            :open-tree-item="openTreeItem"\n            :add-element="addElement"\n            :delete-element="deleteElement"\n    >\n    </slot>\n</div>\n{% endblock %}\n\n{% block sw_tree_item_children_items %}\n<nfx-analytics-tree-item\n        v-for="child in item.children"\n        :key="child.id"\n        :item="child"\n        :dragged-item="draggedItem"\n        :new-element-id="newElementId"\n        :translation-context="translationContext"\n        :on-change-route="onChangeRoute"\n        :active-parent-ids="activeParentIds"\n        :active-item-ids="activeItemIds"\n        :mark-inactive="markInactive"\n        :sortable="sortable"\n        :should-focus="shouldFocus"\n        :active-focus-id="activeFocusId"\n        :display-checkbox="displayCheckbox"\n        :disable-context-menu="disableContextMenu"\n        :get-is-highlighted="getIsHighlighted"\n        @check-item="emitCheckedItem"\n>\n\n    {% block sw_tree_item_children_items_slots %}\n    <template #content="{ item, openTreeItem, getName: innerGetName }">\n\n        {% block sw_tree_item_children_items_slot_content %}\n            <sw-vnode-renderer\n                    v-if="$scopedSlots.content"\n                    :node="$scopedSlots.content({ item, openTreeItem, getName })"\n            />\n        {% endblock %}\n    </template>\n\n    <template #actions="{ item, openTreeItem }">\n        {% block sw_tree_item_children_items_slot_actions %}\n\n        <sw-vnode-renderer\n                v-if="$scopedSlots.actions"\n                :node="$scopedSlots.actions({ item, openTreeItem })"\n        />\n        <template v-else>\n            <sw-context-button\n                    class="sw-tree-item__context_button"\n                    :disabled="isDisabled"\n            >\n                {% block sw_tree_items_actions_group %}\n                    <div class="sw-context-menu__group">\n\n                        {% block sw_tree_items_actions_add %}\n                            <sw-context-menu-item\n                                    @click="addElement(item)"\n                                    :disabled="item.parentId == 2"\n                            >\n                                {{ $tc(\'Zu Favoriten hinzuf\xfcgen\') }}\n                            </sw-context-menu-item>\n                        {% endblock %}\n\n                        {% block sw_tree_items_actions_delete %}\n                            <sw-context-menu-item\n                                    class="sw-context-menu__group-button-delete"\n                                    variant="danger"\n                                    @click="deleteElement(item)"\n                                    :disabled="item.parentId > 2"\n                            >\n                                {{ $tc(\'global.default.delete\') }}\n                            </sw-context-menu-item>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-context-button>\n        </template>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</nfx-analytics-tree-item>\n{% endblock %}\n',methods:{addElement(t){this.$emit("nfx-analytics-addFavorite",t)},deleteElement(t){this.$emit("nfx-analytics-deleteFavorite",t)}}})}()}();